{
  "headers": {
    "separator": "tab",
    "html": "true"
  },
  "identical_cards": [
    {
      "question": "\" <br>**What is the difference between \"\"Schema on Read\"\" and \"\"Schema on Write\"\" in databases?**\"",
      "answer": "<br><br>**Schema on Write:**<br>- Structure (schema) is defined before data is written to the database.<br>- Common in traditional relational databases (e.g., SQL databases).<br>- Requires data to conform to a predefined schema, ensuring data consistency and integrity.<br>  <br>**Schema on Read:**<br>- Data is stored in raw form, without a predefined schema.<br>- Schema is applied when data is read or queried.<br>- Common in NoSQL databases and big data environments (e.g., Hadoop, MongoDB).<br>- Offers flexibility to handle semi-structured or unstructured data, but can lead to more complex queries.",
      "selected": "file1"
    },
    {
      "question": "\"\"\"Don't test implementation, test ______.\"\"\"",
      "answer": "behaviors",
      "selected": "file1"
    },
    {
      "question": "\"\"\"You can't control the wind..\"",
      "answer": "\".. But you can control your sails.\"\"\"",
      "selected": "file1"
    },
    {
      "question": "\".. But you can control your sails.\"\"\"",
      "answer": "\"\"\"You can't control the wind..\"",
      "selected": "file1"
    },
    {
      "question": "\"<br>In the story of the S3 Bucket Bouncer, who is the \"\"Principal\"\"?<br>\"",
      "answer": "\"The Principal is the person trying to get into the club (S3 bucket). It could be anyone (\"\"*\"\") or a specific identity like a user or role. It answers the question: \"\"Who is the rule about?\"\"<br><br> In AWS (and broader security contexts), the term \"\"principal\"\" comes from identity and access management (IAM) terminology. It\u2019s borrowed from security and law, where a principal is the primary party involved in an action or contract.<br><br>\"",
      "selected": "file1"
    },
    {
      "question": "\"<div><div><b>What are your thoughts on the following code?</b><br></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #c586c0;\"\"><br></span></span></div><div><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #c586c0;\"\">\\```</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #c586c0;\"\">except</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #4ec9b0;\"\">ConstraintException</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #c586c0;\"\">as</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: rgb(156, 220, 254);\"\">e</span><span style=\"\"color: rgb(255, 255, 255);\"\">:</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #dcdcaa;\"\">&nbsp; &nbsp; _rollback</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">e</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #9cdcfe;\"\">conn</span><span style=\"\"color: #ffffff;\"\">)</span></span></div><div><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(34, 34, 34);\"\"> </span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #9cdcfe;\"\">&nbsp; &nbsp; potentially_problematic_rows</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #dcdcaa;\"\">_get_potentially_problematic_rows</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">cursor</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #9cdcfe;\"\">this_chunk_li</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #9cdcfe;\"\">schema</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #9cdcfe;\"\">table</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #9cdcfe;\"\">hash</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #9cdcfe;\"\">hash_index</span><span style=\"\"color: #ffffff;\"\">)</span></span></div><div><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(34, 34, 34);\"\"> </span></div><div><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(34, 34, 34);\"\"> </span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #c586c0;\"\">except</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #4ec9b0;\"\">Exception</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #c586c0;\"\">as</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">e</span><span style=\"\"color: #ffffff;\"\">:</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #dcdcaa;\"\">&nbsp; &nbsp; _rollback</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">e</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #9cdcfe;\"\">conn</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #9cdcfe;\"\">exit</span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #569cd6;\"\">True</span><span style=\"\"color: #ffffff;\"\">)</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #c586c0;\"\">finally</span><span style=\"\"color: #ffffff;\"\">:  </span><span style=\"\"color: #7ca668;\"\"># READ NEXT CHUNK:</span></span></div><div><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(34, 34, 34);\"\"> </span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #7ca668;\"\">&nbsp; &nbsp; # prepend leftover_lines_dict to the lines_to_process</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><font color=\"\"#c586c0\"\">&nbsp; &nbsp;&nbsp;</font></span><span style=\"\"background-color: rgb(34, 34, 34); color: rgb(220, 220, 170);\"\">_process_next_lines(</span><span style=\"\"background-color: rgb(34, 34, 34); color: rgb(156, 220, 254);\"\">lines_to_process</span><span style=\"\"background-color: rgb(34, 34, 34); color: rgb(220, 220, 170);\"\">)&nbsp;&nbsp;</span><span style=\"\"background-color: rgb(34, 34, 34); color: rgb(124, 166, 104);\"\"># THIS ISN'T A REAL FUNCTION. IT'S JUST USED HERE TO SIMPLIFY.</span></div></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #9cdcfe;\"\">\\```</span></span></div>\"",
      "answer": "Finally should never be used for doing anything other than cleanup.<br><br>If a function within finally raises an exception then it will get lost. The code will continue to run.",
      "selected": "file1"
    },
    {
      "question": "\"<div><div><span style=\"\"color: #383838;\"\">&lt;</span><span style=\"\"color: #800000;\"\">html</span><span style=\"\"color: #383838;\"\">&gt;</span></div><br><div><span style=\"\"color: #383838;\"\">&lt;</span><span style=\"\"color: #800000;\"\">head</span><span style=\"\"color: #383838;\"\">&gt;</span></div><div> <span style=\"\"color: #383838;\"\">&lt;</span><span style=\"\"color: #800000;\"\">title</span><span style=\"\"color: #383838;\"\">&gt;</span>413 Request Entity Too Large<span style=\"\"color: #383838;\"\">&lt;/</span><span style=\"\"color: #800000;\"\">title</span><span style=\"\"color: #383838;\"\">&gt;</span></div><div><span style=\"\"color: #383838;\"\">&lt;/</span><span style=\"\"color: #800000;\"\">head</span><span style=\"\"color: #383838;\"\">&gt;</span></div><br><div><span style=\"\"color: #383838;\"\">&lt;</span><span style=\"\"color: #800000;\"\">body</span><span style=\"\"color: #383838;\"\">&gt;</span></div><div> <span style=\"\"color: #383838;\"\">&lt;</span><span style=\"\"color: #800000;\"\">center</span><span style=\"\"color: #383838;\"\">&gt;</span></div><div> <span style=\"\"color: #383838;\"\">&lt;</span><span style=\"\"color: #800000;\"\">h1</span><span style=\"\"color: #383838;\"\">&gt;</span>413 Request Entity Too Large<span style=\"\"color: #383838;\"\">&lt;/</span><span style=\"\"color: #800000;\"\">h1</span><span style=\"\"color: #383838;\"\">&gt;</span></div><div> <span style=\"\"color: #383838;\"\">&lt;/</span><span style=\"\"color: #800000;\"\">center</span><span style=\"\"color: #383838;\"\">&gt;</span></div><div> <span style=\"\"color: #383838;\"\">&lt;</span><span style=\"\"color: #800000;\"\">hr</span><span style=\"\"color: #383838;\"\">&gt;</span></div><div> <span style=\"\"color: #383838;\"\">&lt;</span><span style=\"\"color: #800000;\"\">center</span><span style=\"\"color: #383838;\"\">&gt;</span>nginx/1.18.0 (Ubuntu)<span style=\"\"color: #383838;\"\">&lt;/</span><span style=\"\"color: #800000;\"\">center</span><span style=\"\"color: #383838;\"\">&gt;</span></div><div><span style=\"\"color: #383838;\"\">&lt;/</span><span style=\"\"color: #800000;\"\">body</span><span style=\"\"color: #383838;\"\">&gt;</span></div><br><div><span style=\"\"color: #383838;\"\">&lt;/</span><span style=\"\"color: #800000;\"\">html</span><span style=\"\"color: #383838;\"\">&gt;</span></div></div>\"",
      "answer": "\"This means that in nginx I Need to increase client_max_body_size.<br><br>For example:<br><br><div>server {</div>",
      "selected": "file1"
    },
    {
      "question": "\"<div><span style=\"\"color: #c586c0;\"\">Is this a good idea?</span></div><div><span style=\"\"color: #c586c0;\"\"><br></span></div><div><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #c586c0;\"\">try:</span></div><div><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #9cdcfe;\"\">&nbsp; &nbsp; completed_process</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #4ec9b0;\"\">subprocess</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #dcdcaa;\"\">run</span><span style=\"\"color: #ffffff;\"\">([</span><span style=\"\"color: #4ec9b0;\"\">sys</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #9cdcfe;\"\">executable</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #9cdcfe;\"\">script_path</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #d4d4d4;\"\">*</span><span style=\"\"color: #9cdcfe;\"\">args</span><span style=\"\"color: #ffffff;\"\">], </span><span style=\"\"color: #9cdcfe;\"\">capture_output</span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #569cd6;\"\">True</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #9cdcfe;\"\">text</span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #569cd6;\"\">True</span></div><br><div><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #7ca668;\"\">&nbsp; &nbsp; # Check if the output contains the substring \"\"Error\"\" (case-insensitive)</span></div><div><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #c586c0;\"\">&nbsp; &nbsp; if</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #ce9178;\"\">\"\"error\"\"</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #569cd6;\"\">in</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">completed_process</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #9cdcfe;\"\">stderr</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #dcdcaa;\"\">lower</span><span style=\"\"color: #ffffff;\"\">() </span><span style=\"\"color: #569cd6;\"\">or</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #ce9178;\"\">\"\"failed\"\"</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #569cd6;\"\">in</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">completed_process</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #9cdcfe;\"\">stderr</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #dcdcaa;\"\">lower</span><span style=\"\"color: #ffffff;\"\">():</span></div><div><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #dcdcaa;\"\">&nbsp; &nbsp; &nbsp; &nbsp; print</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #dcdcaa;\"\">colored</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #569cd6;\"\">f</span><span style=\"\"color: #ce9178;\"\">\"\"Warning: The script output for </span><span style=\"\"color: #569cd6;\"\">{</span><span style=\"\"color: #9cdcfe;\"\">script_name</span><span style=\"\"color: #569cd6;\"\">}</span><span style=\"\"color: #ce9178;\"\"> contains an error.\"\"</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #ce9178;\"\">\"\"red\"\"</span><span style=\"\"color: #ffffff;\"\">)) </span><span style=\"\"color: #7ca668;\"\"># Red for warning</span></div><div><span style=\"\"color: #ffffff;\"\"> </span></div><div><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #c586c0;\"\">&nbsp; &nbsp; &nbsp; &nbsp; raise</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #4ec9b0;\"\">ScriptExecutionError</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">completed_process</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #9cdcfe;\"\">stderr</span><span style=\"\"color: #ffffff;\"\">)</span></div><div><span style=\"\"color: #ffffff;\"\"> </span></div><div><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #c586c0;\"\">&nbsp; &nbsp; if</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #ce9178;\"\">\"\"error\"\"</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #569cd6;\"\">in</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">completed_process</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #9cdcfe;\"\">stdout</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #dcdcaa;\"\">lower</span><span style=\"\"color: #ffffff;\"\">() </span><span style=\"\"color: #569cd6;\"\">or</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #ce9178;\"\">\"\"failed\"\"</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #569cd6;\"\">in</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">completed_process</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #9cdcfe;\"\">stdout</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #dcdcaa;\"\">lower:</span><span style=\"\"color: #ffffff;\"\">():</span></div><div><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #dcdcaa;\"\">&nbsp; &nbsp; &nbsp; &nbsp; print</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #dcdcaa;\"\">colored</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #569cd6;\"\">f</span><span style=\"\"color: #ce9178;\"\">\"\"Warning: The script output for </span><span style=\"\"color: #569cd6;\"\">{</span><span style=\"\"color: #9cdcfe;\"\">script_name</span><span style=\"\"color: #569cd6;\"\">}</span><span style=\"\"color: #ce9178;\"\"> contains an error.\"\"</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #ce9178;\"\">\"\"yellow\"\"</span><span style=\"\"color: #ffffff;\"\">)) </span><span style=\"\"color: #7ca668;\"\"># yellow for warning</span></div><div><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #c586c0;\"\">&nbsp; &nbsp; else:</span><span style=\"\"color: #ffffff;\"\">:</span></div><div><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #dcdcaa;\"\">&nbsp; &nbsp; &nbsp; &nbsp; print</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #dcdcaa;\"\">colored</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #569cd6;\"\">f</span><span style=\"\"color: #ce9178;\"\">\"\"Script </span><span style=\"\"color: #569cd6;\"\">{</span><span style=\"\"color: #9cdcfe;\"\">script_parent_dir</span><span style=\"\"color: #569cd6;\"\">}</span><span style=\"\"color: #ce9178;\"\">/</span><span style=\"\"color: #569cd6;\"\">{</span><span style=\"\"color: #9cdcfe;\"\">script_name</span><span style=\"\"color: #569cd6;\"\">}</span><span style=\"\"color: #ce9178;\"\"> completed successfully\"\"</span><span style=\"\"color: #ffffff;\"\">, </span><span style=\"\"color: #ce9178;\"\">\"\"green\"\"</span><span style=\"\"color: #ffffff;\"\">)) </span><span style=\"\"color: #7ca668;\"\"># Green for success</span></div>\"",
      "answer": "\"Because sometimes I get weird warnings like the following:<br><br>```<br>DeprecationWarning: Accessing `SchemaFieldNotFoundError` from the top-level `polars` module is deprecated. Import it directly from the `polars.exceptions` module instead: from polars.exceptions import SchemaFieldNotFoundError<br>&nbsp; except pl.SchemaFieldNotFoundError as e:<br>```<br><br>This then get's caught because it contains the keyword \"\"error\"\" and it leads to an actual error.<br><br>In general it's bad to work with strings and have to read them and interpret them. It's difficult when it comes to logging, which is why it's better to use structured logging and stay in a json or other structured format for as long as possible and only use strings at the endpoints.<br>And it's why it's a bad idea to use the task_wrapper system I set up earlier, because it depends on reading error codes and return codes, which don't always exist and aren't reliable, and then forcing me to read the returned strings, parsing them, etc, which leads down all sorts of rabbit holes.<br><br><br>What is the lesson here? I believe the lesson is to use formats the are consistent all the way through, and conform things to those formats. For example, use a schema, use json, or anything that is known to be reliable. And put off using unreliable formats or process communication, etc for as long as possible. That includes strings, or anything that is meant for being read by humans, for example.\"",
      "selected": "file1"
    },
    {
      "question": "\"<div>S3 Bucket Policy (For my cards system):<br><br>{</div><br><div>&nbsp; \"\"Version\"\": \"\"2012-10-17\"\",</div><br><div>&nbsp; \"\"Statement\"\": [</div><br><div>&nbsp; &nbsp; {</div><br><div>&nbsp; &nbsp; &nbsp; \"\"Sid\"\": \"\"[1]\"\",</div><br><div>&nbsp; &nbsp; &nbsp; \"\"Effect\"\": \"\"Allow\"\",</div><br><div>&nbsp; &nbsp; &nbsp; \"\"Principal\"\": \"\"*\"\",</div><br><div>&nbsp; &nbsp; &nbsp; \"\"Action\"\": \"\"[2]\"\",</div><br><div>&nbsp; &nbsp; &nbsp; \"\"Resource\"\": \"\"arn:aws:s3:::luketych_my_bucket_name/*\"\"</div><br><div>&nbsp; &nbsp; }</div><br><div>&nbsp; ]</div><br><div>}</div>\"",
      "answer": "[1] AllowPublicReadAccessToAllObjects<br>[2] s3:GetObject",
      "selected": "file1"
    },
    {
      "question": "\"<img alt=\"\"Sacrospinous ligament: Anatomy, attachments and function | Kenhub\"\" src=\"\"BgcCg11t9NZxwdjXs3ZblQ_ESybQsth4B_Ligamentum_sacrospinale_1.png\"\">\"",
      "answer": "sacrospinous ligament",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"346785_1_En_32_Fig15_HTML.jpg\"\">\"",
      "answer": "\"<img src=\"\"346785_1_En_32_Fig15_HTML.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"FfimkIhtxehP6BxaNkH1AQ_5HY8XE1htHRIgWnHYgXDA_NuXmqNAKBw_Ligamentum_sacrotuberale_1.jpeg\"\">\"",
      "answer": "Sacrotuberous ligament",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"IMG_20230916_140851.jpg\"\">\"",
      "answer": "Extensor Digitorum Longus<br>Extensor Hallucis Longus<br>Tibialis Anterior",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"IMG_20230918_004843.jpg\"\">\"",
      "answer": "Tibialis Anterior<br>Extensor Hallucis Longus <br>Extensor Digitorum Longus<br>Peroneus Tertius",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"IMG_20230918_004954.jpg\"\">\"",
      "answer": "Tibialis Posterior<br>Flexor Digitorum Longus<br>Flexor Hallucis Longus<br>Achilles Tendon<br>Peroneus Longus<br>Peroneus Brevis",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.06.28 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.06.45 PM.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.07.37 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.07.47 PM.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.09.11 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.09.24 PM.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.10.10 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.10.22 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.10.34 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.10.45 PM.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.12.27 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.12.40 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.12.52 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.13.03 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.13.48 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.13.59 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.14.13 PM.png\"\">\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.14.24 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.34.16 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.34.58 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.35.33 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.35.49 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.36.19 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.37.21 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.38.10 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.38.23 PM.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.39.36 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.40.05 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.40.51 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.41.00 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.41.10 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.41.21 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.41.29 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.41.36 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.45.07 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.45.18 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.45.54 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.46.05 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.46.29 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.47.28 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.47.58 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.48.08 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.48.38 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.48.46 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.49.10 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.49.26 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.49.50 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.50.00 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.50.19 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.50.28 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.51.09 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.51.33 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.52.56 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.53.14 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.53.42 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.53.51 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.54.16 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.54.25 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.54.45 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.54.55 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.55.20 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.55.35 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.56.02 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.56.21 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.56.37 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.56.45 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.57.11 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.57.17 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.57.39 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.57.54 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.58.24 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.58.32 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.59.34 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 2.59.43 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.00.11 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.00.19 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.00.51 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.01.18 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.01.42 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.01.51 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.01.59 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.02.07 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.02.15 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.02.21 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.03.22 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 3.03.28 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.09.57 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.10.09 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.10.45 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.10.57 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.11.17 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.11.37 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.12.02 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.12.10 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.13.35 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.13.43 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.13.59 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-19 at 4.14.08 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.21.17 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.21.39 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.22.01 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.22.14 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.22.37 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.22.48 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.23.01 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.23.12 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.23.40 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.24.12 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.24.28 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.24.40 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.24.49 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.25.01 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.25.17 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.25.25 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.25.36 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.25.46 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.26.02 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.26.12 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.26.23 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.26.34 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.27.01 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.27.14 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.27.23 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.27.33 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.27.43 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.27.52 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.28.20 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.28.31 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.28.38 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.29.00 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.29.21 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.29.32 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.29.52 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.30.04 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.30.17 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.30.29 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.30.42 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.31.05 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.32.00 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.32.41 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.33.03 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.33.14 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.33.26 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.33.37 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.33.53 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.34.04 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.34.21 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.34.32 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.34.48 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.35.00 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.35.11 PM.png\"\" />\"",
      "answer": "\"<img src=\"\"Screen Shot 2016-04-27 at 6.35.21 PM.png\"\" />\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screenshot 2024-09-14 at 19.14.16.png\"\">\"",
      "answer": "\"<img src=\"\"Screenshot 2024-09-14 at 19.13.57.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screenshot 2024-11-22 at 00.26.48.png\"\">\"",
      "answer": "\"<img src=\"\"Screenshot 2024-11-22 at 00.26.29.png\"\"><br>chatgpt: \"\"type(e) is mostly unnecessary. It shouldn't be hard to identify the type of the error in the trace?\"\"<br>\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screenshot 2025-01-21 at 13.33.20.png\"\"><br>Swap these two functions\"",
      "answer": "swap state drum with blue drum<br>OR<br>swap func drum with blue drum",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screenshot 2025-01-21 at 21.39.48.png\"\"><br>Why are the 2 ids?\"",
      "answer": "the first is the change ID. The second is the commit ID.",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screenshot 2025-01-21 at 21.40.59.png\"\"><br>What does the @ indicate?\"",
      "answer": "That it's a working-copy commit",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screenshot 2025-01-21 at 21.41.19.png\"\"><br>What does the ~ indicate?\"",
      "answer": "That the commit has parents that are not included in the graph.",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screenshot 2025-02-18 at 15.04.38.png\"\"><br><br>1. What does the branch main part mean?\"",
      "answer": "1. You are on the git main branch.",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screenshot 2025-03-13 at 11.54.02.png\"\"><br>Colorize zsh like above\"",
      "answer": "\"nvim ~/.zshrc<br><br>PROMPT='%F{cyan}%n %F{yellow}%2~ %# %F{white}'<br><br>source ~/.zshrc\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"Screenshot_2024-05-24-12-36-54-78_a9eef3a2a561b80d5c76daebd0f9a14c.jpg\"\">\"",
      "answer": "From deep to superficial:<br><br>Tibialis Posterior<br>Flexor Digitorum Longus <br>Flexor Hallicus Longus",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img1216323194654941242.jpg\"\">\"",
      "answer": "Eye",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img1334286297801541151.jpg\"\">\"",
      "answer": "\"<img src=\"\"img3303057676167030015.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img1348026522397614976.jpg\"\">\"",
      "answer": "Curve",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img2537176802398669482.jpg\"\">\"",
      "answer": "Wing",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img2745420712906182207.jpg\"\">\"",
      "answer": "Bolt",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img3610789515390833941.jpg\"\">\"",
      "answer": "Fox",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img4379180622326458010.jpg\"\">\"",
      "answer": "Cross",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img6290317748457732734.jpg\"\">\"",
      "answer": "Hole",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img7192876240235794490.jpg\"\">\"",
      "answer": "ex",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img7197069782481071007.jpg\"\">\"",
      "answer": "Typo: path of minimizing resistance, which is a play on path of least resistance",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img7860168555233093173.jpg\"\">\"",
      "answer": "Frame",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"img8702901073089572645.jpg\"\">\"",
      "answer": "Play",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"paste-2656af04d29ae73ff72ea680bd1ca193cb683472.png\"\">\"",
      "answer": "When a part of my app is communicating with another part via IPC, HTTP, etc. The call stack will be severed.<div><br></div><div>So we need to make sure to handle these situations:</div><div><br></div><div>ie we can send back error codes across HTTP in an error property and then check for that property, create a new error and throw it on the other side.</div>",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"paste-d85c9da132030c2a8ee7b8f274a8ca55162ef996.jpg\"\">\"",
      "answer": "top-left: greater sciatic foramen<br>bottom-right: obturator foramen<br><br>",
      "selected": "file1"
    },
    {
      "question": "\"<span style=\"\"font-weight: 600;\"\">What does this mean?<br><br>python = \"\"^3.7\"\"</span>\"",
      "answer": "This means that the project supports python versions 3.7, and up to (but not including) the next major release.<br><br>So in this case it means that 3.7, and everything up until, but not including 4.0.0 is supported.",
      "selected": "file1"
    },
    {
      "question": "\"<span style=\"\"font-weight: 600;\"\">sudo su - mongod<br></span><br>What does this mean?\"",
      "answer": "Sudo allows us to use su as root.<br><br>The - option makes the shell a login shell, which sets up the environment as if you had logged in as the mongod user.",
      "selected": "file1"
    },
    {
      "question": "\"A response to \"\"power corrupts?\"\"\"",
      "answer": "Power doesn't corrupt. Power reveals",
      "selected": "file1"
    },
    {
      "question": "\"Anki: what does \"\"bury\"\" a card mean?\"",
      "answer": "It means it will be shown the next day. Bury it until later.",
      "selected": "file1"
    },
    {
      "question": "\"Change these lines:<br><br>&nbsp; &nbsp; &lt;link rel=\"\"preload\"\" href=\"\"assets/css/open-iconic-bootstrap.min.css\"\"&gt;<br>&nbsp;&nbsp;&nbsp; &lt;link rel=\"\"preload\"\" href=\"\"assets/css/animate.css\"\"&gt;<br>&nbsp;&nbsp;&nbsp; &lt;link rel=\"\"preload\"\" href=\"\"assets/css/owl.carousel.min.css\"\"&gt;<br>&nbsp;&nbsp;&nbsp; &lt;link rel=\"\"preload\"\" href=\"\"assets/css/owl.theme.default.min.css\"\"&gt;<br>&nbsp;&nbsp;&nbsp; &lt;link rel=\"\"preload\"\" href=\"\"assets/css/magnific-popup.css\"\"&gt;<br>&nbsp;&nbsp;&nbsp; &lt;link rel=\"\"preload\"\" href=\"\"assets/css/aos.css\"\"&gt;<br>&nbsp;&nbsp;&nbsp; &lt;link rel=\"\"preload\"\" href=\"\"assets/css/ionicons.min.css\"\"&gt;<br>&nbsp;&nbsp;&nbsp; &lt;link rel=\"\"preload\"\" href=\"\"assets/css/bootstrap-datepicker.css\"\"&gt;\"",
      "answer": "\"Ctrl+V to entire the visual mode.<br>Then select all lines, then select preload,<br>Then press c. I guess this means change.<br>Then start typing what you want to replace \"\"preload\"\" with.\"",
      "selected": "file1"
    },
    {
      "question": "\"Complete this sentence in the S3 Bucket Bouncer story:<br><br>\"\"Let anyone [who] download [verb] to any file [noun], and we allow [ ] it.\"\"\"",
      "answer": "\"\"\"Let anyone (Principal) do (Action) to any file (Resource), and we Allow (effect) it.\"\"\"",
      "selected": "file1"
    },
    {
      "question": "\"Difference in \"\"working copy\"\" in jj and git?\"",
      "answer": "in jj, a working copy automatically becomes a commit.",
      "selected": "file1"
    },
    {
      "question": "\"Don't ask, \"\"did you get a chance to work on tableau for zemanta, etc. this weekend?\"\"<br><br>This causes the other person to feel pressure to say yes even if they didn't.<br><br>Then there is miscommunication and it starts a slippery slope of not being honest.\"",
      "answer": "Instead ask something more like what they worked on on the weekend. Then they will tell you. It gives them more freedom and flexibility to tell you their opinions and where they spent their time and energy.<br><br>Then from there you can direct the conversation and focus.<br><br>Maybe the lesson is to start with their current focus and thoughts and then flex from there instead of trying to be rigid and force things.",
      "selected": "file1"
    },
    {
      "question": "\"Evolutionary purpose of piriformis?<br><br>(And lower fibers of glute medius)<img src=\"\"1000017719.jpg\"\">\"",
      "answer": "You would think that because the femoral head is at a large angle between the acetabulum then there would be a lot of stress along the neck of the femur.<br><br>This would lead to a thickening of cortical bone. <br><br>But this doesn't happen. The piriformis and lower fibers of the glute medius counteract these forces during the gait cycle.<br><br><br>Note: cortical bone refers to the cortex of the bone, which is the outer part.<br><br><br><br><br>",
      "selected": "file1"
    },
    {
      "question": "\"Git:<br><br>What does the \"\"cache\"\" refer to?\"",
      "answer": "To the index/staging area.",
      "selected": "file1"
    },
    {
      "question": "\"Here is what my .git/config file looked like:<br><br>```<br>[core]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; repositoryformatversion = 0<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; filemode = true<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; bare = false<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; logallrefupdates = true<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ignorecase = true<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; precomposeunicode = true<br>[remote \"\"origin\"\"]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; url = github-ktr-srt/ktr-srt/monorepo.git<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; fetch = +refs/heads/*:refs/remotes/origin/*<br>[branch \"\"main\"\"]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; remote = origin<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; merge = refs/heads/main<br>```<br><br>Is it correct?\"",
      "answer": "This is correct:<br><br>url = git@github-ktr-srt:ktr-srt/monorepo.git",
      "selected": "file1"
    },
    {
      "question": "\"How do I parse this into a list?<br><br><span style=\"\"color: rgb(244, 135, 113); background-color: rgb(12, 20, 31);\"\">\"\"['[https://kolimba.com/article/19959?utm_content=senior%20internet%20plans&amp;camp_id=227932&amp;acct=mcc-google]', '[https://kolimba.com/article/19959?utm_content=senior%20internet%20plans&amp;camp_id=227932&amp;acct=mcc-google]', '[https://kolimba.com/article/19959?utm_content=senior%20internet%20plans&amp;camp_id=227932&amp;acct=mcc-google]', '[https://kolimba.com/article/19959?utm_content=senior%20internet%20plans&amp;camp_id=227932&amp;acct=mcc-google]', '[https://kolimba.com/article/19959?utm_content=senior%20internet%20plans&amp;camp_id=227932&amp;acct=mcc-google]']\"\"</span>\"",
      "answer": "ast.literal_eval()",
      "selected": "file1"
    },
    {
      "question": "\"In the S3 Bucket Bouncer story, what does \"\"Action\"\" represent?\"",
      "answer": "\"Action is what the person is trying to do at the club \u2014 get a drink, enter the VIP lounge, etc. In S3 terms, it's download, upload, delete, list, etc. It answers the question: \"\"What do they want to do?\"\"\"",
      "selected": "file1"
    },
    {
      "question": "\"In the talon repl, how do I try any command that can be spoken?&nbsp;<br><br>ie \"\"focus chrome\"\"\"",
      "answer": "\"sim(\"\"focus chrome\"\")\"",
      "selected": "file1"
    },
    {
      "question": "\"Instead of asking for an estimated # of days to complete a project, or deadlines..\"",
      "answer": "..use milestones we can vividly picture. For example, we will all be leaving for mexico in 7 days. Will you be able to finish it before then?",
      "selected": "file1"
    },
    {
      "question": "\"Instead of the following <br><br>Q: \"\"What are typical aromatics used in chicken stock?\"\"<br><br>A: \"\"onion, carrots, celery, garlic, parsley\"\"<br><br>What's a better way of creating Anki cards?\"",
      "answer": "\"Break things into pieces. <br><br>This makes it easier to <b>build triangular connections</b> in the brain (remember the brain can only make 2-3 connections from one neural cluster to another).<br><br>Q: \"\"Typical chicken stock aromatics?\"\"<br>???<br>carrots<br>celery<br>garlic<br>parsley<br><br>A: onion<br><br>Q:<br>onion<br>???<br>celery<br>garlic<br>parsley<br><br>A: carrots<br><br>Q: <br>onion<br>carrots<br>celery<br>???<br>???<br><br>A: garlic<br>parsley\"",
      "selected": "file1"
    },
    {
      "question": "\"People twist logic to fit the narrative they want to maintain and hold onto.<br><br>Ie even movie storylines. Ie Star Wars<br><br><img src=\"\"img8820427233980359043.jpg\"\">\"",
      "answer": "https://youtu.be/BbYwdsCguEA?si=PUlRmmk-dOLCSebI",
      "selected": "file1"
    },
    {
      "question": "\"Rewrite the following using flatmap and Result<t,e> using pure JavaScript:<br><br><br><pre><code>async function fetchUser(id) {<br>  const res = await fetch(`/api/users/${id}`);<br>  if (!res.ok) throw new Error(`HTTP ${res.status}`);<br>  return res.json();<br>}<br><br>async function extractName(user) {<br>  if (user.name) return user.name;<br>  throw new Error(\"\"Missing name\"\");<br>}<br><br>async function uppercase(str) {<br>  return str.toUpperCase();<br>}<br><br>async function main() {<br>  try {<br>    const user = await fetchUser(1);<br>    const name = await extractName(user);<br>    const upper = await uppercase(name);<br>    console.log(\"\"Success:\"\", upper);<br>  } catch (e) {<br>    console.error(\"\"Error:\"\", e.message);<br>  }<br>}<br><br>main();</code></pre></t,e>\"",
      "answer": "\"<pre><code>",
      "selected": "file1"
    },
    {
      "question": "\"S3 Bucket Policy:<br><br>{<br>&nbsp; \"\"Version\"\": \"\"2012-10-17\"\",<br>&nbsp; \"\"Statement\"\": [<br>&nbsp;&nbsp;&nbsp; {<br>&nbsp; &nbsp; &nbsp; [What properties should be in here?]<br>&nbsp;&nbsp;&nbsp; }<br>&nbsp; ]<br>}\"",
      "answer": "Sid,<br>Effect,<br>Resource<br>Action,<br>Principal",
      "selected": "file1"
    },
    {
      "question": "\"Say I have a list of strings like this:<br><br>thisisastring<br>thisisanotherstring<br>thisisathirdstring<br>andsoon<br>andon<br>andon<br><br>And I want to use vim to surround each line by quotes \"\"\"",
      "answer": "\"1. Use CTRL+v to enter visual mode, highlight all lines, <br>2. Then press capital I to go to the beginning of the line and switch to insert mode.<br>3. Insert the \"\"<br>4. Press gv to select the same lines as before<br>5. Press the $ key to move to the end of each line while still in visual mode.<br>6. Press capital A to switch to insert mode at the end of the line.<br>7. Insert the closing quote (\"\").<br>8. Press the Esc key to exit insert mode and apply the changes to all selected lines.\"",
      "selected": "file1"
    },
    {
      "question": "\"Scenario:&nbsp;<br>\u2717 echo \"\"hello world\"\" &gt;&gt; log/test.log<br>zsh: permission denied: log/test.log<br><br>Use tee.\"",
      "answer": "\"echo \"\"hello world\"\" | sudo tee -a log/test.log\"",
      "selected": "file1"
    },
    {
      "question": "\"Start \"\"tagging\"\" my Anki cards with their intention:<br><br>Is it for memorizing?<br><br>Priming?<br><br>Reflecting or thinking deeply?<br><br>Is it for building creative generative connections in my mind?\"",
      "answer": "[[memory]]<br>[[prime]] [[deep_prime]]<br>[[reflect]] [[deep_thoughts]]<br>[[building_creative_connections]]",
      "selected": "file1"
    },
    {
      "question": "\"Tendons of the medial malleolus <br><br><img src=\"\"1000017727.jpg\"\">\"",
      "answer": "\"Tibialis Anterior<br>Tibialis Posterior<br>Flexor Digitorum Longus<br>Flexor Hallicus Longus<br><br><img src=\"\"Screenshot_2023-11-27-00-44-41-10_40deb401b9ffe8e1df2f1cc5ba480b12.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"Tensor Fasciae Latae, Gluteus Medius and Gluteus Maximus come together to form illiotibial band.<br><br><img src=\"\"img7851414959517202325.jpg\"\">\"",
      "answer": "Notice how the tensor fasciae latae and glute medius, gluteus maximus are connecting into the it band.",
      "selected": "file1"
    },
    {
      "question": "\"Term used to describe when someone doesn't want to engage in conversation so they say basic things like \"\"uh huh,\"\" or \"\"that's cool\"\". They sometimes will just engage about the most mundane or basic parts of what the other person is saying.<br><br>Ie Blade talking about one of his \"\"genius\"\" cough cough ideas and me just asking him basics like, \"\"when will you raise money?\"\" Or when is your next meeting? Stuff to just say to let the convo die down.\"",
      "answer": "Grey Rocking",
      "selected": "file1"
    },
    {
      "question": "\"What does \"\"Principal\"\": \"\"*\"\" mean in the S3 Bucket Bouncer story?\"",
      "answer": "It means everyone \u2014 including unauthenticated, anonymous people \u2014 can try to enter. The bouncer doesn\u2019t check ID.",
      "selected": "file1"
    },
    {
      "question": "\"What does \"\"caudal\"\" mean?\"",
      "answer": "tail-end, near the posterior part of the body.",
      "selected": "file1"
    },
    {
      "question": "\"What does --all and --force do?<br><br><center><table class=\"\"highlighttable\"\"><tbody><tr><td><div class=\"\"linenodiv\"\" style=\"\"background-color: #000000; padding-right: 10px\"\"><pre style=\"\"line-height: 125%\"\">1</pre></div></td><td class=\"\"code\"\"><div class=\"\"highlight\"\" style=\"\"background: #000000\"\"><pre style=\"\"line-height: 125%\"\">git push origin --force --all<br></pre></div><br></td></tr></tbody></table></center><br>\"",
      "answer": "--all means to push all branches<br><br>--force means to overwrite the remote branch with the local one.",
      "selected": "file1"
    },
    {
      "question": "\"What does the \"\"Effect\"\" represent in the S3 Bucket Bouncer analogy?\"",
      "answer": "\"The Effect is the bouncer\u2019s decision: Allow them in or Deny entry. Deny always overrides Allow. It answers the question: \"\"What does the rule do to the request?\"\"\"",
      "selected": "file1"
    },
    {
      "question": "\"What does this do?<br><br>pkill -f \"\"next dev\"\"\"",
      "answer": "\"<div>This command <b>kills any running processes whose full command line contains the string \"\"next dev\"\"</b>.</div>\"",
      "selected": "file1"
    },
    {
      "question": "\"What does this mean?<br><br><span style=\"\"font-weight: 600;\"\">python = \"\"^3.7,^3.11.4\"\"</span>\"",
      "answer": "This allows your project to work with Python versions ranging from <code>3.7</code> up to, but not including, <code>4.0.0</code>, while being more specific about supporting at least Python <code>3.11.4</code>. This is useful when you want to ensure compatibility with a specific minimum version of Python but also want to be flexible enough to work with newer minor versions within the same major version.",
      "selected": "file1"
    },
    {
      "question": "\"What is \"\"retrieval-induced forgetting\"\"?\"",
      "answer": "\"A memory phenomenon where it will become harder to retrieve information that is close to what is attempting to be recalled or \"\"retrieved\"\", but just far enough away from salience that the brain suppresses it or makes it more difficult to recall. <br><br><img src=\"\"IMG_20250518_155549.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"What is the \"\"Resource\"\" in the S3 Bucket Bouncer metaphor?\"",
      "answer": "\"The Resource is the thing they want access to \u2014 the VIP room, bar, or dance floor. In AWS, it\u2019s a bucket, folder, or file (identified by an ARN). It answers: \"\"What are they trying to access?\"\"\"",
      "selected": "file1"
    },
    {
      "question": "\"What is the medical term for \"\"pins and needles\"\" feeling?\"",
      "answer": "paresthesia",
      "selected": "file1"
    },
    {
      "question": "\"When to use absolute paths, and relative paths?<br><br># think # reflect # addTo\"",
      "answer": "\"It's better to pass around absolute paths instead of relative. If we are passing around relative paths then we have to ask, \"\"relative to what?\"\", the project root, or the calling file, or from the cwd? Project-relative paths?<br><br>This might not be a super difficult question to answer but it adds a lot of mental energy, reducing the amount that can be successfully juggled at one time in one's mind.<br><br>Relative folders are great for accessing things in the beginning. For example, config files, env files, or getting a file from a data directory. This is because if we change the folder structure around things will still work. But it seems after that it's much better to use absolute paths. Relative paths can be created easily. All we have to do is strip out everything up to the project directory. Going in the other direction is more complex. And you don't want to have too much complexity at the top of your functions.<br><br>The top of functions should be reserved for checking the argument inputs, checking side effects, etc, etc. Giving the function a good summary. Similar to how the first sentence in a paragraph gives an overview of what the paragraph will be about.<br><br>Ask self: \"\"Do we need relative paths in this situation?\"\" If not, then the answer is to probably use absolute paths. They are lightweight. Moving around lightweight things is much less complex.\"",
      "selected": "file1"
    },
    {
      "question": "\"When to use if __name__ == \"\"__main__\"\" ?\"",
      "answer": "\"<div>It is commonly used in Python scripts to differentiate between code that should be executed when the script is run directly and code that should only be executed when the script is imported as a module into another Python script.</div><div>When you use the <code>if __name__ == \"\"__main__\"\":</code> block, the code inside it will only run if the Python script is executed directly from the command line. It won't run if the script is imported as a module in another Python script. This can be useful when you want to include some initial setup or testing code that should only be executed when running the script as a standalone program.</div><br>\"",
      "selected": "file1"
    },
    {
      "question": "\"Which cmd is run?<br><br>docker-compose.yml:<br><br><img src=\"\"CleanShot 2025-03-25 at 13.36.25@2x.png\"\"><br><br>Dockerfile:<br><br><img src=\"\"CleanShot 2025-03-25 at 13.36.51@2x.png\"\">\"",
      "answer": "if you do `docker compose up` then the one defined in docker-compose.yml takes precendence.&nbsp;",
      "selected": "file1"
    },
    {
      "question": "\"Why are these 2 different versions?<br><br><br><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">\u279c  project </span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">g</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">i</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">t</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">:</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">(main</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">) \u2717 brew list </span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">-</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">-versions yarn<br><br>yarn </span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">1</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">.</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">2</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">2</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">.19<br><br>\u279c  project </span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">g</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">i</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">t</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">:</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">(main</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">) \u2717 yarn </span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">-</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">-version<br><br></span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">3</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">.</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">6</span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">.3</span>\"",
      "answer": "\"yarn berry and up aren't meant to be used globally.<br><br><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">If you want to do things globally use yarn berry </span><span style=\"\"color: rgb(49, 51, 56); background-color: rgba(2, 2, 2, 0.03);\"\">+ dlx.</span><br><br>When you run `brew list --versions yarn` it's going to show you the global yarn version, which is 1.22.19. However, when you run `yarn --version` it's going to show 3.6.3 for some reason. I think because the version 3.6.3 is actually installed. However, it won't be invoked when you run it globally from the PATH variables. Maybe this is how yarn works internally.\"",
      "selected": "file1"
    },
    {
      "question": "\"Why is \"\"Effect\"\": \"\"Deny\"\" stronger than \"\"Effect\"\": \"\"Allow\"\" in S3 policies?\"",
      "answer": "Because the bouncer has a rule: \u201cIf there\u2019s ever a Deny rule, that\u2019s final.\u201d No other permission can override it.",
      "selected": "file1"
    },
    {
      "question": "\"[bash]<br><br><span style=\"\"color: rgb(214, 214, 221);\"\">result=$(</span><span style=\"\"color: rgb(239, 176, 128);\"\">eval</span><span style=\"\"color: rgb(214, 214, 221);\"\">&nbsp;</span><span style=\"\"color: rgb(227, 148, 220);\"\">'fd -d 2 . . 2&gt;/dev/null'</span><span style=\"\"color: rgb(214, 214, 221);\"\">)</span><br><br>When setting a watch variable on ${result} it just shows an empty string, even though echo \"\"$result\"\" shows something like the following:<br>./coverage/<br>./debug.sh<br>etc<br><br>Why? And what can be done about it?\"",
      "answer": "\"Because $result is separated by \\n new line characters, the watch variable doesn't support it. Bash squishes everything into one long string. So instead we have to replace the newline chars with something different.<br><br>For example, we can do the following:<br><div><div><span style=\"\"color: #d6d6dd;\"\">debug_result=$(</span><span style=\"\"color: #efb080;\"\">echo</span><span style=\"\"color: #d6d6dd;\"\"> </span><span style=\"\"color: #e394dc;\"\">\"\"</span><span style=\"\"color: #d6d6dd;\"\">$result</span><span style=\"\"color: #e394dc;\"\">\"\"</span><span style=\"\"color: #d6d6dd;\"\"> | </span><span style=\"\"color: #efb080;\"\">tr</span><span style=\"\"color: #d6d6dd;\"\"> </span><span style=\"\"color: #e394dc;\"\">'\\n'</span><span style=\"\"color: #d6d6dd;\"\"> </span><span style=\"\"color: #e394dc;\"\">'\u00b6'</span><span style=\"\"color: #d6d6dd;\"\">)</span></div></div><div><span style=\"\"color: #d6d6dd;\"\"><br></span></div><div>This will produce a result similar to the following:<br></div><div><img src=\"\"Screenshot 2025-02-18 at 23.51.09.png\"\"><br></div><div>(Note how these separators&nbsp;<span style=\"\"color: rgb(227, 148, 220);\"\">\u00b6&nbsp;</span>make it easy to select the results with the mouse.)</div><br><br><br>(\"\"tr\"\" stands for transform or translate)\"",
      "selected": "file1"
    },
    {
      "question": "\"[bash]<br><br>use lsof to get the \"\"current working directories\"\" of all of your processes\"",
      "answer": "<code>lsof -d cwd</code><br><br>(Lists the current working directories (cwd) of all open processes.)<br><br>Use sudo if you want to see processes owned by other users:<br><br><code>sudo lsof -d cwd</code><br><br><br>Note: lsof has many powerful options \u2014 consult the man page<br><br>",
      "selected": "file1"
    },
    {
      "question": "\"[data science] [machine learning]<br><br>Term for turning categories into 0's and 1's.<br><br>For example, in XGBoost:<br><br><img src=\"\"CleanShot 2025-06-10 at 20.36.16@2x.png\"\">\"",
      "answer": "One-Hot Encoding",
      "selected": "file1"
    },
    {
      "question": "\"[data science]<br><br>What is the difference between odds and \"\"odds ratio\"\"?\"",
      "answer": "\"<img src=\"\"CleanShot 2025-06-11 at 14.11.11@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 14.11.29@2x.png\"\"><br><br><img src=\"\"CleanShot 2025-06-11 at 14.12.52@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 14.13.08@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 14.13.22@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 14.14.11@2x.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"[data science]<br><br>Why might we choose the following loss function?<br><br><img src=\"\"CleanShot 2025-06-11 at 13.12.31@2x.png\"\">\"",
      "answer": "\"Because it makes it simpler, more elegant when we are using it with gradients..<br><br>The derivative becomes:&nbsp;\u25bdL = -1 x (y - \u0177)<br><br><img src=\"\"CleanShot 2025-06-11 at 13.11.52@2x.png\"\"><br>\"",
      "selected": "file1"
    },
    {
      "question": "\"[esbuild]<br><br><div>What does `\"\"bundle\"\": true` do in esbuild?</div>\"",
      "answer": "\"It tells esbuild to follow all `import` and `require` statements and include **all dependent modules** (including local files and packages from `node_modules`) into a single bundled output file.<div><br></div><div><div><b>Why? </b>Without `\"\"bundle\"\": true`, esbuild expects external files (like `./controlScript/cleanStringForObjectExtraction.js`) to be present on disk at runtime \u2014 so missing modules cause errors.&nbsp;</div></div><div>(Hence, me getting this error <i>Cannot find module `./controlScript/cleanStringForObjectExtraction.js`)</i></div><div><i><br></i></div><div><u>Note</u><i>:&nbsp;</i>With \"\"bundle\"\": false (the default), esbuild treats your file like a Node.js script \u2014 it just transpiles it but leaves imports unresolved.</div>\"",
      "selected": "file1"
    },
    {
      "question": "\"[git]<br><br><span style=\"\"background-color: rgb(255, 255, 255);\"\">1.&nbsp;</span><span style=\"\"background-color: rgb(255, 255, 255);\"\">See all tracked files, whether in staging area or not.</span><br><br><span style=\"\"background-color: rgb(255, 255, 255);\"\">2.&nbsp;</span><span style=\"\"background-color: rgb(255, 255, 255);\"\">How do I show all of the files that git is currently tracking in the staging area, (or possibly on my local machine). But not yet pushed to a remote repo.</span>\"",
      "answer": "2. git diff --staged<br><br>1. git ls-files",
      "selected": "file1"
    },
    {
      "question": "\"[git]<br><br><span style=\"\"color: rgb(236, 236, 236); background-color: rgb(33, 33, 33);\"\">How to revert your working directory to the last committed state using git checkout.</span>\"",
      "answer": "git checkout -- .",
      "selected": "file1"
    },
    {
      "question": "\"[git]<br><br>Here is the objective:&nbsp;<div><h3><b>\u201cThrow away all local changes (both tracked & untracked) and sync with remote\u201d</b></h3></div><br>Instead of the following:<br><br>git fetch origin<br>git reset --hard origin/main<br># destructive!<br><br>What is a safer alternative?\"",
      "answer": "\"<b>0. git fetch origin</b><br><br><b>1. git reset --mixed origin/main</b><br>(move HEAD and current branch pointer to origin/main & reset staging area to match origin/main)<br><br><b>2. git restore .</b><br>(Discard local changes to tracked files in current dir and subdirs & reset them to HEAD)<br><br><b>3. git clean -nd</b><br># preview untracked files to delete from working directory <br><br><b>4. git clean -fd</b><br># delete untracked files/directories from working directory \"",
      "selected": "file1"
    },
    {
      "question": "\"[git]<br><br>Here is the objective:<br><br><div><h3><b>\u201cUndo a commit AND discard uncommitted changes in tracked files, and in working directory.\"\"</b></h3></div><div>How do you do this without git reset --hard ?</div>\"",
      "answer": "\"git reset --mixed HEAD~<br># rm commit, keep changes in the wd<br>&nbsp;<br>git restore .<br># discard changes in wd\"",
      "selected": "file1"
    },
    {
      "question": "\"[physio]<br><br>Describe \"\"form closure\"\" vs \"\"force closure\"\"\"",
      "answer": "<b>Form Closure</b> describes stability provided by the shape and geometry and fit of the bones (and also ligaments.)<br>Form closure is often found in deep, stable joints.<br><br><b>Force Closure</b>&nbsp;describes stability provided by the muscular forces, fascia, and connective tissues that compree and stabilize the joint.",
      "selected": "file1"
    },
    {
      "question": "\"[physio]<br><br>What is \"\"creep\"\"?\"",
      "answer": "Over time, the deformation of the spine tissues under load or stress.",
      "selected": "file1"
    },
    {
      "question": "\"[physio]<br><br>What is \"\"hyperinflation\"\"?\"",
      "answer": "\"Hyperinflation is a state where (either unilateral or bilateral) the lungs remain <b>chronically expanded with air</b>, even during exhalation.<br><br>(Especially the <b>upper, anterior (front), and apical</b> regions)<br><br><br><div>The brainstem (specifically the <b>medulla oblongata</b>) monitors <b>CO\u2082 levels</b>, not O\u2082, as the primary signal to breathe. When you over-breathe:</div>",
      "selected": "file1"
    },
    {
      "question": "\"[podman] [buildah]<br><br>Difference between the concept of a \"\"container\"\" in buildah vs podman?\"",
      "answer": "\"<div>In <b>Buildah</b>, containers are <b>ephemeral, build-time constructs</b>. They\u2019re not meant to be long-lived or executed in the traditional sense. Instead, they exist to allow <b>modifying and assembling container images</b>, similar to RUN instructions in a Dockerfile.</div>",
      "selected": "file1"
    },
    {
      "question": "\"[postgres]<br><br>When I do SELECT * FROM table and the output has a lot of spaces, why is that happening?<br><br><b>e.g.</b><br><br>postgres=# SELECT * FROM inuvo_google_merged2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g_hash&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | g_camp_id | g_clicks | g_impressions |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g_spend&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp; g_date&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g_campaign_names&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; g_campaign_ids&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;\"",
      "answer": "\"the PostgreSQL client (psql) formats the result in a tabular form with fixed-width columns. When some of the columns have longer values or are empty, the client adds empty spaces to align the columns properly.<br><br><b>1. psql -x (expanded display)</b><br><br><code>psql -U postgres -d mydb -c \"\"SELECT * FROM mytable\"\" -x</code><br><br><b>2. psql -P (set printing options)</b><br><br><code>psql -U postgres -d mydb -c \"\"SELECT * FROM mytable\"\" -P format=csv</code><br><br>\"",
      "selected": "file1"
    },
    {
      "question": "\"[psychology]<br><br>What is the term that describes a person forgetting or unable to recall something because they have been attempting to recall similar information, causing the brain to suppress neighbouring memories?<br><br><img src=\"\"IMG_20250518_155549.jpg\"\">\"",
      "answer": "Retrieval-induced forgetting",
      "selected": "file1"
    },
    {
      "question": "\"[python]<br><br><span style=\"\"color: rgb(13, 13, 13); font-weight: 600; background-color: rgb(255, 255, 255);\"\">What are the issues with this?<br><br>def fetchSubIDdaily(days=30, output_types: List[str] = ['csv'], *args, **kwargs)</span>\"",
      "answer": "\"output_types is a mutable default argument. This is a common pitfall.<br><br>Why? Because having a mutable default argument will lead to hard-to-debug issues if it is ever changed.<br><br>For example,&nbsp;<br><br><span style=\"\"color: rgb(46, 149, 211); background-color: rgb(13, 13, 13);\"\">def</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\"> </span><span style=\"\"color: rgb(242, 44, 61); background-color: rgb(13, 13, 13);\"\">append_to_list</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">(</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">value, my_list=[]</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">):<br><br>&nbsp; &nbsp; my_list.append(value)<br>    </span><span style=\"\"color: rgb(46, 149, 211); background-color: rgb(13, 13, 13);\"\">return</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\"> my_list<br><br></span><span style=\"\"color: rgba(255, 255, 255, 0.5); background-color: rgb(13, 13, 13);\"\"># First call to the function</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\"><br><br></span><span style=\"\"color: rgb(233, 149, 12); background-color: rgb(13, 13, 13);\"\">&nbsp; &nbsp; print</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">(append_to_list(</span><span style=\"\"color: rgb(223, 48, 121); background-color: rgb(13, 13, 13);\"\">1</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">))  </span><span style=\"\"color: rgba(255, 255, 255, 0.5); background-color: rgb(13, 13, 13);\"\"># Expected output: [1]</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\"><br></span><span style=\"\"color: rgba(255, 255, 255, 0.5); background-color: rgb(13, 13, 13);\"\"># Second call to the function&nbsp;</span><span style=\"\"background-color: rgb(13, 13, 13);\"\"><font color=\"\"#ffffff\"\"><br></font></span><span style=\"\"background-color: rgb(13, 13, 13);\"\"><font color=\"\"#ffffff\"\">&nbsp; &nbsp;&nbsp;</font></span><span style=\"\"color: rgb(233, 149, 12); background-color: rgb(13, 13, 13);\"\">print</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">(append_to_list(</span><span style=\"\"color: rgb(223, 48, 121); background-color: rgb(13, 13, 13);\"\">2</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">))  </span><span style=\"\"color: rgba(255, 255, 255, 0.5); background-color: rgb(13, 13, 13);\"\"># Might expect [2], but the output will be [1, 2]<br></span><br>The solution:<br><br><span style=\"\"color: rgb(46, 149, 211); background-color: rgb(13, 13, 13);\"\">def</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\"> </span><span style=\"\"color: rgb(242, 44, 61); background-color: rgb(13, 13, 13);\"\">append_to_list</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">(</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">value, my_list=<span style=\"\"color: rgb(46, 149, 211);\"\">None</span></span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">):<br></span><span style=\"\"background-color: rgb(13, 13, 13);\"\"><font color=\"\"#ffffff\"\">&nbsp; &nbsp;&nbsp;</font></span><span style=\"\"color: rgb(46, 149, 211); background-color: rgb(13, 13, 13);\"\">if</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\"> my_list </span><span style=\"\"color: rgb(46, 149, 211); background-color: rgb(13, 13, 13);\"\">is</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\"> </span><span style=\"\"color: rgb(46, 149, 211); background-color: rgb(13, 13, 13);\"\">None</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\">:<br><br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;my_list = []  </span><span style=\"\"color: rgba(255, 255, 255, 0.5); background-color: rgb(13, 13, 13);\"\"># Initialize a new list if none was provided</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\"><br><br>&nbsp; &nbsp; my_list.append(value)<br>    <br></span><span style=\"\"color: rgb(46, 149, 211); background-color: rgb(13, 13, 13);\"\">&nbsp; &nbsp; return</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(13, 13, 13);\"\"> my_list</span>\"",
      "selected": "file1"
    },
    {
      "question": "\"[python]<br><br>Difference between these two:<br><br>a.myVar<br>a[\"\"myVar\"\"]\"",
      "answer": "dot-access notation is for accessing attributes inside of objects.<br><br>square-bracket notation is for key-based access or indexing. Especially dictionaries.",
      "selected": "file1"
    },
    {
      "question": "\"[talon]<br><br><img src=\"\"Screenshot 2025-01-21 at 12.32.48.png\"\"><br>Highlight this entire section with a single command. <br><br>OR highlight from the first i to the last, and then expand the selection to the < and >\"",
      "answer": "1. Take block<br><br>OR<br><br>2. <br>A. take sit past yellow sit<br>B. take diamond",
      "selected": "file1"
    },
    {
      "question": "\"[tech] [git]<br><br>Git tool for checking for repo size and complexity, especially history and structure.<br><br>It helps identify botlenecks and scaling issues.<br><br><div></div><br><div><h3><b>\ud83d\udcc8&nbsp;</b><b style=\"\"font-size: 20px;\"\">What It Helps You Discover</b></h3></div><br><div><ul><li><br><div>Large files or directories added historically</div><br></li><li><br><div>Extremely large commits or merges</div><br></li><li><br><div>Deep file paths or very large folders</div><br></li><li><br><div>Repeated blobs (e.g., the same image in many commits)</div><br></li><li><br><div>Indicators of a bloated or poorly structured Git history</div></li></ul></div>\"",
      "answer": "git-sizer",
      "selected": "file1"
    },
    {
      "question": "\"[tech] [git]<br><br>How to show what file-level hanges would occur if you checked out &lt;branch_name&gt;?<br><br>For example:<br><br><img src=\"\"CleanShot 2025-06-20 at 17.47.35@2x.png\"\">\"",
      "answer": "git diff --name-status &lt;branch_name&gt;",
      "selected": "file1"
    },
    {
      "question": "\"[tech] [git]<br><br>Scenario:<br><br>You want markdown_file.md to exist in your current branch, but `git merge &lt;other_branch&gt;` returns \"\"Already up to date.\"\"<br><br>1) What is happening?<br>2) How do you get markdown_file.md into your current branch?\"",
      "answer": "1) `git merge &lt;other_branch&gt;` checks and concludes that all of the commits from git's history for other_branch are already in the current branch. &lt;b&gt;git merge&lt;/b&gt; does not care about file differences. That is a common misconception.<br><br>2) git checkout &lt;other_branch&gt; -- markdown_file.md<br><br>(This will copy that file into your current branch from the other_branch, w/o switching branches or merging.)",
      "selected": "file1"
    },
    {
      "question": "\"[tech]<br><br><div><div><span style=\"\"color: #569cd6;\"\">What is the correct way to parse this env variable inside of our program?</span></div><div><span style=\"\"color: #569cd6;\"\"><br></span></div><div><span style=\"\"color: #569cd6;\"\">.env:</span></div><div><span style=\"\"color: #569cd6;\"\"><br></span></div><div><span style=\"\"color: #569cd6;\"\">__KTR__TABLE_IDS</span><span style=\"\"color: #ffffff;\"\">=</span><span style=\"\"color: #ce9178;\"\">'ad_history'</span></div><div><span style=\"\"color: #7ca668;\"\"># ad_report_daily,</span></div><div><span style=\"\"color: #7ca668;\"\"># advertiser</span></div></div><div><br></div>\"",
      "answer": "\"<span style=\"\"color: rgb(124, 166, 104);\"\">Wrong: ENV_VARS[\"\"TABLE_IDS\"\"]<br></span><br>Correct: ENV_VARS[\"\"TABLE_IDS\"\"].split(\"\",\"\")<br><br>This works, because if there are multiple rows of data defined in the .env file for TABLE_IDS then it will be correctly parsed into an array. If there is only a single value, we still should parse it as an array, as that is what is expected by our progam.\"",
      "selected": "file1"
    },
    {
      "question": "\"[tech]<br><br>A better alternative to netstat is <span class=\"\"cloze\"\" data-cloze=\"\"ss\"\" data-ordinal=\"\"1\"\">[Starts with s]</span>\"",
      "answer": "\"[tech]<br><br>A better alternative to netstat is <span class=\"\"cloze\"\" data-ordinal=\"\"1\"\">ss</span><br>",
      "selected": "file1"
    },
    {
      "question": "\"[tech]<br><br>What are your thoughts surrounding this?<br><br>test_resources_path = os.path.join(\"\"tests\"\", \"\"resources\"\")\"",
      "answer": "\"- it's not debuggable/searchable. If I have an error that contains \"\"tests/resources\"\", which is what will appear in the logs/terminal, it will be difficult to search for this error.<br><br>@learn @lesson @habit<br>Become aware of how each line I code may present itself at the endpoints/extremities (ie console, log file). How will this affect debugging?<br><br>@habit<br>Develop the habit of searching for things in differnent way, for example, if I see \"\"tests/resources\"\" then maybe there could be a line that looks similar, but is not assembled into the final string yet.<br><br>Things become difficult to debug when there is no line where we can see \"\"tests/resources\"\" directly. Maybe I need to make a habit that before anything gets finalized on one layer (ie my code) and passed onto the next (potentially logging, or some other module), the data passed should be guaranteed to be passed in a searchable, and easy-to-handle format.<br><br>As a habit/rule, whenever passing things from one layer to another, or one module to another, or from one form to another ALWAYS make sure that the format is a good one and easy to debug and find.<br><br>If, for example, I am passing data from one side of an api to another, on the sending end (if I control it) I should make sure that I format the data in a searchable, debuggable way. On the receiving end I should take the data and confirm that it's a good format, or reformat it as an early step. Or at least create a new meta object, add it to the meta object, and then add other data that indicates that the object needs to be reformatted. Maybe then I could pass it to a parser or processor before dealing with it further.<br><br>This seems like a good habit to cultivate.\"",
      "selected": "file1"
    },
    {
      "question": "\"[tech]<br><br>info: Feathers app listening on <a href=\"\"http://localhost:4444\"\">http://localhost:4444</a><br>error: 2023-06-03 22:01:53.077Z from:(job_events: src/services/jobEvents/dbInit.js:34:16) Error: SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string<br>error: 2023-06-03 22:01:53.078Z from:(job_events: src/services/jobEvents/jobEvents.js:33:28) Error: SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string\"",
      "answer": "Make sure postgres url has password set",
      "selected": "file1"
    },
    {
      "question": "\"[tech]<br>[python]<br><br>my_script.py:<br><br><code><br>print(\"\"Hello\"\")<br></code><br><br>> poetry run python my_script.py<br><br>Hello<br><br>> poetry run my_script.py<br><br>Exec format error: './src/pipelines/google_daily/index.py'<br><br><br>Why doesn't the second one run?\"",
      "answer": "\"You have to put a shebang at the top of the script..<br><pre><code>#!/usr/bin/env python</code></pre><pre><code>This tells the linux kernel how to execute the script.\"",
      "selected": "file1"
    },
    {
      "question": "\"[tech]<br>[vscode] [containers]<br><br>In a VSCode Dev Container, why might this postCreateCommand be needed?<br><br>\"\"postCreateCommand\"\": \"\"sudo chown -R node:node /app/node_modules && npm install\"\"\"",
      "answer": "This command fixes permissions issues with node_modules, especially when the folder was created by root (e.g. during Docker image build).<br><br>sudo chown -R node:node /app/node_modules:<br>Recursively changes ownership of the node_modules directory to the node user inside the container.<br><br>npm install:<br>Installs dependencies as the node user, preventing permission errors.<br><br><br>This is often needed because:<br><br>Dockerfile steps run as root by default.<br><br>The VSCode Dev Container often uses the node user for non-root operations.<br><br>Without this fix, npm install can fail with EACCES or permission denied error.<br>",
      "selected": "file1"
    },
    {
      "question": "\"[tech]<br>[windsurf]<br><br>\"\"npm test\"\" keeps getting hung (when using vitest).<br><br> What to do?\"",
      "answer": " `npx vitest run`",
      "selected": "file1"
    },
    {
      "question": "\"[vim]<br><br><img src=\"\"Screenshot 2025-03-13 at 11.59.41.png\"\"><br><br>Delete this entire function.<br><br>Start by moving the cursor to function h_prompt.<br><br>Then after the cursor is sitting at the start of the function, use another command to delete everything from the cursor to the end of the function.\"",
      "answer": "\"1. <b>/function h_prompt</b>, then <b>enter</b> <br>to get to the function.<br><br>2. Then type <b>d/^end$</b>, which will delete everything up to the word \"\"end\"\".<br><br><u><i>If you want to also delete the word end:</i></u><br><br><b>d/^end$/e</b> <br>(e stands for \"\"end of match\"\")\"",
      "selected": "file1"
    },
    {
      "question": "\"[vim]<br><br>Delete the following function using `:` and a comma, in a single line.<br><br>function h_prompt<br>&nbsp;&nbsp;&nbsp; set_color cyan&nbsp; # Username in cyan<br>&nbsp;&nbsp;&nbsp; echo -n (whoami)<br><br>&nbsp;&nbsp;&nbsp; set_color normal<br>&nbsp;&nbsp;&nbsp; echo -n \"\"@\"\"<br><br>&nbsp;&nbsp;&nbsp; set_color blue&nbsp; # Hostname in blue<br>&nbsp;&nbsp;&nbsp; echo -n (hostname | cut -d . -f1)&nbsp; # Short hostname<br><br>&nbsp;&nbsp;&nbsp; set_color normal<br>&nbsp;&nbsp;&nbsp; echo -n \"\" \"\"<br><br>&nbsp;&nbsp;&nbsp; set_color yellow&nbsp; # Last two directories in yellow<br>&nbsp;&nbsp;&nbsp; echo -n (string join \"\"/\"\" (string split \"\"/\"\" (pwd) | tail -n 2))<br><br>&nbsp;&nbsp;&nbsp; set_color normal<br>&nbsp;&nbsp;&nbsp; echo -n \"\" % \"\"<br>end\"",
      "answer": "\":/function h_prompt/,/^end$/d<br><br>/function h_prompt/ looks for the first occurence of \"\"function h_prompt\"\"<br><br>/^end$/ looks for a line containing only \"\"end\"\"<br><br>/d deletes everything in between these two matches (inclusive)\"",
      "selected": "file1"
    },
    {
      "question": "\"[vim]<br><br>delete everything by deleting the function plus the following line<br><br>function h_prompt<br>&nbsp;&nbsp;&nbsp; set_color cyan&nbsp; # Username in cyan<br>&nbsp;&nbsp;&nbsp; echo -n (whoami)<br><br>&nbsp;&nbsp;&nbsp; set_color normal<br>&nbsp;&nbsp;&nbsp; echo -n \"\"@\"\"<br><br>&nbsp;&nbsp;&nbsp; set_color blue&nbsp; # Hostname in blue<br>&nbsp;&nbsp;&nbsp; echo -n (hostname | cut -d . -f1)&nbsp; # Short hostname<br><br>&nbsp;&nbsp;&nbsp; set_color normal<br>&nbsp;&nbsp;&nbsp; echo -n \"\" \"\"<br><br>&nbsp;&nbsp;&nbsp; set_color yellow&nbsp; # Last two directories in yellow<br>&nbsp;&nbsp;&nbsp; echo -n (string join \"\"/\"\" (string split \"\"/\"\" (pwd) | tail -n 2))<br><br>&nbsp;&nbsp;&nbsp; set_color normal<br>&nbsp;&nbsp;&nbsp; echo -n \"\" % \"\"<br>end<br>test<br><br><b>Hint:</b><br>Start with d/\"",
      "answer": "\"Starting at the top line (function h_prompt), type: <br>d/^end$/+1d<br><br>- this deletes everything, plus the next line containing \"\"test\"\"\"",
      "selected": "file1"
    },
    {
      "question": "\"[vim]<br><br>use visual mode to delete the following:<br><br>function h_prompt<br>&nbsp;&nbsp;&nbsp; set_color cyan&nbsp; # Username in cyan<br>&nbsp;&nbsp;&nbsp; echo -n (whoami)<br><br>&nbsp;&nbsp;&nbsp; set_color normal<br>&nbsp;&nbsp;&nbsp; echo -n \"\"@\"\"<br><br>&nbsp;&nbsp;&nbsp; set_color blue&nbsp; # Hostname in blue<br>&nbsp;&nbsp;&nbsp; echo -n (hostname | cut -d . -f1)&nbsp; # Short hostname<br><br>&nbsp;&nbsp;&nbsp; set_color normal<br>&nbsp;&nbsp;&nbsp; echo -n \"\" \"\"<br><br>&nbsp;&nbsp;&nbsp; set_color yellow&nbsp; # Last two directories in yellow<br>&nbsp;&nbsp;&nbsp; echo -n (string join \"\"/\"\" (string split \"\"/\"\" (pwd) | tail -n 2))<br><br>&nbsp;&nbsp;&nbsp; set_color normal<br>&nbsp;&nbsp;&nbsp; echo -n \"\" % \"\"<br>end\"",
      "answer": "`/function h_prompt` to get to the first line.<br><br>enter visual line mode: V<br><br>/^end$/ to get to the last line.<br><br>Press d to delete",
      "selected": "file1"
    },
    {
      "question": "\"calcaneus, talus movements:<br><br><img src=\"\"calcaneal-talus-flexion.png\"\">\"",
      "answer": "\"<img src=\"\"Screenshot 2023-11-28 at 12.45.49 PM.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "\"docker ps<br><br><table border=\"\"1\"\"><br>  <thead><br>    <tr><br>      <th>CONTAINER ID</th><br>      <th>IMAGE</th><br>      <th>COMMAND</th><br>      <th>CREATED</th><br>      <th>STATUS</th><br>      <th>PORTS</th><br>      <th>NAMES</th><br>    </tr><br>  </thead><br>  <tbody><br>    <tr><br>      <td>5c488f9bf3d4</td><br>      <td>postgres:12.0-alpine</td><br>      <td>\"\"docker-entrypoint.s\u2026\"\"</td><br>      <td>About a minute ago</td><br>      <td>Up About a minute</td><br>      <td>0.0.0.0:5432->5432/tcp, [::]:5432->5432/tcp</td><br>      <td>strapiDB</td><br>    </tr><br>  </tbody><br></table><br><br><pre><br>luke@ubuntu-s-1vcpu-2gb-sfo3-01:/srv/strapi/strapi-plus$ ss -tuln | grep 5432<br>tcp   LISTEN  0      4096     0.0.0.0:5432        0.0.0.0:*<br>tcp   LISTEN  0      4096        [::]:5432           [::]:*<br></pre><br><br><br><br><div>luke@ubuntu-s-1vcpu-2gb-sfo3-01:/srv/strapi/strapi-plus$ psql</div><br><div>psql: error: connection to server on socket \"\"/var/run/postgresql/.s.PGSQL.5432\"\" failed: No such file or directory</div><br><br><div> Is the server running locally and accepting connections on that socket?</div><br><br><b>Why doesn't psql work?</b>\"",
      "answer": "Because psql is trying to connect to a postgres server running on my host machine via a unix socket.<br>But I need to connect to a postgres container.<br><br>psql -h 127.0.0.1 -p 5432 -U strapi -d strapi",
      "selected": "file1"
    },
    {
      "question": "\"javascript:<br><br>What does the following do?<br><br>x ??= \"\"Hello\"\"\"",
      "answer": "\"It will only assign \"\"Hello\"\" to x if x is null or undefined.&nbsp;<br><br>If x is already assigned to something else then that line will be skipped.\"",
      "selected": "file1"
    },
    {
      "question": "\"npm run vitest -- \"\"pattern1\"\" \"\"pattern2\"\"<br><br>What does the -- do?\"",
      "answer": "<div>The -- in the context of command-line scripts (including npm scripts) serves as a separator between the command itself and any arguments you want to pass directly to the command.<br><br><br></div>",
      "selected": "file1"
    },
    {
      "question": "\"open an app that's not already open.<br><br>ie \"\"focus {app_name}\"\" doesn't work\"",
      "answer": "launch {app_name}",
      "selected": "file1"
    },
    {
      "question": "&gt; ls<br>\u0710__browser_tabs_to_BLACKHOLE<br><br>How do I cd into this? in zsh, fish?",
      "answer": "\"zsh: you can't easily<br>cd *browser_tabs* will work, but there is no autocomplete.<br><br>fish:<br>type \"\"browser\"\" then hit tab.<br>easy\"",
      "selected": "file1"
    },
    {
      "question": "&nbsp; &nbsp; // TODO Does this work??<br>&nbsp;&nbsp;&nbsp; if (! msg instanceof Error) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; logMessage = msg<br>&nbsp;&nbsp;&nbsp; }",
      "answer": "No it doesn't. The correction is this:<br><br>if (! (msg instanceof Error)) {<br>&nbsp; &nbsp; logMessage = msg<br>}",
      "selected": "file1"
    },
    {
      "question": "&nbsp;<br> [sound:googletts-fa57f7bf-a75c558b-b5b70de1-6dd2fd92-921bec06.mp3]\"",
      "answer": "\"<img src=\"\"Tarsal_bones_-_animation01.gif\"\">&nbsp;<br>What is the name of the joint formed by the pink bone and red bone?<br><br>\tThe talonavicular joint.<br><div id=\"\"io-extra-wrapper\"\">",
      "selected": "file1"
    },
    {
      "question": "***<br><br>walk through the gait cycle during my self assessment in the morning and throughout the day.",
      "answer": "feel through the hips and go through all of the muscle chains involved from the point-of-view from the hip.",
      "selected": "file1"
    },
    {
      "question": ".env:<br><br>AWS_ACCESS_KEY=",
      "answer": "WRONG!<br><br>The correct key is AWS_ACCESS_KEY_ID<br><br>- note: when downloading in the aws console they used AWS_ACCESS_KEY, which is incorrect.",
      "selected": "file1"
    },
    {
      "question": "4 thigh muscles that all come together to form tendon of medial knee?",
      "answer": "Sartorius<br>Gracillis<br>Semimembranosus<br>Semitendinosus",
      "selected": "file1"
    },
    {
      "question": "4 types of tissues?",
      "answer": "Connective tissue<br>Nervous tissue<br>Epithelial tissue<br>Muscular tissue",
      "selected": "file1"
    },
    {
      "question": "<blockquote>This is functionally equivalent to <span class=\"\"cloze\"\" data-cloze=\"\"git&#x20;push&#x20;origin&#x20;&#x2D;&#x2D;delete&#x20;feature&#x2D;backup\"\" data-ordinal=\"\"2\"\">[...]</span>.</blockquote>\"",
      "answer": "\"<blockquote>[tech] [git]</blockquote><blockquote>In Git, the command git push origin :feature-backup is used to <span class=\"\"cloze-inactive\"\" data-ordinal=\"\"1\"\">delete the remote branch named feature-backup</span>.</blockquote>",
      "selected": "file1"
    },
    {
      "question": "<blockquote>This is functionally equivalent to <span class=\"\"cloze-inactive\"\" data-ordinal=\"\"2\"\">git push origin --delete feature-backup</span>.</blockquote>\"",
      "answer": "\"<blockquote>[tech] [git]</blockquote><blockquote>In Git, the command git push origin :feature-backup is used to <span class=\"\"cloze\"\" data-ordinal=\"\"1\"\">delete the remote branch named feature-backup</span>.</blockquote>",
      "selected": "file1"
    },
    {
      "question": "<br> [sound:googletts-1c69a61a-053115b1-876326ed-3b0eaad9-efbcc761.mp3]\"",
      "answer": "\"<img src=\"\"Tarsal_bones_-_animation01.gif\"\">&nbsp;<br>What is the name of the joint formed by the pink bone and yellow bone?<br><br>\tThe subtalar joint.<br><div id=\"\"io-extra-wrapper\"\">",
      "selected": "file1"
    },
    {
      "question": "<br> [sound:googletts-25584981-75e5e7b6-08ff8ef9-b8d6f1d7-888b9957.mp3]\"",
      "answer": "\"<img src=\"\"Tarsal_bones_-_animation01.gif\"\">&nbsp;<br>What is the name of the joint formed by the pink bone and the large bone superior to it?<br><br>\tThe tibiotalar joint.<br><div id=\"\"io-extra-wrapper\"\">",
      "selected": "file1"
    },
    {
      "question": "<br> [sound:googletts-640e7e3d-11cbbdf5-4844e859-958c72bd-7f67cae2.mp3]\"",
      "answer": "\"<img src=\"\"Tarsal_bones_-_animation01.gif\"\">&nbsp;<br>Identify the green bones medially to laterally.<br><br>\tCuneiform bones&nbsp;(Medial,&nbsp;Intermediate,&nbsp;Lateral)<br><div id=\"\"io-extra-wrapper\"\">",
      "selected": "file1"
    },
    {
      "question": "<br> [sound:googletts-d16d48a6-69624b2e-5447af19-1153516b-604dc1d6.mp3]\"",
      "answer": "\"<img src=\"\"Tarsal_bones_-_animation01.gif\"\">&nbsp;<br>Identify the pink bone.<br><br>\tThe talus.<br><div id=\"\"io-extra-wrapper\"\">",
      "selected": "file1"
    },
    {
      "question": "<br> [sound:googletts-f4c71912-b7d20879-1428d9ad-895983cd-f49a3e8f.mp3]\"",
      "answer": "\"<img src=\"\"Tarsal_bones_-_animation01.gif\"\">&nbsp;<br>Identify the red bone<br><br>\tThe navicular.<br><div id=\"\"io-extra-wrapper\"\">",
      "selected": "file1"
    },
    {
      "question": "<div> logs/</div>\"",
      "answer": "\"<div>git restore --staged .</div>",
      "selected": "file1"
    },
    {
      "question": "<div>&nbsp; const str = string.replace(regex, '\\\\$&amp;'); // Replaces with a single backslash</div><div><br></div><div>What does the $&amp; do?</div>",
      "answer": "\"<div>$&amp; is a special placeholder in JavaScript\u2019s replace() function.</div>",
      "selected": "file1"
    },
    {
      "question": "<div>&nbsp;.gitignore &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |&nbsp; 5 +++++</div>\"",
      "answer": "In the first file 13 lines were removed.<br>In the 2nd file 79 lines were removed.<br>In the 3rd file 5 lines were added.",
      "selected": "file1"
    },
    {
      "question": "<div>&nbsp;const sql = neon(process.env.DATABASE_URL);</div><br><div><br></div><br><div>I get this error:</div><br><div><br></div><br><div>Argument of type 'string | undefined' is not assignable to parameter of type 'string'.</div><br><div>&nbsp; Type 'undefined' is not assignable to type 'string'.ts(2345)</div>",
      "answer": "\"try \"\"process.env.DATABASE_URL!\"\"<br><br>The ! tells typescript that \"\"trust me, this variable will never be undefined.\"\"<br><br>BUT: it is always safer to do proper error handling.\"",
      "selected": "file1"
    },
    {
      "question": "<div><b>What is a WSGI Server?</b><b></b></div>",
      "answer": "A python web application cannot handle HTTP requests directly from production web servers.<br><br>So a WSGI server is middleware that sits between a python web app and a web server.<br><br>It allows web servers like Nginx, Apache, Caddy, to communicate with python-based web apps like Flask, Django, FastAPI",
      "selected": "file1"
    },
    {
      "question": "<div><div>Are types in python enforced?</div><div><br></div><div>ie.</div><div><br></div><div>def createInsertQuery(table_name: str, dataset_name: str = None, schema: dict = {}, json_data: List[dict] = []):</div><div></div></div>",
      "answer": "No. It's for hinting.&nbsp; But table_name could be called as a int and python will not complain. This is because python is dynamically typed language, meaning that variable types are determined at runtime.",
      "selected": "file1"
    },
    {
      "question": "<div>Are keys with dots valid in JSON?</div>",
      "answer": "<div>&nbsp;Yes, keys with dots are valid in JSON because keys are always strings in JSON.</div>",
      "selected": "file1"
    },
    {
      "question": "<div>But there is not .git folder in the current dir. How do I find out where it's coming from?</div>\"",
      "answer": "<div>git rev-parse --show-toplevel</div>",
      "selected": "file1"
    },
    {
      "question": "<div>How do you allow public (anonymous) access to S3 objects in a bucket policy?</div>",
      "answer": "\"{<br>  \"\"Version\"\": \"\"2012-10-17\"\",<br>  \"\"Statement\"\": [<br>    {<br>      \"\"Sid\"\": \"\"PublicReadGetObject\"\",<br>      \"\"Effect\"\": \"\"Allow\"\",<br>      \"\"Principal\"\": \"\"*\"\",<br>      \"\"Action\"\": \"\"s3:GetObject\"\"<br>    }<br>  ]<br>}\"",
      "selected": "file1"
    },
    {
      "question": "<div>What connects the perineal body to the coccyx?</div>",
      "answer": "The anococcygeal ligament (raphe), which acts as a fascial midline tether from the coccyx to the perineal body.",
      "selected": "file1"
    },
    {
      "question": "<div>What do I use from yarn...</div><div><br></div>..if I want to set up a coding project with multiple folders, where a file or more within one of the folders (or projects) depends on something inside of the other folder.",
      "answer": "yarn workspaces",
      "selected": "file1"
    },
    {
      "question": "<div>What does the --loader flag do in Node.js?</div>",
      "answer": "<div>&nbsp;It allows you to manually specify a custom module loader, such as Yarn\u2019s .pnp.loader.mjs for ESM projects using Plug\u2019n\u2019Play.</div>",
      "selected": "file1"
    },
    {
      "question": "<div>What happens if you run yarn mocha --loader .pnp.loader.mjs in a Yarn PnP project?</div>",
      "answer": "<div>&nbsp;It can cause a conflict because Yarn already sets up the PnP loader, and adding the --loader flag redundantly re-applies it, potentially causing errors like ERR_METHOD_NOT_IMPLEMENTED.</div>",
      "selected": "file1"
    },
    {
      "question": "<div>What is .pnp.loader.mjs used for in a Yarn Plug\u2019n\u2019Play project?</div>",
      "answer": "<div>&nbsp;It is Yarn\u2019s custom ESM loader that enables Node.js to resolve modules according to PnP rules.</div>",
      "selected": "file1"
    },
    {
      "question": "<div>What is the difference between the filum terminale internum and externum?</div>",
      "answer": "<div>Internum: inside the dural sac (L2\u2013S2).</div><div>Externum: outside the dural sac, attaches the dural sac to the coccyx (S2\u2013Co1).</div>",
      "selected": "file1"
    },
    {
      "question": "<div>What is the filum terminale externum and how can it affect the coccyx?</div>",
      "answer": "It\u2019s a fibrous extension of the spinal cord dura mater that attaches to the coccyx. <br>It stabilizes the cord. <br>If overly taut (e.g., in tethered cord syndrome), it can exert upward (cephalad) pull on the coccyx.",
      "selected": "file1"
    },
    {
      "question": "<div>What\u2019s the core problem with mixing Yarn and manual --loader flags?</div>",
      "answer": "<div>&nbsp;It creates conflicting module resolution logic by trying to apply the PnP loader twice, leading to runtime errors or unexpected behavior.</div>",
      "selected": "file1"
    },
    {
      "question": "<div>Why should you avoid using dots in keys if your data is indexed or queried in databases or log processors?</div>",
      "answer": "<div>Dots can be ambiguous because they are often interpreted as indicating nested structures.</div>",
      "selected": "file1"
    },
    {
      "question": "<div>[anatomy]</div><div><br></div><div>What is the perineal body and how does it affect the coccyx?</div>",
      "answer": "The perineal body is a fibromuscular node at the center of the perineum. <br>It connects multiple pelvic floor muscles and the anococcygeal ligament. <br>Asymmetry in its tension can pull on the coccyx and shift it from midline.",
      "selected": "file1"
    },
    {
      "question": "<div>[math]<br></div><div><br></div><div><b>Why is</b></div>\\(|\\vec{a} \\times \\vec{b}| = |\\vec{a}| \\cdot |\\vec{b}| \\cdot \\sin(\\theta)\\)<br><br><div><div><div><b>What does this represent geometrically?</b></div></div></div>",
      "answer": "\"<div>This equation expresses the <b>magnitude of the cross product</b>, which equals the <b>area of the parallelogram</b> formed by vectors <b>a</b> and <b>b</b>.</div><br><div><ul><li><div>\\(|\\vec{a}|\\)&nbsp;is the length of vector <b>a</b> (the base).</div></li></ul></div><br><div><ul><li><div><span style=\"\"white-space: pre;\"\">\\(|\\vec{b}| \\cdot \\sin(\\theta)\\)</span>&nbsp;is the&nbsp;<b>height</b>&nbsp;\u2014 the component of&nbsp;<b>b</b>&nbsp;that\u2019s&nbsp;<b>perpendicular</b>&nbsp;to&nbsp;<b>a</b>.</div></li></ul></div><div><br></div><br><div>So the area is:&nbsp;</div><div>\\(\\text{Area} = \\text{base} \\cdot \\text{height} = |\\vec{a}| \\cdot |\\vec{b}| \\cdot \\sin(\\theta)\\)</div><div></div><div><br></div><div>This matches the <b>magnitude of the cross product</b>:</div><br><div><ul><li><br><div><b>Zero</b> if the vectors are parallel (&nbsp;\\(\\sin(\\theta) = 0\\)&nbsp;)</div><br></li><li><br><div><b>Maximum</b> if they are perpendicular (&nbsp;\\(\\sin(\\theta) = 1\\))</div><br></li></ul><div><br></div></div><div><img src=\"\"cross_product_parallelogram.png\"\"><br></div><br><div></div><img src=\"\"IMG_20250519_172241.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "<h1>\u201cWhen we have to change our mind about a person,&nbsp;</h1>",
      "answer": "<h1>we hold the inconvenience he causes us very much against him.\u201d</h1>",
      "selected": "file1"
    },
    {
      "question": "<pre><code>git reset HEAD~ --soft</code></pre><pre><code>vs</code></pre><pre><code>git reset HEAD~ --hard</code></pre>",
      "answer": "--soft keeps all of changes in the staging area, and working directory in-tact.<br>--hard causes the staging area and working directory to also reset back to the previous commit.",
      "selected": "file1"
    },
    {
      "question": "A",
      "answer": "air",
      "selected": "file1"
    },
    {
      "question": "A pleasure ",
      "answer": "Placer",
      "selected": "file1"
    },
    {
      "question": "A tool for exploring docker images?",
      "answer": "Dive",
      "selected": "file1"
    },
    {
      "question": "Abrir",
      "answer": "To open",
      "selected": "file1"
    },
    {
      "question": "Actions of lats",
      "answer": "Spinal rotation to the same side<br>Internal concentric rotator<br>External eccentric rotator<br>Side flexion<br>Arm adduction",
      "selected": "file1"
    },
    {
      "question": "Added ingredients to look out for in supplements?",
      "answer": "Magnesium Silicate (bad)<br><br>Magnesium Stearate (minor bad)<br>  -also called \u201cvegetable stearate\u201d or \u201cstearic acid,\u201d",
      "selected": "file1"
    },
    {
      "question": "After changing ownership or permissions for a file or folder that has to do with using ssh.,<br><br>What do you do next?",
      "answer": "sudo systemctl reload sshd",
      "selected": "file1"
    },
    {
      "question": "After editing a file how do you see the changes?",
      "answer": "jj diff<br><br>or jj diff --git",
      "selected": "file1"
    },
    {
      "question": "Alguien",
      "answer": "Someone",
      "selected": "file1"
    },
    {
      "question": "Alternative to bull-board?",
      "answer": "Arena.<br><br>It works for bullmq and beeQueue",
      "selected": "file1"
    },
    {
      "question": "Alternative to cat that colorized everything?",
      "answer": "bat",
      "selected": "file1"
    },
    {
      "question": "Alternatives to git",
      "answer": "Git Butler<br><br>Jujitsu",
      "selected": "file1"
    },
    {
      "question": "Alternatives to nginx?",
      "answer": "HAProxy, Caddy",
      "selected": "file1"
    },
    {
      "question": "Always store data in its full precision, until displaying to the user. Then I can change a decimal to a percentage with 2 decimal places, for example, Or Display in dollars and cents.",
      "answer": "In my program always store things the way that is best for the computer. By maintining things like this it's much easier to do math and more accurate. If I mess with the types, or lose precision.. then when I run into errors it's going to be difficult to trace.",
      "selected": "file1"
    },
    {
      "question": "Ampliar",
      "answer": "To expand, grow, enlarge",
      "selected": "file1"
    },
    {
      "question": "An order",
      "answer": "Una orden",
      "selected": "file1"
    },
    {
      "question": "And then..",
      "answer": "Y luego..",
      "selected": "file1"
    },
    {
      "question": "Anki: What happens to leeched cards?",
      "answer": "\"They might be suspended. They will now have a tag \"\"leeched\"\". I can search for them by Browsing the cards and clicking on the \"\"leeched\"\" tag.<br>\"",
      "selected": "file1"
    },
    {
      "question": "Anki: what is leech?",
      "answer": "\"It means it is \"\"leeching\"\" a lot of my time. It's a card I can't seem to memorize.\"",
      "selected": "file1"
    },
    {
      "question": "Another name for Poroneus longus",
      "answer": "Fibularis longus",
      "selected": "file1"
    },
    {
      "question": "Another name for fibularis longus",
      "answer": "Poroneus longus",
      "selected": "file1"
    },
    {
      "question": "Another name for the Coccygeus?",
      "answer": "<strong>Ischiococcygeus</strong>",
      "selected": "file1"
    },
    {
      "question": "Another name for the big toe?",
      "answer": "Hallicus",
      "selected": "file1"
    },
    {
      "question": "Another name for the frontal plane?",
      "answer": "coronal plane",
      "selected": "file1"
    },
    {
      "question": "Another name for the tibio-talar joint?",
      "answer": "Talocrural joint",
      "selected": "file1"
    },
    {
      "question": "Another term for Empathy Burnout?",
      "answer": "Compassion Fatigue",
      "selected": "file1"
    },
    {
      "question": "Another term for a muscle memory ",
      "answer": "Engram",
      "selected": "file1"
    },
    {
      "question": "Another term for the stretch reflex?",
      "answer": "Myotatic reflex",
      "selected": "file1"
    },
    {
      "question": "Anus",
      "answer": "Fundillo",
      "selected": "file1"
    },
    {
      "question": "Arena",
      "answer": "Sand",
      "selected": "file1"
    },
    {
      "question": "Arm",
      "answer": "Brazo",
      "selected": "file1"
    },
    {
      "question": "Around ",
      "answer": "alrededor",
      "selected": "file1"
    },
    {
      "question": "Ask me",
      "answer": "Preguntame",
      "selected": "file1"
    },
    {
      "question": "Assertions vs errors. When to use?",
      "answer": "\"\"\"In general, if you want to check conditions that could be violated due to external factors (like bad input from a user or a file), throwing errors after manual checks is a good choice. On the other hand, if you're checking conditions that should never be violated unless there's a bug in your code, assertions would be a good choice.\"\"\"",
      "selected": "file1"
    },
    {
      "question": "As\u00ed que estoy<br><br>Vs<br><br>As\u00ed estoy ",
      "answer": "\"Que makes it for an action. The other is for feeling.<br><br>As\u00ed que is for an action, for example: \"\"so I am thinking a lot about it\"\" => \"\"as\u00ed que estoy pensando mucho en ello\"\"<br><br>We add \"\"que\"\" to make it more.of an affirmation.<br><br>But if it was more for feeling, ie <br><br>As\u00ed que estoy translates more to \"\"so I am\"\" whereas as\u00ed estoy translates more to \"\"that's how I am.\"\"\"",
      "selected": "file1"
    },
    {
      "question": "At the start of a function, if passing in data, what should I always get in the habit of doing?",
      "answer": "Making copies of that data, which will prevent side effects. Never operate on the data that was passed in, unless it's explicitly object-oriented.",
      "selected": "file1"
    },
    {
      "question": "Attitude",
      "answer": "Actitude",
      "selected": "file1"
    },
    {
      "question": "Avenue",
      "answer": "Avenida",
      "selected": "file1"
    },
    {
      "question": "B",
      "answer": "bat",
      "selected": "file1"
    },
    {
      "question": "Bash scripting: What separators should be used?",
      "answer": "\\0 or \\n",
      "selected": "file1"
    },
    {
      "question": "Bash terminal: open an apple script for editing, ie my_applescript.scpt",
      "answer": "\"open -a \"\"Script Editor\"\" my_applescript.scpt\"",
      "selected": "file1"
    },
    {
      "question": "Basic unit of the kidney",
      "answer": "Nefron",
      "selected": "file1"
    },
    {
      "question": "Be careful with the traps.",
      "answer": "Remember when I started feeling issues in my upper thoracic, and then it got better with hanging exercises, but got much worse after doing squats with 30kg in each hand.<br><br>Maybe that was pulling down too much on my traps, and it led to this issue.<br><br>Remember years ago when I worked out really hard, and felt great, then put my guitar strap on my shoulder and immediately felt all of this shooting pain and muslce spasms go down my back.",
      "selected": "file1"
    },
    {
      "question": "Bedroom",
      "answer": "Dormitorio",
      "selected": "file1"
    },
    {
      "question": "Besando",
      "answer": "Making out, kissing",
      "selected": "file1"
    },
    {
      "question": "Beside the Latissimus Dorsi, what other muscles connect from the upper back / shoulder down to the lower back / hip area?&nbsp;",
      "answer": "Iliocostalis Lumborum<br>Longissimus Thoracis",
      "selected": "file1"
    },
    {
      "question": "Beso",
      "answer": "Kiss",
      "selected": "file1"
    },
    {
      "question": "Best",
      "answer": "Mejor",
      "selected": "file1"
    },
    {
      "question": "Better terminal-based apps to work with git?",
      "answer": "tig<br>lazygit",
      "selected": "file1"
    },
    {
      "question": "Bitch; whore; slut",
      "answer": "Zorra",
      "selected": "file1"
    },
    {
      "question": "Blanket",
      "answer": "Manta",
      "selected": "file1"
    },
    {
      "question": "Block",
      "answer": "Bloque",
      "selected": "file1"
    },
    {
      "question": "Body ",
      "answer": "Cuerpo",
      "selected": "file1"
    },
    {
      "question": "Bone that connects to no muscles, only ligaments holding it in place?",
      "answer": "Talus",
      "selected": "file1"
    },
    {
      "question": "Both",
      "answer": "Ambos",
      "selected": "file1"
    },
    {
      "question": "Break this down into programming lessons:",
      "answer": "\"<div><a href=\"\"file:///Users/luketych/Downloads/cascading_complexity_audit.md\"\">file:///Users/luketych/Downloads/cascading_complexity_audit.md</a><a href=\"\"file:///Users/luketych/Downloads/cascading_complexity_audit.md\"\">file:///Users/luketych/Downloads/cascading_complexity_audit.md</a>\"\"Want a real example? Even the creator of htop, Hisham Muhammad, later wrote about wishing he\u2019d had better UI primitives to build it in a more robust, maintainable way.\"\"</div><div><br></div><div>Tell me more..<br><br><br><div>Absolutely \u2014 this is a real and insightful story.</div><div><br></div><div><h3><b>\ud83c\udfaf The Story: Hisham Muhammad and&nbsp;</b></h3><h3><b>htop</b></h3></div><div><br></div><div><b>Hisham Muhammad</b>&nbsp;is the original creator of&nbsp;<a href=\"\"https://htop.dev/\"\"><b>htop</b></a>&nbsp;\u2014 the popular interactive process viewer for Unix systems. It\u2019s one of the most beloved TUIs ever made, used globally by sysadmins and developers.</div><div><br></div><div>But despite its popularity,&nbsp;<b>Hisham later reflected critically</b>&nbsp;on his experience maintaining and extending htop.</div><div></div><div><h3><b>\ud83e\udde0 What He Said (Summary of His Reflections)</b></h3></div><div><br></div><div>In a&nbsp;<a href=\"\"https://hisham.hm/2016/09/02/a-farewell-to-htop/\"\">2016 blog post titled&nbsp;<i>\u201cA farewell to htop\u201d</i></a>&nbsp;\u2014 when he stepped away from the project \u2014 Hisham shared several frustrations:</div><div><br></div><div><b>\ud83d\udd38 1.&nbsp;</b><b>Poor Modularity and Maintainability</b></div><div><br></div><blockquote>\u201chtop was a monolith, hard to extend and hard to modify.\u201d</blockquote><div><br></div><div>He originally wrote it as a C program with ncurses, without anticipating its future complexity. As features grew, the codebase became harder to work with.</div><div><br></div><div><b>\ud83d\udd38 2.&nbsp;</b><b>Tight Coupling with the Terminal</b></div><div><br></div><blockquote>\u201cThere\u2019s only so far you can go with ncurses before things get hacky.\u201d</blockquote><div><br></div><div>He described the complexity of updating views, dealing with refreshes, and redrawing \u2014 all made harder by the&nbsp;<b>inherent limitations of the terminal</b>.</div><div><br></div><div><b>\ud83d\udd38 3.&nbsp;</b><b>Technical Debt Due to Terminal Constraints</b></div><div><br></div><div>He mentioned how&nbsp;<b>even simple UI changes required wrestling with escape sequences, resizing issues</b>, and various terminal inconsistencies.</div><div></div><div><h3><b>\ud83d\udd0e Notable Quote:</b></h3></div><div><br></div><blockquote>\u201cI often fantasized about rewriting htop in a different architecture, with proper model/view separation, and maybe even writing a graphical version.\u201d</blockquote><div><br></div><div>This shows that even one of the most successful terminal-based tools was held back by the&nbsp;<b>terminal itself</b>.</div><div></div><div><h3><b>\ud83d\udccd So Why Did He Stick With TUI?</b></h3></div><div><br></div><div>Because when htop was born (circa 2004), TUIs were still the&nbsp;<b>only portable way</b>&nbsp;to create rich-ish UIs on headless or minimal systems.</div><div></div><div><h2><b>\ud83e\udded Key Takeaway</b></h2></div><div><br></div><div>Even the creator of one of the&nbsp;<b>best TUIs ever made</b>&nbsp;wishes he\u2019d built it with&nbsp;<b>more flexible UI primitives</b>&nbsp;\u2014 ideally, something that separated:</div><div><ul><li><div><b>data and model logic</b><b></b></div></li><li><div><b>rendering and view logic</b><b></b></div></li><li><div><b>input handling</b></div></li></ul></div><div><br></div><div>This is exactly the kind of thing that GUI toolkits or canvas-based engines (like SDL or L\u00d6VE) allow today.</div><div></div><div>Would you like a breakdown of how htop would look if reimagined as a GUI app using minimal pixels or a framework like ImGui?<br><br></div></div><div><br></div><div><div>tell me about ncurses, and also tell me about how the complexity grew as the project scaled</div></div><div><br></div><div><br></div><div><br></div><div><div>Absolutely. Let\u2019s break this into two parts:</div><div></div><div><h2><b>\ud83e\uddf1 1. What is&nbsp;</b></h2><h2><b>ncurses</b></h2><h2><b>?</b></h2></div><div><br></div><div><h3><b>\ud83e\udded Summary:</b></h3></div><div><br></div><div><b>ncurses</b>&nbsp;is a C library for building text-based user interfaces in the&nbsp;<b>terminal</b>. It provides functions to move the cursor, change colors, draw boxes, handle keyboard input, etc. \u2014 without manually sending raw ANSI escape codes.</div><div><br></div><div>It was created to abstract over inconsistencies in terminal capabilities.</div><div></div><div><h3><b>\ud83d\udd39 Key Features of&nbsp;</b><b>ncurses</b></h3><h3><table><tbody><tr><th><div><b>Feature</b></div></th><th><div><b>What it does</b></div></th></tr><tr><td><div><b>Windowing system</b></div></td><td><div>Allows multiple text \u201cwindows\u201d or regions</div></td></tr><tr><td><div><b>Cursor movement</b></div></td><td><div>Move the cursor to arbitrary positions on the screen</div></td></tr><tr><td><div><b>Color support</b></div></td><td><div>Use colors, bold, reverse video, etc.</div></td></tr><tr><td><div><b>Keyboard input</b></div></td><td><div>Detect keypresses (arrow keys, function keys, etc.)</div></td></tr><tr><td><div><b>Screen redrawing</b></div></td><td><div>Automatically refresh only parts of the screen that changed</div></td></tr><tr><td><div><b>Terminal capability database</b>&nbsp;(terminfo)</div></td><td><div>Makes apps work across many different terminal types</div></td></tr></tbody></table></h3></div></div><div><b><br></b></div><div><b><br></b></div><div><b><br></b></div><div><div><h3><b>\ud83d\udce6 What It\u2019s Good For:</b></h3></div><div><ul><li><div>Lightweight dashboards and monitoring tools (e.g. htop, tig, vtop)</div></li><li><div>Full-screen terminal apps</div></li><li><div>Cross-platform TUI development</div></li></ul></div><div></div><div><h3><b>\u26a0\ufe0f What It\u2019s Bad At:</b></h3></div><div><ul><li><div><b>Pixel-level control</b>&nbsp;(can\u2019t draw graphics)</div></li><li><div><b>Layout precision</b>&nbsp;(limited by monospace grid)</div></li><li><div><b>Input consistency</b>&nbsp;(Backspace, Esc, etc. vary by terminal)</div></li><li><div><b>Modern UX needs</b>&nbsp;(scrolling, drag/drop, animations)</div></li></ul></div><div></div><div><h2><b>\ud83e\udde8 2. Why Complexity Explodes in&nbsp;</b></h2><h2><b>ncurses</b></h2><h2><b>&nbsp;Projects (like&nbsp;</b></h2><h2><b>htop</b></h2><h2><b>)</b></h2></div><div><br></div><div><h3><b>\ud83d\udd25 1.&nbsp;</b></h3><h3><b>No Real Layout System</b></h3></div><div><ul><li><div>Everything is built on&nbsp;<b>absolute positioning</b>&nbsp;(move(y, x)).</div></li><li><div>You must manually calculate dimensions, alignment, overflow, etc.</div></li><li><div>Imagine trying to&nbsp;<b>resize and reflow multiple UI panels</b>&nbsp;in a resizable terminal\u2026 manually.</div></li></ul></div><div><br></div><div><h3><b>\ud83d\udd25 2.&nbsp;</b></h3><h3><b>Terminal Quirks Multiply</b></h3></div><div><ul><li><div>Backspace might emit ^H or ^?</div></li><li><div>Escape key delays input (conflicts with arrow key sequences)</div></li><li><div>Some keys are&nbsp;<b>undetectable</b>&nbsp;(e.g. Ctrl+Shift+arrow)</div></li></ul></div><div><br></div><div>This leads to&nbsp;<b>tons of if/else branches and hacks</b>&nbsp;just to interpret keyboard input.</div><div><br></div><div><h3><b>\ud83d\udd25 3.&nbsp;</b></h3><h3><b>Rendering Is State-Dependent</b></h3></div><div><ul><li><div>You must&nbsp;<b>keep track of the full screen state</b>&nbsp;to redraw only what\u2019s changed (refresh()).</div></li><li><div>Forgetting to wrefresh() or drawing in the wrong window = flickering or ghost UI.</div></li></ul></div><div><br></div><div><h3><b>\ud83d\udd25 4.&nbsp;</b></h3><h3><b>No Separation of Logic and UI</b></h3></div><div><ul><li><div>In many ncurses apps, the&nbsp;<b>business logic is tangled with drawing code</b>.</div></li><li><div>That makes testing, refactoring, and maintaining it hard as features are added.</div></li></ul></div><div><br></div><div><h3><b>\ud83d\udd25 5.&nbsp;</b></h3><h3><b>Handling Concurrency or Live Updates</b></h3></div><div><ul><li><div>Terminal rendering isn\u2019t thread-safe by default.</div></li><li><div>So updating e.g. CPU usage and handling input at the same time? You need careful mutexes or event loops.</div></li></ul></div><div><br></div><div><h3><b>\ud83d\udd25 6.&nbsp;</b></h3><h3><b>Internationalization (i18n) is a Nightmare</b></h3></div><div><ul><li><div>Unicode rendering with wide characters, double-width Asian characters, RTL scripts \u2014 all require&nbsp;<b>manual hacks</b>&nbsp;in ncurses.</div></li></ul></div><div></div><div><h2><b>\ud83d\udea7 In&nbsp;</b></h2><h2><b>htop</b></h2><h2><b>&nbsp;Specifically:</b></h2></div><div><br></div><div>As features grew (like tree view, search, filters, per-core CPU meters), the team had to:</div><div><ul><li><div><b>Manually manage multiple \u201cwindows\u201d and redraw regions</b><b></b></div></li><li><div>Handle&nbsp;<b>weird bugs in terminal emulators</b><b></b></div></li><li><div>Tangle&nbsp;<b>input handling</b>&nbsp;with&nbsp;<b>UI rendering</b><b></b></div></li><li><div>Add&nbsp;<b>custom code</b>&nbsp;to support colors, bold text, line-drawing characters</div></li></ul></div><div><br></div><div>Eventually, the codebase became harder to reason about, which Hisham (the original author) admitted in his farewell post.</div><div></div><div><h2><b>\ud83e\udde0 TL;DR</b></h2></div></div><div><table><tbody><tr><th><div><b>\ud83d\udd27 Feature</b></div></th><th><div><b>\u2705 ncurses Strength</b></div></th><th><div><b>\u274c Pain Point as Project Scales</b></div></th></tr><tr><td><div>Initial layout &amp; input</div></td><td><div>Easy</div></td><td><div>Hard to maintain as UI grows</div></td></tr><tr><td><div>Portability</div></td><td><div>Great</div></td><td><div>Terminal quirks creep in</div></td></tr><tr><td><div>Rendering model</div></td><td><div>Simple</div></td><td><div>Gets fragile with animations</div></td></tr><tr><td><div>Modularity &amp; testing</div></td><td><div>None</div></td><td><div>Everything is stateful</div></td></tr><tr><td><div>Unicode &amp; accessibility</div></td><td><div>Not built-in</div></td><td><div>Requires extra effort</div></td></tr></tbody></table></div><div><b><br></b></div><div><b><br></b></div><div><b><br></b></div><div><div><br></div><div>If you\u2019re building complex or dynamic interfaces, consider:</div><div><ul><li><div><b>ImGui</b>&nbsp;(for modern GUI with minimal overhead)</div></li><li><div><b>L\u00d6VE / SDL / SFML</b>&nbsp;(canvas-based rendering)</div></li><li><div><b>React + Tauri</b>&nbsp;(if going cross-platform GUI)</div></li><li><div>Even&nbsp;<b>CLI tools with web dashboards</b>&nbsp;(e.g. using Textualize or Rich to bridge CLI and HTML)</div></li></ul></div><div></div><div>Want a working code comparison between ncurses and something like Dear ImGui to show how much less pain the modern approach involves?</div></div><div><br></div><div><div><br></div><div><br></div><div>what lessons can we abstract out of this example that would help a programmer to know more about cascading and compounding complexities and uncertainties?</div></div><div><br></div><div><br></div><div><br></div><div><br></div><div><div>This is a powerful question \u2014 because what you\u2019re really asking is:</div><div><br></div><blockquote><b>How do small, manageable systems become fragile monsters \u2014 and how can we see it coming before it\u2019s too late?</b><b></b></blockquote><div><br></div><div>Using htop + ncurses as the case study, here are&nbsp;<b>key lessons and abstracted patterns</b>&nbsp;about&nbsp;<b>cascading complexity and compounding uncertainty</b>&nbsp;that apply to any growing software project.</div><div></div><div><h2><b>\ud83e\udde0 1.&nbsp;</b></h2><h2><b>Early Optimizations Create Long-Term Lock-In</b></h2></div><div><ul><li><div>Hisham picked ncurses because it let him get a working UI&nbsp;<b>quickly</b>.</div></li><li><div>But it&nbsp;<b>locked the project</b>&nbsp;into escape sequences, fixed-width grids, and termcap quirks.</div></li><li><div><b>Lesson:</b>&nbsp;The path of least resistance today becomes the concrete slab you can\u2019t dig under tomorrow.</div></li></ul></div><div><br></div><blockquote>\u26a0\ufe0f Beware when a dependency that solves&nbsp;<i>everything</i>&nbsp;at first starts to dictate your architecture.</blockquote><div></div><div><h2><b>\ud83e\udde0 2.&nbsp;</b></h2><h2><b>Tight Coupling + Lack of Separation = Scaling Pain</b></h2></div><div><ul><li><div>htop grew organically \u2014 logic and UI were tangled.</div></li><li><div>As complexity increased (tree views, filters, metrics), small UI changes required deep refactors.</div></li><li><div><b>Lesson:</b>&nbsp;Early disregard for separation of concerns leads to fragile interdependencies.</div></li></ul></div><div><br></div><blockquote>\ud83d\udca1 Ask early:&nbsp;<i>If I had to replace this whole UI or engine, could I do it without rewriting the logic?</i><i></i></blockquote><div></div><div><h2><b>\ud83e\udde0 3.&nbsp;</b></h2><h2><b>Local Workarounds Become Global Hazards</b></h2></div><div><ul><li><div>The Backspace workaround (ctrl-h) solved one issue.</div></li><li><div>But it reveals a broader truth:&nbsp;<b>Terminal I/O is not standardized</b>, and your workaround for one emulator breaks another.</div></li><li><div><b>Lesson:</b>&nbsp;Fixes that solve one edge case often introduce hidden branches of future failure.</div></li></ul></div><div><br></div><blockquote>\u26a0\ufe0f Be suspicious of hacks that fix symptoms without solving root causes \u2014 they accumulate entropy.</blockquote><div></div><div><h2><b>\ud83e\udde0 4.&nbsp;</b></h2><h2><b>Low-Level Control Becomes a Liability</b></h2></div><div><ul><li><div>With ncurses, you control every redraw, every input event, every position \u2014 great for precision.</div></li><li><div>But every feature adds&nbsp;<b>state</b>, and now you\u2019re managing dozens of tiny decisions at once.</div></li><li><div><b>Lesson:</b>&nbsp;Micro-control scales poorly unless wrapped in modular abstractions.</div></li></ul></div><div><br></div><blockquote>\ud83d\udd27 Use libraries that give you&nbsp;<b>high-level primitives</b>&nbsp;when you\u2019re solving high-level problems.</blockquote><div></div><div><h2><b>\ud83e\udde0 5.&nbsp;</b></h2><h2><b>Growing Surface Area = Exponential Uncertainty</b></h2></div><div><ul><li><div>Supporting more platforms, terminals, key layouts, screen sizes introduces&nbsp;<b>nonlinear complexity</b>.</div></li><li><div>Tiny features create&nbsp;<b>interactions</b>&nbsp;you can\u2019t predict.</div></li><li><div><b>Lesson:</b>&nbsp;Complexity isn\u2019t additive \u2014 it\u2019s&nbsp;<b>combinatorial</b>.</div></li></ul></div><div><br></div><blockquote>\ud83e\udde0 Ask:&nbsp;<i>How many things does this new feature depend on? How many things depend on it?</i><i></i></blockquote><div></div><div><h2><b>\ud83e\udde0 6.&nbsp;</b></h2><h2><b>If It Wasn\u2019t Built to Evolve, It Can\u2019t</b></h2></div><div><ul><li><div>htop wasn\u2019t modular. It wasn\u2019t built for plug-ins, rendering engines, or layout changes.</div></li><li><div>Once usage scaled,&nbsp;<b>refactoring was too risky</b>, so it ossified.</div></li><li><div><b>Lesson:</b>&nbsp;Code that isn\u2019t designed for evolution will rot under pressure.</div></li></ul></div><div><br></div><blockquote>\ud83e\uddec Favor simplicity, but plan for change \u2014 even when you think you\u2019ll never need it.</blockquote><div></div><div><h2><b>\ud83e\udde0 7.&nbsp;</b></h2><h2><b>The Medium Shapes the System</b></h2></div><div><ul><li><div>The&nbsp;<b>terminal</b>&nbsp;was the root cause of many of htop\u2019s growing pains \u2014 fixed-width grids, limited input models, platform inconsistencies.</div></li><li><div>Even though Hisham wrote great code, the&nbsp;<b>environment constrained what was possible</b>.</div></li><li><div><b>Lesson:</b>&nbsp;The platform you choose early on shapes what your software can become.</div></li></ul></div><div><br></div><blockquote>\ud83e\udded Choose your foundation based not on what works&nbsp;<i>today</i>, but what\u2019s composable&nbsp;<i>tomorrow</i>.</blockquote><div></div><div><h2><b>\ud83d\udd04 Abstracted Pattern:&nbsp;</b></h2><h2><b>\u201cEntropy Traps\u201d</b></h2></div><div><br></div><blockquote>A project starts simple. You layer in features.</blockquote><blockquote>Then: each new thing requires&nbsp;<b>more exception handling, more special-cases, more glue code</b>.</blockquote><blockquote>Eventually, the glue becomes so heavy you can\u2019t move.</blockquote><div><br></div><div><b>The trap is thinking that complexity will scale linearly. It never does.</b><b></b></div><div></div><div><h2><b>\ud83d\udee0 Tools to Recognize and Prevent This</b></h2></div></div><div><table><tbody><tr><th><div><b>Tool / Habit</b></div></th><th><div><b>How it helps</b></div></th></tr><tr><td><div>\u2702\ufe0f Separation of concerns</div></td><td><div>Decouples UI, logic, rendering, input</div></td></tr><tr><td><div>\ud83e\uddea Testability</div></td><td><div>Forces clearer modular design</div></td></tr><tr><td><div>\u267b\ufe0f Layered abstraction</div></td><td><div>Allows platform swaps without deep rewrites</div></td></tr><tr><td><div>\ud83d\udcc8 Complexity audits</div></td><td><div>Ask: \u201cHow many modules talk to this one?\u201d</div></td></tr><tr><td><div>\ud83e\uddf1 Domain boundaries</div></td><td><div>Design systems as&nbsp;<b>composable blocks</b>, not patches</div></td></tr><tr><td><div>\ud83d\udcc9 Resist \u201ceasy now, hard later\u201d</div></td><td><div>Optimize for&nbsp;<b>changeability</b>, not just speed</div></td></tr></tbody></table><br></div><div><br></div><div><br></div><div># \u2705 Cascading Complexity Audit Worksheet<br><br>&gt; Run this for a project, feature, or module.&nbsp; <br>&gt; Score each question from 0\u20133:<br>&gt; - 0 = No concern&nbsp; <br>&gt; - 1 = Minor concern&nbsp; <br>&gt; - 2 = Noticeable friction&nbsp; <br>&gt; - 3 = Clear source of risk / tech debt<br><br>---<br><br>## \ud83e\udde9 Modularity &amp; Separation<br><br>| Question&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Score |<br>|--------------------------------------------------------------------------------------------|-------|<br>| Is UI logic separated from business/data logic?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Can rendering/output be swapped (e.g. terminal to GUI) without rewriting core logic?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Can you test logic **without** launching the full app or environment?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br><br>---<br><br>## \ud83e\udde0 Composability &amp; Changeability<br><br>| Question&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Score |<br>|--------------------------------------------------------------------------------------------|-------|<br>| Can you add a new feature without modifying more than 2 files/modules?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Can you remove a feature without cascading changes elsewhere?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Are components **composable** (can they be reused in a different order or context)?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br><br>---<br><br>## \ud83d\udee0 Abstractions vs. Escape Hatches<br><br>| Question&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Score |<br>|--------------------------------------------------------------------------------------------|-------|<br>| Are you relying on low-level details (e.g. ANSI escape codes, byte streams)?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Are there \"\"special cases\"\" hardcoded into otherwise reusable code?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Are you re-implementing things your platform should abstract for you?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br><br>---<br><br>## \u2699\ufe0f Platform &amp; Environment Lock-In<br><br>| Question&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Score |<br>|--------------------------------------------------------------------------------------------|-------|<br>| Is your system tied to a platform with known inconsistencies (e.g. terminals)?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Do you rely on behavior that varies across platforms (key input, rendering, etc.)?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Would migrating to a different environment (GUI, web, mobile) require a full rewrite?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br><br>---<br><br>## \ud83e\uddee Cognitive Overhead<br><br>| Question&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Score |<br>|--------------------------------------------------------------------------------------------|-------|<br>| Do you have to keep a mental model of several systems to make a change?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Is there UI code that also handles data logic or side effects?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Are small bugs hard to fix because they involve 3+ interconnected concerns?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br><br>---<br><br>## \ud83d\udd04 Entropy from Workarounds<br><br>| Question&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Score |<br>|--------------------------------------------------------------------------------------------|-------|<br>| Are there known hacks or TODOs that \u201cjust work for now\u201d?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Are there areas where you \u201cdon\u2019t touch it because it breaks\u201d?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| Are bug fixes starting to cause regressions in other parts of the system?&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br><br>---<br><br>## \ud83d\udcca Scoring &amp; Interpretation<br><br>| Total Score Range | Meaning&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>|-------------------|------------------------------------------------------------------------|<br>| **0\u201310**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | \u2705 System is lean and modular. Keep an eye out as it grows.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; |<br>| **11\u201325**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | \u26a0\ufe0f Early signs of complexity creep. Refactoring may be needed soon.&nbsp;&nbsp; |<br>| **26\u201340**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | \u2757 Complexity is compounding. Prioritize architectural improvements.&nbsp;&nbsp;&nbsp; |<br>| **41\u201354**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | \ud83d\udd25 Likely in a complexity trap. Consider modular rebuilds or rewrites. |<br></div><div><br></div>\"",
      "selected": "file1"
    },
    {
      "question": "Broken ",
      "answer": "Roto",
      "selected": "file1"
    },
    {
      "question": "Brusco",
      "answer": "Rude",
      "selected": "file1"
    },
    {
      "question": "C",
      "answer": "cap",
      "selected": "file1"
    },
    {
      "question": "Calcaneal inversion causes:<br>1. the talus to do what?<br>2. The tibia to do what?",
      "answer": "Talus: abduction & dorsiflexion<br>Tibia: external rotation",
      "selected": "file1"
    },
    {
      "question": "Caminar",
      "answer": "To walk",
      "selected": "file1"
    },
    {
      "question": "Can I ask you?",
      "answer": "Puedo preguntarte?",
      "selected": "file1"
    },
    {
      "question": "Can I take a guess? ",
      "answer": "\u00bfPuedo adivinar?",
      "selected": "file1"
    },
    {
      "question": "Can you mv a python venv?",
      "answer": "No. Once you create a virtual environment it will store things like the absolute path to the python interpreter and other environment-specific settings.<br><br>When it gets mv'ed it will break it.",
      "selected": "file1"
    },
    {
      "question": "Can you speak slowly?",
      "answer": "Puede hablas mas lentamente?",
      "selected": "file1"
    },
    {
      "question": "Capitalize first letter<br><br>ie result: This is a test",
      "answer": "sentence<br><br>ie `sentence this is a test`<br>result: This is a test",
      "selected": "file1"
    },
    {
      "question": "Car",
      "answer": "Coche, carro",
      "selected": "file1"
    },
    {
      "question": "Card",
      "answer": "Tarjeta",
      "selected": "file1"
    },
    {
      "question": "Cari\u00f1o",
      "answer": "Dear or honey",
      "selected": "file1"
    },
    {
      "question": "Cejas",
      "answer": "Eyebrows",
      "selected": "file1"
    },
    {
      "question": "Cell that heal tendons",
      "answer": "Fibroblasts and tenocytes",
      "selected": "file1"
    },
    {
      "question": "Chaortic",
      "answer": "Chaos and order",
      "selected": "file1"
    },
    {
      "question": "Chaos and Order",
      "answer": "Chaortic",
      "selected": "file1"
    },
    {
      "question": "Charmed/Likewise",
      "answer": "Encantado/a",
      "selected": "file1"
    },
    {
      "question": "Check to make sure there are no syntax errors in nginx config files",
      "answer": "sudo nginx -t",
      "selected": "file1"
    },
    {
      "question": "Chismo",
      "answer": "Gossip",
      "selected": "file1"
    },
    {
      "question": "Claro",
      "answer": "Clear",
      "selected": "file1"
    },
    {
      "question": "Cocksucker",
      "answer": "Mamahuevo",
      "selected": "file1"
    },
    {
      "question": "Codo",
      "answer": "Elbow",
      "selected": "file1"
    },
    {
      "question": "Comment two lines down",
      "answer": "Comment down two",
      "selected": "file1"
    },
    {
      "question": "Compare the working directory with the staging area",
      "answer": "git diff",
      "selected": "file1"
    },
    {
      "question": "Compare two branches",
      "answer": "git diff branch1 branch2",
      "selected": "file1"
    },
    {
      "question": "Conducir",
      "answer": "To drive",
      "selected": "file1"
    },
    {
      "question": "Contar",
      "answer": "To tell",
      "selected": "file1"
    },
    {
      "question": "Cool, great, funny, gifted",
      "answer": "Genial",
      "selected": "file1"
    },
    {
      "question": "Copy line underneath ",
      "answer": "Copy down one",
      "selected": "file1"
    },
    {
      "question": "Corner",
      "answer": "Esquina",
      "selected": "file1"
    },
    {
      "question": "Correr",
      "answer": "To run",
      "selected": "file1"
    },
    {
      "question": "Cosas",
      "answer": "Things",
      "selected": "file1"
    },
    {
      "question": "Create a new line above cursor and enter insert mode",
      "answer": "O",
      "selected": "file1"
    },
    {
      "question": "CredentialsProviderError:<br><br>could not load credentials from any providers.",
      "answer": "I got this error because in my .env fie there must be a variable named AWS_ACCESS_KEY_ID.<br><br>Not AWS_ACCESS_KEY, which is what I had. Even if you are using it in your app this way. I think the AWS tool looks for AWS_ACCESS_KEY_ID specifically.",
      "selected": "file1"
    },
    {
      "question": "Ctrl+d (or CMD+d)",
      "answer": "selects the current word the cursor is on, plus the next matching word.&nbsp;<br><br>So if I am on `forEach` then press Ctrl+d, a second cursor will appear on the next `forEach`",
      "selected": "file1"
    },
    {
      "question": "Cuerpo",
      "answer": "Body",
      "selected": "file1"
    },
    {
      "question": "Cunt",
      "answer": "Co\u00f1o",
      "selected": "file1"
    },
    {
      "question": "Cup",
      "answer": "Taza",
      "selected": "file1"
    },
    {
      "question": "Cursor: Open, move cursor to Composer",
      "answer": "CMD + I",
      "selected": "file1"
    },
    {
      "question": "Cursor: show / hide right sidebar",
      "answer": "CMD + L",
      "selected": "file1"
    },
    {
      "question": "Cursorless: Delete the token under red B",
      "answer": "Chuck red bat",
      "selected": "file1"
    },
    {
      "question": "Cursorless: Select rest of line after cursor ",
      "answer": "Take tail",
      "selected": "file1"
    },
    {
      "question": "Cursorless: add blank line underneath red s",
      "answer": "Pour red sun",
      "selected": "file1"
    },
    {
      "question": "Cursorless: change homophone,<br>Ie change their to there",
      "answer": "Phones target",
      "selected": "file1"
    },
    {
      "question": "Cursorless: delete word under yellow i",
      "answer": "Chuck yellow ice",
      "selected": "file1"
    },
    {
      "question": "Cursorless: expand selection left and right until blank space",
      "answer": "Take paint",
      "selected": "file1"
    },
    {
      "question": "Cursorless: expand selection to [ ]",
      "answer": "Take box",
      "selected": "file1"
    },
    {
      "question": "Cursorless: highlight word under red dot G",
      "answer": "Take red gust",
      "selected": "file1"
    },
    {
      "question": "Cursorless: indent / unindent",
      "answer": "Indent<br>Dedent",
      "selected": "file1"
    },
    {
      "question": "Cursorless: insert line below target and move cursor there",
      "answer": "Pour target",
      "selected": "file1"
    },
    {
      "question": "Cursorless: insert new line above target and move cursor there",
      "answer": "Drink target",
      "selected": "file1"
    },
    {
      "question": "Cursorless: place cursor before the target",
      "answer": "Pre <target>",
      "selected": "file1"
    },
    {
      "question": "Cursorless: select 2nd character after red dot over A",
      "answer": "Take second char red air",
      "selected": "file1"
    },
    {
      "question": "Cursorless: select both words containing i, one blue and one red",
      "answer": "Take red ice and blue ice",
      "selected": "file1"
    },
    {
      "question": "Cursorless: swap two targets",
      "answer": "Swap target1 with target2<br>OR<br>Swap with target",
      "selected": "file1"
    },
    {
      "question": "Cut entire line",
      "answer": "dd",
      "selected": "file1"
    },
    {
      "question": "D",
      "answer": "drum",
      "selected": "file1"
    },
    {
      "question": "Dame",
      "answer": "Give me",
      "selected": "file1"
    },
    {
      "question": "Dataframe API that can use duckdb, pandas, polars, and many other libraries on the backend?",
      "answer": "ibis",
      "selected": "file1"
    },
    {
      "question": "Dating: show similar interest",
      "answer": "If they are really interested in you and complying then I need to make sure I tell them I will meet them for sure, etc.<br><br>Otherwise they might think I'm not interested.<br><br>If they are hot and cold then I need to be a bit similar.",
      "selected": "file1"
    },
    {
      "question": "Dear or honey",
      "answer": "Cari\u00f1o",
      "selected": "file1"
    },
    {
      "question": "Debir",
      "answer": "To have to",
      "selected": "file1"
    },
    {
      "question": "Decir",
      "answer": "To say",
      "selected": "file1"
    },
    {
      "question": "Decir vs Contar",
      "answer": "To say, to tell",
      "selected": "file1"
    },
    {
      "question": "Dedo",
      "answer": "Finger",
      "selected": "file1"
    },
    {
      "question": "Deepest muscle of the lower leg?",
      "answer": "Tibialis posterior",
      "selected": "file1"
    },
    {
      "question": "Delivered ",
      "answer": "Entregado",
      "selected": "file1"
    },
    {
      "question": "Despues",
      "answer": "Later",
      "selected": "file1"
    },
    {
      "question": "Difference between float and Decimal in python?",
      "answer": "float is a built-in data type. Decimal is a python module.<br><br>float using floating-point arithmetic, meaning that it approximates 0.1 as (0.0001100110011001100110011001100110011001100110011001101...)<br><br>Whereas, a Decimal will store it the way a human reads it: ('0.1')",
      "selected": "file1"
    },
    {
      "question": "Difference between mylist.extend() and mylist.append()?",
      "answer": "mylist.append([]) will add the list[] as an element to mylist. The end result will be a list, with a list as an element.<br><br>mylist.extend([]) will take the elements from the list[] and add it to itself as elements. The end result will be a list. Not a list of lists.",
      "selected": "file1"
    },
    {
      "question": "Difference between the 2?<br><br><br><div><div>class TestGetTestResourcesDir:</div><div> &nbsp; &nbsp; @classmethod</div><div> &nbsp; &nbsp; def setup_class(cls):</div><div>&nbsp; &nbsp; &nbsp; &nbsp; cls.project_root_dir = getProjectRootDir()<br></div><div> </div><div><br></div><div> @pytest.fixture(autouse=True)</div><div>def setup(self):</div><div> &nbsp; &nbsp; &nbsp; &nbsp; self.test_status = 0</div></div>",
      "answer": "setup_class() is a class method, which only runs once, before any tests are run.<br><br>setup() is a fixture method, which runs before each test.",
      "selected": "file1"
    },
    {
      "question": "Difference between the best kickboxers/MMA fighters and all the others?",
      "answer": "The best kickboxer will kick you with 2 pulses. Boom boom.<br><br>First the kicker will contract their abs and legs to get their leg moving towards you. Then they will relax and take advantage of the elastic force.<br><br>Then immediately before impact they will stiffen and transfer the force into a stiff small point of force into your body.",
      "selected": "file1"
    },
    {
      "question": "Difference between the two:<br><div><div><br></div><div>from . import setupLogger<br><br><br></div></div><div>from .setupLogger import setupLogger</div><div><br></div>",
      "answer": "The first one imports from the __init__.py module.<br><br>The second one will look in the setupLogger.py file in the current directory.<br><br>In the second one, setupLogger will be the function called setupLogger inside of setupLogger.py.<br><br>In the first one we will be importing everything inside of the setupLogger.py file, so in order to evoke the function we have to do setupLogger.setupLogger()",
      "selected": "file1"
    },
    {
      "question": "Difference between these 2:<br><br>jj new trunk()<br>VS<br>jj new main",
      "answer": "\"`jj new main` adds a new change to the end of the branch/trunk named \"\"main\"\".<br><br>`jj new trunk()` points to the current branch or trunk. You don't need to know the name.\"",
      "selected": "file1"
    },
    {
      "question": "Difference between these 2?<br>1. strapi develop<br>2. npx strapi develop",
      "answer": "strapi develop - Relies on your local node_modules/.bin/strapi being in your $PATH.<br><br>npx strapi develop - Explicitly runs</b> the binary from node_modules/.bin/strapi.",
      "selected": "file1"
    },
    {
      "question": "Difference between these 2?<br><br>git diff HEAD HEAD~1<br>and&nbsp;<br>git diff HEAD~1 HEAD",
      "answer": "<div><div><b>git diff HEAD~1 HEAD</b><b></b></div></div><div>Shows <b>what was changed from HEAD~1</b> to reach HEAD.</div><div><div><b><br></b></div><div><b>git diff HEAD HEAD~1</b></div></div><div><div> \u2022 Shows <b>what was changed in HEAD</b> compared to HEAD~1.</div></div>",
      "selected": "file1"
    },
    {
      "question": "Difference between using ./a/b/c.sh &amp; a/b/c.sh",
      "answer": ". is specific and works from other directories. If I run a/b/c.sh then it looks in $PATH for a/b/c.sh. If I run ./a/b/c.sh it looks in the current directory from where the script is being run.<br><br>",
      "selected": "file1"
    },
    {
      "question": "Difference btwn statement and expression?",
      "answer": "Expression returns a value.&nbsp;",
      "selected": "file1"
    },
    {
      "question": "Disgraceful ",
      "answer": "vergonzoso",
      "selected": "file1"
    },
    {
      "question": "Do Message Queues store data to disk?",
      "answer": "Only temporarily, in order to recover from crashes.<br><br>Once the data has been delivered and ack'ed, it is deleted.<br><br>This is different from kafka, where the data is persistent for up to a length of time, or when explicitly deleted.",
      "selected": "file1"
    },
    {
      "question": "Do relative imports work in python?",
      "answer": "In python modules. But not when directly running a python file.",
      "selected": "file1"
    },
    {
      "question": "Do rotator cuff muscles have low or high muscle spindles?",
      "answer": "High",
      "selected": "file1"
    },
    {
      "question": "Docker: what option do you use when you want to directly be able to access any ports inside the container from your local machine?",
      "answer": "\"<span style=\"\"color: rgb(255, 255, 255); font-weight: 600; background-color: rgb(68, 70, 84);\"\">--network=host</span>\"",
      "selected": "file1"
    },
    {
      "question": "Docker:<br><br><div>&nbsp;restart: unless-stopped</div><div><br></div><div>what does this do?</div>",
      "answer": "It tells docker that if the container crashes or if the system reboots then automatically restart the container.<br>Unless manually stopped.",
      "selected": "file1"
    },
    {
      "question": "Does MySQL support UTF-8?",
      "answer": "No. It says it does, but it actually supports a subset of UTF-8",
      "selected": "file1"
    },
    {
      "question": "Does internal or external rotation of the arm make it easier for the scapulae to suck up against the thorax?",
      "answer": "Internal",
      "selected": "file1"
    },
    {
      "question": "Does poetry automate the generation of version specifiers?",
      "answer": "yes",
      "selected": "file1"
    },
    {
      "question": "Does that make sense?",
      "answer": "Tiene sentido?<br><br>Eso me hace sentido?",
      "selected": "file1"
    },
    {
      "question": "Does the flexor digitorum Longus wrap to the inside of outside of the foot?",
      "answer": "Inside",
      "selected": "file1"
    },
    {
      "question": "Does&nbsp;<code>import.meta.env[key]</code>&nbsp;work?",
      "answer": "\"No. <br><br>\"\"During production, these env variables are&nbsp;<strong>statically replaced</strong>.\"\"<br>&nbsp;-&nbsp;<a href=\"\"https://vitejs.dev/guide/env-and-mode.html\"\">https://vitejs.dev/guide/env-and-mode.html</a><br>\"",
      "selected": "file1"
    },
    {
      "question": "Don't export stuff like custom stackTrace from feathers/index.js. Export it from feathers/app.js",
      "answer": "Because during tests, app is imported, but not index. So everything that relies on index.js will fail (any of my files that are importing from index.js).<br><br>The lesson here is to constantly be testing, and building testing into my constant workflow to make sure nothing breaks.<br><br>And to study and work with, not against, the libraries or frameworks I am using. Do things the way the community is doing them.",
      "selected": "file1"
    },
    {
      "question": "Don't forget me ",
      "answer": "No me olvides",
      "selected": "file1"
    },
    {
      "question": "Don't lie to me",
      "answer": "No me mientas",
      "selected": "file1"
    },
    {
      "question": "Don't think of me",
      "answer": "No me pienses",
      "selected": "file1"
    },
    {
      "question": "Dormitorio",
      "answer": "Bedroom",
      "selected": "file1"
    },
    {
      "question": "Drinking a lot of tea might make it harder to absorb what?",
      "answer": "B1",
      "selected": "file1"
    },
    {
      "question": "Due\u00f1o/a",
      "answer": "Owner",
      "selected": "file1"
    },
    {
      "question": "During hyperinflation why do value stocks tend to perform well?",
      "answer": "Because value stocks usually are over leveraged. And during hyperinflation their debts are inflated away.",
      "selected": "file1"
    },
    {
      "question": "Dyke",
      "answer": "Manflor",
      "selected": "file1"
    },
    {
      "question": "E",
      "answer": "each",
      "selected": "file1"
    },
    {
      "question": "Easy way to go down 9 lines?",
      "answer": "press 9<br>then down",
      "selected": "file1"
    },
    {
      "question": "El piso",
      "answer": "The floor",
      "selected": "file1"
    },
    {
      "question": "Elbow",
      "answer": "Codo",
      "selected": "file1"
    },
    {
      "question": "Empleado ",
      "answer": "Employee",
      "selected": "file1"
    },
    {
      "question": "Employee ",
      "answer": "Empleado",
      "selected": "file1"
    },
    {
      "question": "Enconces no..",
      "answer": "Then don't..",
      "selected": "file1"
    },
    {
      "question": "Enter visual mode",
      "answer": "v",
      "selected": "file1"
    },
    {
      "question": "Enter visual mode,<br>Visual line mode,<br>Visual block mode ",
      "answer": "v<br>V<br>Ctrl+v",
      "selected": "file1"
    },
    {
      "question": "Entonces",
      "answer": "Then",
      "selected": "file1"
    },
    {
      "question": "Entregado",
      "answer": "Delivered",
      "selected": "file1"
    },
    {
      "question": "Enzymes that help digest carbs including sucrose, starch, dextrin, xylan?",
      "answer": "Alpha-Galactosidase<br>Amylase<br>Invertase<br>Glucoamylaze<br>Xylanase",
      "selected": "file1"
    },
    {
      "question": "Enzymes that help digest fats?",
      "answer": "Lipase",
      "selected": "file1"
    },
    {
      "question": "Enzymes that help digest proteins?",
      "answer": "Bromelain<br>Peptidase<br>Papain<br>Protease I<br>Protease II<br>Aspergillopepsin",
      "selected": "file1"
    },
    {
      "question": "Ephemeral, short-lived",
      "answer": "Ef\u00edmero",
      "selected": "file1"
    },
    {
      "question": "Esparar",
      "answer": "To wait",
      "selected": "file1"
    },
    {
      "question": "Esperame",
      "answer": "Wait for me",
      "selected": "file1"
    },
    {
      "question": "Estaba",
      "answer": "Was",
      "selected": "file1"
    },
    {
      "question": "Even though it's hard to value Google, Facebook, etc when stocks are all down, why will they rebound?",
      "answer": "Where else will investors pile their money into? These stocks are the least worst.",
      "selected": "file1"
    },
    {
      "question": "Event streams vs arrays",
      "answer": "Arrays hold elements over space (in memory)<br><br>Event streams hold elements over time",
      "selected": "file1"
    },
    {
      "question": "Every morning do a visualization of how much battery percent my body has. After I see Paolo it recharges my body. After I see Paolo I sit dumb because I feel like I have the battery power.<br><br>And I do for a few days so I get excited and over do it.<br><br>This can help me learn to pace myself until I see him again.",
      "answer": "\"<img src=\"\"img6997417908150673369.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "Example of a conversation where I'm not following it so I focus on basic details or conversation topics that are low-energy.<br><br>I wonder if I can test other peoples' reponses to my own conversations this way...",
      "answer": "\"<img src=\"\"Screenshot 2023-09-04 at 3.12.27 PM.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "Example of a dumb thing people do only for status, but it makes no sense.",
      "answer": "Why do people in sf use bikes with only one gear, even though it's dumb?<br><br>Because it's hard, which means less people will do it, which means it becomes a uniqueness status symbol.",
      "selected": "file1"
    },
    {
      "question": "Example: I create an upwork job for setting up kafka. Then I immediately solve the issue by moving to RedPanda.",
      "answer": "This is an example where when we feel like we have set in motion a solution, other solutions present themselves.<br><br>Why does this happen? Is this coincidence? Or what if by setting an alternative solution in motion it changes our psychology, allowing us to see alternative solutions? Or maybe it frees us up into a more-relaxed mind. Maybe it gives us a boost of motivation or energy that allows us to jump over an obstacle.<br><br>I am not sure. It might be impossible to know. However, a model can still be built around this concept, and learned, if there is a real pattern there, and not just a transient pattern in the noise, or a coincidence.",
      "selected": "file1"
    },
    {
      "question": "Excessive phytates affect what vitamins/nutrients?",
      "answer": "zinc, iron, calcium",
      "selected": "file1"
    },
    {
      "question": "Expectation",
      "answer": "Expectivo",
      "selected": "file1"
    },
    {
      "question": "Explain the concepts of Decorator, Formatter, Wrapper",
      "answer": "First we use the Wrapper. The wrapper's job is simply to set up the logger, ie winston, or pino. It sets the formatter, transports/destinations (or handlers in python), and it implements the functions for debug, error, info, fatal, trace, warn. It also (optionally) calls the stack in order to find the caller lineNum and colNum.<br><br>Finally, it calls the Decorator.<br><br>Decorators are files that house the debug, error, info, etc functions. They should be simple. One implementation is to simply create a new object called a metaObj and attach to it the caller, tags, options and the loggableObject, then call&nbsp;this.logger.info(loggableObjMeta).<br><br>In the past I would format things here but this got messy. After the decortor returns it will call the formatter.<br><br>Formatters: depending on which formatters are set in the wrapper, (or possibly passed in through options) the corresponding format function can be called. I like to have a basicFormatter, and basicString formatter, a flattenObject formatter, etc. This is where some of the more complex logic can be housed. This is good because it's also at the end of the logging pipeline, and so the complexity or errors do not cause more errors to be pushed further down the pipeline.",
      "selected": "file1"
    },
    {
      "question": "Extra\u00f1o/a",
      "answer": "Rare",
      "selected": "file1"
    },
    {
      "question": "Eyebrows ",
      "answer": "Cejas",
      "selected": "file1"
    },
    {
      "question": "F",
      "answer": "fine",
      "selected": "file1"
    },
    {
      "question": "Fastest way to overwrite local branch with remote one?",
      "answer": "git fetch origin<br>git reset --hard origin/branch-name",
      "selected": "file1"
    },
    {
      "question": "Feel c7-t1-t2 as you protract and retract chin.",
      "answer": "Notice how the vertebrae flatten when the head is retracted.<br><br>Now notice how that effects neck extension/flexion.",
      "selected": "file1"
    },
    {
      "question": "Finder: Change view (ie icons, list, columns, gallery)",
      "answer": "CMD-1<br>CMD-2<br>CMD-3<br>CMD-4",
      "selected": "file1"
    },
    {
      "question": "Finder: Open iCloud folder",
      "answer": "Shift-CMD-I",
      "selected": "file1"
    },
    {
      "question": "Finger",
      "answer": "Dedo",
      "selected": "file1"
    },
    {
      "question": "Finished ",
      "answer": "Finalizado",
      "selected": "file1"
    },
    {
      "question": "Fish: instead of using up arrow, how do I navigate to previous commands?",
      "answer": "Enter Normal Mode ( ctrl+[ ), then k.",
      "selected": "file1"
    },
    {
      "question": "Flow:",
      "answer": "Voice code 0<br>Typing 1<br><br>Start to learn how to think of voice commands for hotkeys.<br><br>I don't need to be good at voice code, just know how to navigate, bcuz that's what I'll be using it for.<br><br>If I need to crank stuff out, nothing will beat a chair and keyboard. But that comes at a cost.<br><br>My softer method is with an iPad for mindmaps, voice code for navigation, and will spend most of my time thinking and looking at code.<br><br>HABIT += Break into two habits and practice them separately and together.<br>",
      "selected": "file1"
    },
    {
      "question": "Follar<br>Cojer<br>Tener sexo",
      "answer": "To have sex, to fuck",
      "selected": "file1"
    },
    {
      "question": "Foods containing cinnamaldehyde",
      "answer": "tomatoes, citrus, cinnamon, chocolate",
      "selected": "file1"
    },
    {
      "question": "Fool",
      "answer": "enga\u00f1ar, tonto",
      "selected": "file1"
    },
    {
      "question": "Fool, idiot, asshole ",
      "answer": "Pendejo",
      "selected": "file1"
    },
    {
      "question": "Foot",
      "answer": "Pie",
      "selected": "file1"
    },
    {
      "question": "For postgres table names, which of the following characters are allowed?<br><br>- (dash)<br>_ (underscore)",
      "answer": "Only underscore",
      "selected": "file1"
    },
    {
      "question": "Formal name for the spring ligament?",
      "answer": "plantar calcaneonavicular ligament",
      "selected": "file1"
    },
    {
      "question": "Free",
      "answer": "Libre",
      "selected": "file1"
    },
    {
      "question": "From left to right on left half of keyboard (special keys)<br>",
      "answer": "ctrl, super, alt, function, mod<br><br>CSAFM",
      "selected": "file1"
    },
    {
      "question": "From left to right on right half of keyboard (super keys)",
      "answer": "fn, alt, super, ctrl",
      "selected": "file1"
    },
    {
      "question": "From right to left on left half of keyboard (special keys)",
      "answer": "mod, fn, alt, super, ctrl",
      "selected": "file1"
    },
    {
      "question": "From right to left on right half of keyboard (special keys)",
      "answer": "ctrl, super, alt, function<br><br>CSAF",
      "selected": "file1"
    },
    {
      "question": "Fuck; shit",
      "answer": "Carajo",
      "selected": "file1"
    },
    {
      "question": "Fui",
      "answer": "I was",
      "selected": "file1"
    },
    {
      "question": "Fuiste",
      "answer": "You were",
      "selected": "file1"
    },
    {
      "question": "Functions of the teres major/minor",
      "answer": "The major is an internal rotator.<br>The minor is for lateral rotation, but mainly to modulate the action of the deltoid, preventing the humeral head from sliding upward as the arm is abducted.",
      "selected": "file1"
    },
    {
      "question": "Funny word for person who hands out pamphlets, talks on the street to convince people of strange theories.",
      "answer": "Pamphleteer",
      "selected": "file1"
    },
    {
      "question": "G",
      "answer": "gust",
      "selected": "file1"
    },
    {
      "question": "Gain anterior strength ",
      "answer": "To achieve posterior length",
      "selected": "file1"
    },
    {
      "question": "Gastrocnemius, <br>Soleus,<br>_________________",
      "answer": "Plantaris",
      "selected": "file1"
    },
    {
      "question": "Genial",
      "answer": "Great, cool",
      "selected": "file1"
    },
    {
      "question": "Get the fuck outa here",
      "answer": "Vete a la verga",
      "selected": "file1"
    },
    {
      "question": "Git scenario: I am currently checking out branch develop. I decide to checkout the branch red-box. For some reason, I now have folders that exist in the develop branch, but shouldn't be in the red-box branch. But I see both.<br><br>What to do?",
      "answer": "\"`git status` to see which files are currently untracked.<br><br>`git clean -ndx` to see which files would be deleted.<br><div>&nbsp; &nbsp; \u2022 -n (or --dry-run): Show what would be done without actually doing it.</div>",
      "selected": "file1"
    },
    {
      "question": "Git submodules issues I ran into with @ktr/srt",
      "answer": "ktr.bio/gsm<br>ktr.bio/git-submodule",
      "selected": "file1"
    },
    {
      "question": "Git: change commit message",
      "answer": "\"git commit --amend -m \"\"new message\"\"\"",
      "selected": "file1"
    },
    {
      "question": "Give it to me",
      "answer": "d\u00e1melo",
      "selected": "file1"
    },
    {
      "question": "Give me",
      "answer": "Dame",
      "selected": "file1"
    },
    {
      "question": "Give me that book",
      "answer": "dame ese libro",
      "selected": "file1"
    },
    {
      "question": "Glute vs hamstring activation for hip extension:<br><br>How do they affect the femur?",
      "answer": "Hamstring activation will pull the femur forward in the socket, while glute activation will pull the femur backwards.",
      "selected": "file1"
    },
    {
      "question": "Go to line number 108",
      "answer": "Go one oh eight",
      "selected": "file1"
    },
    {
      "question": "Good exercise compared to putting a band around knees and squat-running/shuffling backwards while turning torso?",
      "answer": "Lateral step-downs with weights.<br><br>This allows the glute medius to lengthen on each step-down.<br><br>The band around the knees forces the glute medius into a shortened position.",
      "selected": "file1"
    },
    {
      "question": "Gossip ",
      "answer": "Chismo",
      "selected": "file1"
    },
    {
      "question": "Government",
      "answer": "Gobierno",
      "selected": "file1"
    },
    {
      "question": "Gracias a usted",
      "answer": "Thanks to you",
      "selected": "file1"
    },
    {
      "question": "Grow some balls",
      "answer": "Tenga huevos",
      "selected": "file1"
    },
    {
      "question": "H",
      "answer": "harp",
      "selected": "file1"
    },
    {
      "question": "Habo",
      "answer": "There was / there were",
      "selected": "file1"
    },
    {
      "question": "Habr\u00e1",
      "answer": "There will be",
      "selected": "file1"
    },
    {
      "question": "Hair",
      "answer": "Cabello",
      "selected": "file1"
    },
    {
      "question": "Have multiple cursors on multiple lines without using mouse click?",
      "answer": "Shift+Alt+Cmd Up/Down",
      "selected": "file1"
    },
    {
      "question": "Have to",
      "answer": "Tener que",
      "selected": "file1"
    },
    {
      "question": "Hay",
      "answer": "There is / there are",
      "selected": "file1"
    },
    {
      "question": "Hay que comer",
      "answer": "We must eat",
      "selected": "file1"
    },
    {
      "question": "Hay que practica",
      "answer": "(It doesn't make sense)",
      "selected": "file1"
    },
    {
      "question": "Hay que practicar",
      "answer": "It's necessary to practice, that we practice <br><br>Necesitamos practicar",
      "selected": "file1"
    },
    {
      "question": "Hay qu\u00e9",
      "answer": "It is necessary<br>One must<br>It must",
      "selected": "file1"
    },
    {
      "question": "Here is some ls results in fish:<br><br>[I] \u276f 7 \u276f\u276f \ue0a0 main \u276f\u276f \u2718 \u276f ls&nbsp;&nbsp; \u276e \u25cf \u276e\u276e ~/D/_/b/v/find_files_without \u276e<br>ffwo@&nbsp;&nbsp; find_files_without-call.sh* index.sh<br>ffwo.sh*&nbsp;&nbsp; find_files_without.sh*&nbsp;&nbsp;tmp/<br><br><br>What do the following mean?<br>[I] (If it was [N] or [V] what would that mean?)<br><br>@<br><br>*",
      "answer": "\"* means an executable file<br>@ means a symlink<br>[I] means insert mode? ([N] would mean \"\"normal\"\" mode. [V] would mean visual mode.)\"",
      "selected": "file1"
    },
    {
      "question": "Hide left sidebar",
      "answer": "CMD+B",
      "selected": "file1"
    },
    {
      "question": "Him",
      "answer": "A el",
      "selected": "file1"
    },
    {
      "question": "How about you..?",
      "answer": "Qu\u00e9 tal si..? (This is incorrect because Spanish is more direct and they don't think it's rude)",
      "selected": "file1"
    },
    {
      "question": "How did that happen?",
      "answer": "c\u00f3mo pas\u00f3 eso",
      "selected": "file1"
    },
    {
      "question": "How do I change branches?",
      "answer": "git switch<br><br>git checkout is older, and more confusing because it can also be used for checking out files, etc.",
      "selected": "file1"
    },
    {
      "question": "How do I get a neat, tidy git log?",
      "answer": "git log --oneline",
      "selected": "file1"
    },
    {
      "question": "How do environment variables work in vite?",
      "answer": "\"They are loaded from the following files in my directory:<br>&nbsp;.env<br>&nbsp;.env.local<br>&nbsp;.env.[mode]<br>&nbsp;.env.[mode].local<br><br>They are exposed to the client source code via import.meta.env as strings.<br><br>Only env variablias prefixed with \"\"VITE_\"\" are loaded, in order to prevent accidental leaking to the client.<br><br>Vite also uses dotenv-expand.\"",
      "selected": "file1"
    },
    {
      "question": "How do you change the permissions of .ssh and authorized_keys?",
      "answer": "1. Use chmod 700 for .ssh folder, and 600 for authorized_keys<br><br>2. systemctl reload sshd<br>",
      "selected": "file1"
    },
    {
      "question": "How do you edit an existing commit?",
      "answer": "jj edit &lt;commit&gt;",
      "selected": "file1"
    },
    {
      "question": "How do you get a python file to be able to use relative imports?",
      "answer": "Run it as a module",
      "selected": "file1"
    },
    {
      "question": "How do you install peer dependencies in yarn?",
      "answer": "Yarn add --peer",
      "selected": "file1"
    },
    {
      "question": "How do you know Bill? ",
      "answer": "C\u00f3mo conoces a Bill?",
      "selected": "file1"
    },
    {
      "question": "How do you prevent a python file from executing more than once in your project?",
      "answer": "Load it as a module. This will ensure that it is loaded once and cached.",
      "selected": "file1"
    },
    {
      "question": "How do you refer the the commit before the latest one?",
      "answer": "HEAD~",
      "selected": "file1"
    },
    {
      "question": "How do you stage modified and deleted files without including new, untracked files?",
      "answer": "git add -u<br><br>Stages modified and deleted files that are already tracked by Git.<br><br>Does not stage new, untracked files.<br><br><br>Example:<br><br>1. Modify file1.txt and delete file2.txt.<br><br><br>2. Run git add -u.<br><br>Stages the modification of file1.txt and the deletion of file2.txt.<br><br>Leaves untracked files (e.g., new_file.txt) unstaged.<br><br><br><br>To also stage new, untracked files, use git add -A instead.",
      "selected": "file1"
    },
    {
      "question": "How do you switch to the previous commit?",
      "answer": "git switch HEAD~",
      "selected": "file1"
    },
    {
      "question": "How do you train the body to build connective tissue?",
      "answer": "You have to train connective tissue in length.<br><br>The muscle has to be stretched and loaded.",
      "selected": "file1"
    },
    {
      "question": "How do you view how a change has evolved over time?",
      "answer": "jj evolog",
      "selected": "file1"
    },
    {
      "question": "How does fat affect muscle growth?",
      "answer": "\"High fat diets, as well as high abdominal fat might lead to inflammation or an issue with muscle-protein synthesis. Athletic individuals with higher fat might have muscles which are protected from this.<br><br><a href=\"\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2821541/\"\">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2821541/</a>\"",
      "selected": "file1"
    },
    {
      "question": "How does the neck respond when raising one arm overhead?",
      "answer": "The vertebrae twist slightly to the side of the arm being raised.",
      "selected": "file1"
    },
    {
      "question": "How does vite handle environment variables?",
      "answer": "the import.meta.env object",
      "selected": "file1"
    },
    {
      "question": "How many ligaments attach to the coccyx?",
      "answer": "6",
      "selected": "file1"
    },
    {
      "question": "How much IUs of vitamin d should we take per day?",
      "answer": "2000-5000 IUs",
      "selected": "file1"
    },
    {
      "question": "How should you use tea tree oil on your skin?",
      "answer": "Never apply directly. Always mix with carrier oil.",
      "selected": "file1"
    },
    {
      "question": "How to add a range of commits to a specific branch?",
      "answer": "git checkout &lt;branch&gt;<br>git cherry-pick &lt;commit-hash-a&gt;^..&lt;commit-hash-b&gt;",
      "selected": "file1"
    },
    {
      "question": "How to bind ctrl+k to optionk?",
      "answer": "\"<ul><li><pre>bindkey <span style=\"\"color: var(--color-prettylights-syntax-string);\"\"><span style=\"\"color: var(--color-prettylights-syntax-string);\"\">'^k</span><span style=\"\"color: var(--color-prettylights-syntax-string);\"\">'</span></span> optionk</pre></li></ul>\"",
      "selected": "file1"
    },
    {
      "question": "How to compare two pandas dataframe to see if they are equal?",
      "answer": "assert str(result_df) == str(EXPECTED_df)",
      "selected": "file1"
    },
    {
      "question": "How to disable ACL in strapi?&nbsp;",
      "answer": "(example)<br><br>config/plugins.js:<br><br>const awsConfig = {<br>&nbsp; &nbsp; params: {<br>&nbsp; &nbsp; &nbsp; &nbsp; ACL: null",
      "selected": "file1"
    },
    {
      "question": "How to disable password authentication for a new server? So that I have to use an ssh key to login, and if I want to be able to use sudo without a password?",
      "answer": "\"Add the following to the sudoers file:<br><span style=\"\"white-space: pre-wrap;\"\">luke </span><span style=\"\"white-space: pre-wrap; color: rgb(46, 149, 211);\"\">ALL</span><span style=\"\"white-space: pre-wrap;\"\">=</span><span style=\"\"white-space: pre-wrap;\"\">(</span><span style=\"\"white-space: pre-wrap; color: rgb(46, 149, 211);\"\">ALL</span><span style=\"\"white-space: pre-wrap;\"\">) NOPASSWD: </span><span style=\"\"white-space: pre-wrap; color: rgb(46, 149, 211);\"\">ALL</span><br><br>Add the following to /etc/ssh/sshd_config:<br><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(0, 0, 0);\"\">PasswordAuthentication no</span>\"",
      "selected": "file1"
    },
    {
      "question": "How to edit /etc/sudoers?",
      "answer": "<pre><div><div><code>sudo visudo<br></code></div></div></pre>Don't edit /etc/sudoers directly. In order to avoid syntax errors. Otherwise this might cause issues.<br>",
      "selected": "file1"
    },
    {
      "question": "How to install a new python version on a linux machine?",
      "answer": "\"$ curl -O&nbsp;<a href=\"\"https://www.python.org/ftp/python/\"\">https://www.python.org/ftp/python/</a>.......<br>&gt; cd into Python dir<br>$ ./configure --enable-optimizations<br>$ make -j $(nproc)<br>$ sudo make altinstall or sudo make install\"",
      "selected": "file1"
    },
    {
      "question": "How to list your local commits?",
      "answer": "jj log",
      "selected": "file1"
    },
    {
      "question": "How to log into my docker postgres container to create table, or edit something, etc",
      "answer": "docker exec -it CONTAINER_ID bash<br>psql -U postgres",
      "selected": "file1"
    },
    {
      "question": "How to point branch my-branch to tag my-tag?",
      "answer": "git branch -f my-branch my-tag",
      "selected": "file1"
    },
    {
      "question": "How to print the full&nbsp;traceback in the logger when logging an exception?",
      "answer": "\"<div><span style=\"\"font-style: italic;\"\">pass&nbsp;</span><span style=\"\"font-style: italic;\"\">exc_info</span>=True into logger.error(),</div><div><br></div><div><div><div>ie: logger.error(\"\"An error occurred\"\", <span style=\"\"font-style: italic;\"\">exc_info</span>=True)</div></div></div>\"",
      "selected": "file1"
    },
    {
      "question": "How to reload ssh?",
      "answer": "systemctl reload sshd",
      "selected": "file1"
    },
    {
      "question": "How to reproduce my left neck and jaw muscle twitching symptoms?",
      "answer": "Shift neck vertebrae to the right?",
      "selected": "file1"
    },
    {
      "question": "How to see a record of all changes you've made to a repo?",
      "answer": "\"Use the \"\"operation log\"\":<br>ie: jj op log<br><br>Then you can do things like `jj undo`, which undoes the most recent operation.\"",
      "selected": "file1"
    },
    {
      "question": "How to stage all changes to tracked and untracked files, including<br>&nbsp; - new files<br>&nbsp; - modified files<br>&nbsp; - deleted files",
      "answer": "git add --all<br>or git add -A",
      "selected": "file1"
    },
    {
      "question": "How to treat IT band syndrome?<br><br>$addToCard:(Add other examples of things the answer treats / is good for)",
      "answer": "Do different exercises while keeping the pelvis level.<br><br>Then progress from skill, endurance, strength, then plymotrics and training on uneven surfaces.<br>",
      "selected": "file1"
    },
    {
      "question": "How to use `poetry env use`?",
      "answer": "For example:<br><br>poetry env use 3.11.4",
      "selected": "file1"
    },
    {
      "question": "How to use a feathers service in a defensive way that will catch issues? Without gateway",
      "answer": "Use Promise.race with a timeout",
      "selected": "file1"
    },
    {
      "question": "How to use yarn to generate auth and services in feathers?",
      "answer": "yarn dlx @feathersjs/cli generate authentication<br>yarn dlx @feathersjs/cli generate service",
      "selected": "file1"
    },
    {
      "question": "How was your weekend?",
      "answer": "Como estuvo tu fin?",
      "selected": "file1"
    },
    {
      "question": "Hug me if you want to hug me",
      "answer": "Abr\u00e1zame si m\u00ed quieres abrazar",
      "selected": "file1"
    },
    {
      "question": "I",
      "answer": "sit",
      "selected": "file1"
    },
    {
      "question": "I already did",
      "answer": "Ya lo hice",
      "selected": "file1"
    },
    {
      "question": "I am finished ",
      "answer": "Estoy terminado",
      "selected": "file1"
    },
    {
      "question": "I am finished (dinner)",
      "answer": "Estoy satisfecho",
      "selected": "file1"
    },
    {
      "question": "I am waiting",
      "answer": "Estoy esperando",
      "selected": "file1"
    },
    {
      "question": "I appreciate what you did for me",
      "answer": "Aprecio lol que hiciste por me",
      "selected": "file1"
    },
    {
      "question": "I can't see you",
      "answer": "No puedo verte",
      "selected": "file1"
    },
    {
      "question": "I cant believe that",
      "answer": "No puedo creer eso",
      "selected": "file1"
    },
    {
      "question": "I cant believe this",
      "answer": "no puedo creer esto",
      "selected": "file1"
    },
    {
      "question": "I cant sleep ",
      "answer": "No puedo dormir",
      "selected": "file1"
    },
    {
      "question": "I come",
      "answer": "Vengo",
      "selected": "file1"
    },
    {
      "question": "I could",
      "answer": "Podr\u00eda",
      "selected": "file1"
    },
    {
      "question": "I don't know if I've heard enough",
      "answer": "No s\u00e9 si ya escuch\u00e9 lo suficiente",
      "selected": "file1"
    },
    {
      "question": "I don't know what to do",
      "answer": "No s\u00e9 qu\u00e9 hacer",
      "selected": "file1"
    },
    {
      "question": "I don't know what to say",
      "answer": "No qu\u00e9 s\u00e9 decir",
      "selected": "file1"
    },
    {
      "question": "I don't know what to think",
      "answer": "No qu\u00e9 s\u00e9 pensar",
      "selected": "file1"
    },
    {
      "question": "I don't want to",
      "answer": "Yo no quiero",
      "selected": "file1"
    },
    {
      "question": "I found something else",
      "answer": "encontr\u00e9 algo m\u00e1s",
      "selected": "file1"
    },
    {
      "question": "I hope",
      "answer": "Espero",
      "selected": "file1"
    },
    {
      "question": "I know you think about me",
      "answer": "Yo s\u00e9 qu\u00e9 piensas en mi",
      "selected": "file1"
    },
    {
      "question": "I know you thought about me",
      "answer": "Yo s\u00e9 qu\u00e9 pensaste en m\u00ed",
      "selected": "file1"
    },
    {
      "question": "I know you used to think about me",
      "answer": "Yo s\u00e9 qu\u00e9 pensabas en m\u00ed",
      "selected": "file1"
    },
    {
      "question": "I know you'd think about me",
      "answer": "Yo s\u00e9 qu\u00e9 pensar\u00edas en m\u00ed",
      "selected": "file1"
    },
    {
      "question": "I know you'll think about me",
      "answer": "Yo s\u00e9 qu\u00e9 pensar\u00e1s en m\u00ed",
      "selected": "file1"
    },
    {
      "question": "I know you're going to think about me",
      "answer": "Yo s\u00e9 qu\u00e9 vas a pensar en m\u00ed",
      "selected": "file1"
    },
    {
      "question": "I like funny conversations ",
      "answer": "Me gustan las conversaciones divertidas",
      "selected": "file1"
    },
    {
      "question": "I miss you",
      "answer": "Te extra\u00f1o",
      "selected": "file1"
    },
    {
      "question": "I need to relax",
      "answer": "Necesito relajarme",
      "selected": "file1"
    },
    {
      "question": "I no longer want to..., I don't want to anymore...",
      "answer": "Ya no quiero...",
      "selected": "file1"
    },
    {
      "question": "I think I've heard enough",
      "answer": "Creo que ya escuch\u00e9 suficiente",
      "selected": "file1"
    },
    {
      "question": "I told you ",
      "answer": "Te dije",
      "selected": "file1"
    },
    {
      "question": "I travel a lot, I travel lots",
      "answer": "viajo mucho",
      "selected": "file1"
    },
    {
      "question": "I travel often",
      "answer": "viajo a menudo",
      "selected": "file1"
    },
    {
      "question": "I used to know Jim<br><br>I knew Jim",
      "answer": "Yo conocia Jim<br><br>Yo conoci Jim",
      "selected": "file1"
    },
    {
      "question": "I walked",
      "answer": "Camin\u00e9",
      "selected": "file1"
    },
    {
      "question": "I want to have fun",
      "answer": "Quiero divertirme",
      "selected": "file1"
    },
    {
      "question": "I want to know",
      "answer": "quiero saber",
      "selected": "file1"
    },
    {
      "question": "I want to ride that bike",
      "answer": "quiero andar/montar en esa bicicleta",
      "selected": "file1"
    },
    {
      "question": "I want to see the process stack, more details on which process was called by which, going up the stack.<br><br>What do I use?",
      "answer": "pstree",
      "selected": "file1"
    },
    {
      "question": "I want to see you",
      "answer": "Quiero verte",
      "selected": "file1"
    },
    {
      "question": "I wanted to see you",
      "answer": "Quer\u00eda verte",
      "selected": "file1"
    },
    {
      "question": "I was",
      "answer": "Fui",
      "selected": "file1"
    },
    {
      "question": "I was wondering ",
      "answer": "Me preguntaba",
      "selected": "file1"
    },
    {
      "question": "I will tell you later (dt: I will say to you later)",
      "answer": "Te lo dir\u00e9 m\u00e1s tarde<br><br>Te lo dir\u00e9 despu\u00e9s",
      "selected": "file1"
    },
    {
      "question": "I will wait",
      "answer": "Voy a esperar",
      "selected": "file1"
    },
    {
      "question": "I will wait for you",
      "answer": "Te esperar\u00e9",
      "selected": "file1"
    },
    {
      "question": "I work too much",
      "answer": "Trabajo demasiado",
      "selected": "file1"
    },
    {
      "question": "I'm aware of that",
      "answer": "Soy consciente de que",
      "selected": "file1"
    },
    {
      "question": "I'm finished ",
      "answer": "Termin\u00e9",
      "selected": "file1"
    },
    {
      "question": "I'm just saying ",
      "answer": "Solo digo",
      "selected": "file1"
    },
    {
      "question": "I'm not sure I heard enough",
      "answer": "No estoy Segura de haber escuchado lo suficiente",
      "selected": "file1"
    },
    {
      "question": "I'm very sleepy",
      "answer": "Tengo mucho sue\u00f1o",
      "selected": "file1"
    },
    {
      "question": "I'm very thirsty",
      "answer": "Tengo Mucha sed",
      "selected": "file1"
    },
    {
      "question": "I've already done it",
      "answer": "Ya lo he hecho",
      "selected": "file1"
    },
    {
      "question": "I've been having issues with tracking deleted files/folders when using `git add .` <br>What can I do?",
      "answer": "Try `git add -A`",
      "selected": "file1"
    },
    {
      "question": "I've heard enough",
      "answer": "Ya escuch\u00e9 suficiente",
      "selected": "file1"
    },
    {
      "question": "If I keep getting an error that port 4224 port is failing to connect, or interactive brokers is disconnecting, or order requests timed out, or some sort of timeout error, what might be happening?",
      "answer": "I might have more than one ib_gateway or workstation open.<br><br>Check docker, for example.",
      "selected": "file1"
    },
    {
      "question": "If I want to get a 2-for-1 message that doesn't come across as desperate..",
      "answer": "Write in English first. Try again. And finally try in Spanish.<br><br>Make it look to them that I might have thought they didn't understand me. This also allows me to try again in a slightly different way.",
      "selected": "file1"
    },
    {
      "question": "If I want to see an image of nodes and vertices of all of the libraries or files and how they connect to each other, for example, which uses which. <br><br>What is that called?",
      "answer": "Dependency Graph<br><br>For node.js: npmgraph, dependency-cruiser",
      "selected": "file1"
    },
    {
      "question": "If drinking coffee what does it deplete in the body that should be replenished?",
      "answer": "Magnesium",
      "selected": "file1"
    },
    {
      "question": "If eating lots of fat, what supplements might help?",
      "answer": "Bile salts",
      "selected": "file1"
    },
    {
      "question": "If using postgres and I want to use a pub/sub model, what functions do I use?",
      "answer": "NOTIFY &amp; LISTEN",
      "selected": "file1"
    },
    {
      "question": "If you already did `jj new` and want to make changes to the previous commit, what do you do?",
      "answer": "Make your changes in the working copy, and then do a `jj squash`<br><br>jj squash squashes (moves) the changes from a given commit into its parent commit.<br><br>Note: this is similar to `git commit --amend`. In fact, `jj amend` is an alias for `jj squash`",
      "selected": "file1"
    },
    {
      "question": "If you are creating a python web app that uses Flash, Django, FastAPI, and also want to use a web server such as Nginx or Apache or Caddy, what else do you need?",
      "answer": "Middleware: WSGI (Web Server Gateway Interface)",
      "selected": "file1"
    },
    {
      "question": "If you func1.bind(obj1), then func1.call(obj2) what will be 'this' inside of func1?",
      "answer": "obj1, because it was already binded. func.bind() returns a new function, and once it's bounded the 'this' cannot be changed with .call()",
      "selected": "file1"
    },
    {
      "question": "If you have a folder named config, what will happen?",
      "answer": "If I load and run my config module then it will attempt to load all .js, .cjs and .json files in all config folders. If I have something else in these folders then it will throw an error.",
      "selected": "file1"
    },
    {
      "question": "Igual",
      "answer": "Same",
      "selected": "file1"
    },
    {
      "question": "Immeasurable, unbounded",
      "answer": "Inconmensurable",
      "selected": "file1"
    },
    {
      "question": "In Google cloud I was unable to add my custom role to my service account. Why?",
      "answer": "Because I had created the service account first.<br><br>For some reason I needed to create the role first, then create a new service account.",
      "selected": "file1"
    },
    {
      "question": "In bash: What is the difference between &amp; and &amp;&amp;?",
      "answer": "&amp; means to run the script in the background. So A &amp; B would run A in the background, and then run B. Both would be running in parallel.<br><br>&amp;&amp; means run the second command only if A runs without an error code.",
      "selected": "file1"
    },
    {
      "question": "In git, what is the working directory?",
      "answer": "the working tree,<br><br><div>the directory on your computer where you work with your project\u2019s files. It is the <b>current state of your files</b> that you can see, edit, and interact with directly.</div>",
      "selected": "file1"
    },
    {
      "question": "In grafana .ini file how do you reference variables?",
      "answer": "%(VARIABLE_NAME)s",
      "selected": "file1"
    },
    {
      "question": "In mocha, what is shorthand for deep.equal() ?",
      "answer": "eql()",
      "selected": "file1"
    },
    {
      "question": "In my packages-other/configuration module, why am I using _config instead of config for some of the folder names?",
      "answer": "Because if they were called `config` then it would be loaded automatically, and it would throw an error since there is code in there instead of simply configuration files.",
      "selected": "file1"
    },
    {
      "question": "In order to have flexibility at a joint..",
      "answer": "..you must have stability at the previous joint.",
      "selected": "file1"
    },
    {
      "question": "In pure JavaScript, how would you add docstrings for Result T,E ?",
      "answer": "/**<br> * @template T<br> * @template E<br> * @typedef { { ok: true, value: T } | { ok: false, error: E } } Result<br> */",
      "selected": "file1"
    },
    {
      "question": "In python what is similar to proxy objects in javascript?",
      "answer": "__getitem__ &amp; __setitem__",
      "selected": "file1"
    },
    {
      "question": "In python, what is the difference between __init__, __repr__ and __new__?",
      "answer": "\"__new__ is the first thing to run when we create a new instance of a class.<br><br>Then __init__ fires to initialize the object.<br><br>__repr__ gives a string-representation of the class.<br><br><br>(<a href=\"\"https://realpython.com/python-class-constructor/\"\">https://realpython.com/python-class-constructor/</a>)\"",
      "selected": "file1"
    },
    {
      "question": "In regards to the bones of medial arch, what do the tibialis posterior and tibialis anterior do in relation to one another?",
      "answer": "The Tibialis Anterior tucks to the side &amp; under the first metatarsal and passes over the medial cuneiform, riding on top of a groove. It pulls up on the first metatarsal, which also pulls up on the medial cuneiform.<br><br>The Tibialis Posterior attaches underneath the medial cuneiform, and to the inferior medial side of the navicular.",
      "selected": "file1"
    },
    {
      "question": "In this thing ",
      "answer": "en esta cosa",
      "selected": "file1"
    },
    {
      "question": "Include",
      "answer": "Incluir",
      "selected": "file1"
    },
    {
      "question": "Increase selection forward by word",
      "answer": "After v, then w",
      "selected": "file1"
    },
    {
      "question": "Iniciando <br><br>Vs<br><br>A partir de",
      "answer": "Iniciando is similar to starting, initiating.<br><br>A partir de is similar to from.<br><br>For example: I am starting a company:<br>Estoy iniciando una empresa.<br><br>For example: From now on you will be my employee:<br>A partir de ahora, ser\u00e1s mi empleado.",
      "selected": "file1"
    },
    {
      "question": "Ink ",
      "answer": "Tinta",
      "selected": "file1"
    },
    {
      "question": "Insertion and origin of the psoas minor?",
      "answer": "T12, L1 and disc in between.<br><br>Distally, it blends with the iliopsoas fascia.",
      "selected": "file1"
    },
    {
      "question": "Insertion mode: Ctrl+k",
      "answer": "Swap character ahead of cursor",
      "selected": "file1"
    },
    {
      "question": "Insertion/ origin of extensor Hallicus longus?",
      "answer": "Middle anterior surface of fibula and interosseous membrane.<br><br>Passes deep to the extensor retinaculum, attaching to the base of the distal phalanx of the big toe.",
      "selected": "file1"
    },
    {
      "question": "Instead of using Docker Desktop, what can you use?",
      "answer": "colima",
      "selected": "file1"
    },
    {
      "question": "Is DuckDB OLAP or OLTP?",
      "answer": "OLAP",
      "selected": "file1"
    },
    {
      "question": "Is hypochlorous acid effective against demodex?",
      "answer": "\"According to this review, the answer is no. It's a myth.<br><br><a href=\"\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6181810/\"\">https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6181810/</a>\"",
      "selected": "file1"
    },
    {
      "question": "Is it better to have logger.info(string, string, string, string) or logger.info(string, object)?",
      "answer": "The latter is more preferable. I know that console.log() allows you to string things together but that adds a lot more complexity, as now a custom logger would have to parse out everything.<br><br>It's much simpler to keep the parameters simple, ie put the string to log into the first param and everything else, ie object or meta info in the second or last argument.",
      "selected": "file1"
    },
    {
      "question": "Is it better to use fs.mkdir or fs.mkdirSync ?",
      "answer": "It's okay to use mkdirSync() for testing and developing but mkdir() should be used for production code as it doesn't block the event loop.",
      "selected": "file1"
    },
    {
      "question": "Is it possible that if I lack pressure in my lower left abs under the rib cage, due to rib flare, that my body will attempt to create stability there though other means?<br><br>For example by tightening the hip flexor and quads and others, in order to add stability to that area?",
      "answer": "Should that force come by bracing and pushing outward as Stewart McGill would stay, in order to create that stability and stiffness? I can imagine the force would travel down the superficial guy wires this way, and the pressure in between the diaphragm and pelvic floor would distribute the force in such a way that it would both add stability and length to the spine in that area, but also allow the force.from gait, eat to be distributed across the superficial aspects of the abdominals.<br><br>Similar story for the back and the last, as they are superficial..?<br><br>Just try priming that type of muscle activation and then walk and feel the superficial part of the abs. Does it tighten as you walk? Does it absorb the forces?<br><br>Remember that it's where there is tension is where the forces will travel.<br>If a rope has slack then the force will not travel in that direction. So in order for a muscle to absorb force, whether or not it is an eccentric or concentric muscle, it has to be tight enough to match the tightness coming from the other side.<br><br>If the tightness of one guy wire on one side of a tower is tighter than one on the opposing side then the one on the opposing side will be loose, and therefore will not be able to transmit, transfer, absorb or attenuate any forces.",
      "selected": "file1"
    },
    {
      "question": "Is it possible to do laundry today?",
      "answer": "Es possible lavar la ropa hoy?",
      "selected": "file1"
    },
    {
      "question": "Is milk thistle good or bad for sebum?",
      "answer": "Good. The silymarin.",
      "selected": "file1"
    },
    {
      "question": "Is the adam's apple the hyoid bone?",
      "answer": "No. The hyoid bone sits superior to the adam's apple.<br><br>It helps with swallowing, breathing and speech",
      "selected": "file1"
    },
    {
      "question": "It looks like in python I cannot run an individual file in the debugger.<br>&nbsp;<br>This is because then if the file ever tries to do a relative import, ie `from getProjectRootDir import getProjectRootDir` it will fail.<br><br>This is because python would need to import this as a module in order to have access to relative imports.",
      "answer": "** This might actually be a good thing. It will force me to test anything I write through a tests/ directory, instead of inside of the file itself. This is good practice and will help to re-enfore good habits.",
      "selected": "file1"
    },
    {
      "question": "It's better",
      "answer": "Es mejor",
      "selected": "file1"
    },
    {
      "question": "It's not easy",
      "answer": "no es f\u00e1cil",
      "selected": "file1"
    },
    {
      "question": "It's not here",
      "answer": "Es no este aqui",
      "selected": "file1"
    },
    {
      "question": "It's raining ",
      "answer": "Est\u00e1 lloviendo",
      "selected": "file1"
    },
    {
      "question": "It's time to go to sleep",
      "answer": "Es hora de dormir",
      "selected": "file1"
    },
    {
      "question": "It's time to go to the gym",
      "answer": "Es hora de ir al gimnasio",
      "selected": "file1"
    },
    {
      "question": "J",
      "answer": "jury",
      "selected": "file1"
    },
    {
      "question": "Joint above talus?",
      "answer": "Talocrural joint",
      "selected": "file1"
    },
    {
      "question": "Joint below talus?",
      "answer": "Subtalar joint",
      "selected": "file1"
    },
    {
      "question": "Jugar",
      "answer": "To play (sport)",
      "selected": "file1"
    },
    {
      "question": "Jump to end of line and insert ",
      "answer": "A",
      "selected": "file1"
    },
    {
      "question": "K",
      "answer": "crunch",
      "selected": "file1"
    },
    {
      "question": "Keep your head down",
      "answer": "Mant\u00e9n tu cabeza abajo",
      "selected": "file1"
    },
    {
      "question": "Kiss",
      "answer": "Beso",
      "selected": "file1"
    },
    {
      "question": "Knee",
      "answer": "Rodilla",
      "selected": "file1"
    },
    {
      "question": "Knew",
      "answer": "Saba",
      "selected": "file1"
    },
    {
      "question": "L",
      "answer": "look",
      "selected": "file1"
    },
    {
      "question": "Later ",
      "answer": "Despues",
      "selected": "file1"
    },
    {
      "question": "Lateral and medial bumps of ankle (tibia and fibula)",
      "answer": "Lateral and medial malleoli",
      "selected": "file1"
    },
    {
      "question": "Leave me alone",
      "answer": "Dejame en paz",
      "selected": "file1"
    },
    {
      "question": "Lento",
      "answer": "Slow",
      "selected": "file1"
    },
    {
      "question": "Libre",
      "answer": "Free",
      "selected": "file1"
    },
    {
      "question": "Link to info about javascript proxy &amp; reflect",
      "answer": "<b>ktr.bio/pr<br>ktr.bio/proxy-reflect</b>",
      "selected": "file1"
    },
    {
      "question": "Look at environment vars",
      "answer": "env",
      "selected": "file1"
    },
    {
      "question": "Luck ",
      "answer": "Suerte",
      "selected": "file1"
    },
    {
      "question": "M",
      "answer": "made (hint: mowsh made)",
      "selected": "file1"
    },
    {
      "question": "Mac desktop switcher left/right",
      "answer": "ctrl+mod left/right<br>",
      "selected": "file1"
    },
    {
      "question": "Making out, kissing",
      "answer": "Besando",
      "selected": "file1"
    },
    {
      "question": "Malleolar Grooves",
      "answer": "Just posterior to the lateral and medial malleoli are vertical grooves that house tendons.",
      "selected": "file1"
    },
    {
      "question": "Manta",
      "answer": "Blanket",
      "selected": "file1"
    },
    {
      "question": "Massage spine from bottom-up and top-down.",
      "answer": "Why?<br><br>Because if the spine is sensitive then it will try to stabilize from the sources of trauma, impact, force generation.<br><br>Tonnes of that force will come through walking, running up from the hips.<br><br>Remember: the issues could start from the shoulders, sensitizing the spine, And then the spine might start locking up from the bottom-up due to the incredible forces from running, walking, with a backpack, etc.<br><br>",
      "selected": "file1"
    },
    {
      "question": "Maybe ",
      "answer": "Quizas",
      "selected": "file1"
    },
    {
      "question": "Me too",
      "answer": "Yo tambien",
      "selected": "file1"
    },
    {
      "question": "Medial muscles of the thigh, from proximal to distal?",
      "answer": "pectineus<br>adductor brevis<br>adductor longus<br>adductor magnus<br><br>(And gracilis)",
      "selected": "file1"
    },
    {
      "question": "Medical term for inflammation at the tip of the nose:",
      "answer": "nasal vestibulitis",
      "selected": "file1"
    },
    {
      "question": "Mithril: If I get this error when messing with oninit() function, what might it mean?<br><br><div><div><div><div><div>error: Unhandled Rejection at: Promise</div></div><div></div><div></div></div></div></div><div><div><div><div><div><br></div></div></div></div></div>",
      "answer": "It might mean that you are trying to play with an element that doesn't exist yet.&nbsp;<br><br>Try doing the same thing inside of oncreate() instead.",
      "selected": "file1"
    },
    {
      "question": "Module<br>Vs Namespace package<br>Vs Package<br>",
      "answer": "Package is a folder with a __init__ file. <br><br>Module is a single file that can be imported. <br><br>Namespace package doesn't contain a __init__ file, and can be spread out across multiple folders. Examples are using a pyproject.toml file.",
      "selected": "file1"
    },
    {
      "question": "Move backwards/forwards to the next occurence of the string your cursor is currently hovering over.",
      "answer": "\"* and #\"",
      "selected": "file1"
    },
    {
      "question": "Move cursor to the right of previous occurance of specified character",
      "answer": "T&lt;char&gt;",
      "selected": "file1"
    },
    {
      "question": "Multiprocessing vs asyncio",
      "answer": "In general, multiprocessing is good for CPU-bound tasks that can benefit from parallelism.<br><br>Asyncio is a good choice for I/O-bound tasks that can benefit from concurrency.",
      "selected": "file1"
    },
    {
      "question": "Muscles of the pelvic diaphragm?",
      "answer": "<strong>Levator Ani<br></strong><br><strong>Coccygeus</strong>",
      "selected": "file1"
    },
    {
      "question": "Muscles that best stabilize the spine?",
      "answer": "\"<img src=\"\"1701141560094.jpg\"\"><br>*the tower with wider guy wires is more stable.*<br><br>This is similar to the spine. The superficial muscles, like the lats, rectus, external obliques, traps, scm.<br><br>These are better at stability for the spine than transverse abdominis.\"",
      "selected": "file1"
    },
    {
      "question": "Muscles that produce eversion + dorsiflexion?",
      "answer": "Peroneals",
      "selected": "file1"
    },
    {
      "question": "Muscles who's tendons attach to both the navicular &amp; and medial cuneiform?",
      "answer": "tibialis posterior",
      "selected": "file1"
    },
    {
      "question": "My left leg",
      "answer": "Mi pierna izquierda",
      "selected": "file1"
    },
    {
      "question": "N",
      "answer": "near (hint: knee)",
      "selected": "file1"
    },
    {
      "question": "Name for a type of condition that involves inflammation at the tip of the nose:",
      "answer": "nasal vestibular furunculosis",
      "selected": "file1"
    },
    {
      "question": "Name for instagram unofficial api?",
      "answer": "instagrapi",
      "selected": "file1"
    },
    {
      "question": "Name for the condition that is inflammation of small blood vessels in the skin but not the organs?",
      "answer": "Cutaneous Vasculitis",
      "selected": "file1"
    },
    {
      "question": "Name for type of muscles that have more than one innervation.",
      "answer": "Hybrid muscles",
      "selected": "file1"
    },
    {
      "question": "Name of Science for studying the wavelength and colors of light?",
      "answer": "Spectrography",
      "selected": "file1"
    },
    {
      "question": "Name of black lines in spectrography that indicates absorbed wavelengths where electrons absorb energy and jump up to a higher electron orbit, which can be used to detect which elements there are in stars?",
      "answer": "Fraunhofer lines",
      "selected": "file1"
    },
    {
      "question": "Name of indicator that gives a better general overall of the market, vs looking at the NASDAQ, NYSE, etc.",
      "answer": "VALUA, VALUG",
      "selected": "file1"
    },
    {
      "question": "Name of the big bump on the inside of the ankle ",
      "answer": "Medial malleolus",
      "selected": "file1"
    },
    {
      "question": "Name of the red bump I have on the left side of my nose?",
      "answer": "fibrous papule<br>OR cherry angioma&nbsp;",
      "selected": "file1"
    },
    {
      "question": "Names of the id field in mongo vs postgres?",
      "answer": "In postgres it's 'id'<br>In mongodb it's '_id'",
      "selected": "file1"
    },
    {
      "question": "Nariz",
      "answer": "Nose",
      "selected": "file1"
    },
    {
      "question": "New icon for a card that requires me to write, draw, type?",
      "answer": "\u270f\ufe0f\u2712\ufe0f\u270d\ufe0f\u2328\ufe0f\ud83d\udcbb",
      "selected": "file1"
    },
    {
      "question": "No pain, no gain",
      "answer": "Si no duele, no sirve",
      "selected": "file1"
    },
    {
      "question": "No risk, no gain",
      "answer": "El qu\u00e9 no arriesga, no gana",
      "selected": "file1"
    },
    {
      "question": "Noise",
      "answer": "Ruido",
      "selected": "file1"
    },
    {
      "question": "Nose",
      "answer": "Nariz",
      "selected": "file1"
    },
    {
      "question": "Not anymore",
      "answer": "Ya no",
      "selected": "file1"
    },
    {
      "question": "Number of bones in the foot?",
      "answer": "26",
      "selected": "file1"
    },
    {
      "question": "O",
      "answer": "odd",
      "selected": "file1"
    },
    {
      "question": "Obsidian: Toggle right sidebar",
      "answer": "Cmd + B",
      "selected": "file1"
    },
    {
      "question": "Ocean",
      "answer": "Oceano",
      "selected": "file1"
    },
    {
      "question": "Offensive vagina",
      "answer": "Concha",
      "selected": "file1"
    },
    {
      "question": "Offer Max $300 if he can convince Ben to take music next year.",
      "answer": "Maybe get Ben on Max's side.",
      "selected": "file1"
    },
    {
      "question": "Oh shit, you've accidentally commited to the wrong branch? How do you fix this using cherry pick?",
      "answer": "\"<pre><code>git checkout name-of-the-branch-the-commit-should-have-been-on&gt;",
      "selected": "file1"
    },
    {
      "question": "Ok",
      "answer": "Vale",
      "selected": "file1"
    },
    {
      "question": "On Examination:<br>Issue with Finger extensors: Resisted finger extension<br><br>What cervical nerve myotome is affected?",
      "answer": "C7",
      "selected": "file1"
    },
    {
      "question": "On Examination:<br>Issue with Triceps: Resisted elbow extension",
      "answer": "C7",
      "selected": "file1"
    },
    {
      "question": "On Examination:<br>Issue with Wrist flexors: Resisted wrist flexion<br><br>What cervical nerve myotome is affected?",
      "answer": "C7",
      "selected": "file1"
    },
    {
      "question": "On the side",
      "answer": "Aparte / En el lado",
      "selected": "file1"
    },
    {
      "question": "Only known medication to reduce sebum production?",
      "answer": "Isotretinoin",
      "selected": "file1"
    },
    {
      "question": "Open source alternative for project management?",
      "answer": "plane.so",
      "selected": "file1"
    },
    {
      "question": "Open source github alternative?",
      "answer": "gitea",
      "selected": "file1"
    },
    {
      "question": "Open the door ",
      "answer": "Abre la puerta",
      "selected": "file1"
    },
    {
      "question": "Order",
      "answer": "Ordenar",
      "selected": "file1"
    },
    {
      "question": "Origin bone of flexor Hallicus and flexor digitorum longus?",
      "answer": "Flexor Hallicus: fibula<br><br>Flexor digitorum longus: tibia",
      "selected": "file1"
    },
    {
      "question": "Owner",
      "answer": "Due\u00f1a/o",
      "selected": "file1"
    },
    {
      "question": "P",
      "answer": "pit",
      "selected": "file1"
    },
    {
      "question": "Passionate",
      "answer": "Apasionar",
      "selected": "file1"
    },
    {
      "question": "Password ",
      "answer": "contrase\u00f1a",
      "selected": "file1"
    },
    {
      "question": "Pattern",
      "answer": "Patr\u00f3n",
      "selected": "file1"
    },
    {
      "question": "Pelvic inlet/outlet",
      "answer": "\"<img src=\"\"17490585320452567976612210634561.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "Perecer",
      "answer": "To seem",
      "selected": "file1"
    },
    {
      "question": "Peroneal trochlea (or tubercle)",
      "answer": "On the lateral aspect of the ankle, below the lateral malleoli, look for an elongated bump that points at an angle down towards the arch.<br><br>Flex the peroneal muscles to follow the tendons of where they attach.<br><br>Below this landmark is a groove that carries the peroneus longus.<br>Above it is a groove that carries the peroneus brevis.",
      "selected": "file1"
    },
    {
      "question": "Pie",
      "answer": "Foot",
      "selected": "file1"
    },
    {
      "question": "Platica",
      "answer": "Talk",
      "selected": "file1"
    },
    {
      "question": "Please either add a cloze deletion, or use the Empty Cards tool.<br><a href='https://docs.ankiweb.net/templates/errors.html#no-cloze-filter-on-cloze-note-type'>More information</a></div>\"",
      "answer": "\"<div>No cloze \u20687\u2069 found on card.",
      "selected": "file1"
    },
    {
      "question": "Podr\u00eda",
      "answer": "I could",
      "selected": "file1"
    },
    {
      "question": "Possibly ",
      "answer": "Posiblemente",
      "selected": "file1"
    },
    {
      "question": "Postgres serial",
      "answer": "Use identity columns instead",
      "selected": "file1"
    },
    {
      "question": "Practice makes perfect",
      "answer": "La pr\u00e1ctica hace al maestro",
      "selected": "file1"
    },
    {
      "question": "Pregunta",
      "answer": "Question",
      "selected": "file1"
    },
    {
      "question": "Press the button",
      "answer": "presiona el bot\u00f3n",
      "selected": "file1"
    },
    {
      "question": "Previous (when search)",
      "answer": "N",
      "selected": "file1"
    },
    {
      "question": "Pros and cons of having SubProcedures underneath OrderProcedures vs having them both spawned in the src/index.js file, and then linked together?",
      "answer": "If I keep everything in the src/index.js file then it leads to a flatter architecture. Then I don't need to worry about bubbling events, or accessing variables in a nested way, etc, etc.<br><br>I think, in general, a flatter structure is easier to keep and separate. It's also easier for the debugger to work and for 3rd-party libraries to hook into my code.<br><br>The most nested by structure is (think folders vs tags) the harder in the future it will become to change things. Every change will casuse a cascade of changes throughout my entire application.&nbsp;",
      "selected": "file1"
    },
    {
      "question": "Pros and cons of having statusMngr for every OP, SP, vs having a master statusManager object.",
      "answer": "If I have a master statusManager object then this might be better because it is decoupling the statusManager from the OP and SP.<br><br>Rather than having a architecture where everything is neatly nested together I would have a flatter structure, that is more flexible and less error-prone, easier to change, etc.",
      "selected": "file1"
    },
    {
      "question": "Psoas rotation",
      "answer": "Extension because it attaches underneath the femur.<br><br>https://youtu.be/VcrzfTSCZEs?si=zaJ6Yy90QXK6s0zN",
      "selected": "file1"
    },
    {
      "question": "Psycho",
      "answer": "Demente",
      "selected": "file1"
    },
    {
      "question": "Psychology phenomenon where everyone is thinking something but everyone thinks they're alone with that thought or belief.",
      "answer": "Pluralistic Ignorance",
      "selected": "file1"
    },
    {
      "question": "Pussy",
      "answer": "Chocha",
      "selected": "file1"
    },
    {
      "question": "Python: What is the downside of importing a python file/function by adding to sys.path?",
      "answer": "<ol><li><div>Dependency Management: Adding a path to <code>sys.path</code> may bypass the standard Python package management system (e.g., <code>pip</code> and <code>virtualenv</code>), leading to dependency conflicts or version issues. It could be challenging to manage different versions of the same package required by different modules or projects.</div></li><li><div>Code Maintainability: Modifying <code>sys.path</code> to import modules can make the code less readable and harder to maintain. It might introduce confusion about the origin of modules, especially in larger projects.</div></li><li><div>Global Scope: Modifying <code>sys.path</code> affects the global Python environment, making it possible for other parts of the code to unintentionally access modules from the added path, potentially leading to unexpected behavior.</div></li><li><div>Import Order: The order in which paths are added to <code>sys.path</code> matters. If multiple directories have modules with the same name, the Python interpreter will import the first one found, which might not be the intended module.</div></li><li><div>Portability: Hardcoding paths in the code makes it less portable and can cause issues when moving the code to a different environment or sharing it with others.</div></li><li><div>Security Risks: If the path being added contains untrusted or user-controlled data, it could lead to security vulnerabilities, such as code injection attacks.</div></li></ol><br>",
      "selected": "file1"
    },
    {
      "question": "Python: how to go from '50626363': {} to just the dict {} ?",
      "answer": "Use .values()<br><br>Ie totals_and_means.values()",
      "selected": "file1"
    },
    {
      "question": "Q",
      "answer": "quench",
      "selected": "file1"
    },
    {
      "question": "Que haces?",
      "answer": "What are you doing?",
      "selected": "file1"
    },
    {
      "question": "Que tal? ",
      "answer": "How's it going?",
      "selected": "file1"
    },
    {
      "question": "Question",
      "answer": "Pregunta",
      "selected": "file1"
    },
    {
      "question": "Quien",
      "answer": "Who",
      "selected": "file1"
    },
    {
      "question": "Qu\u00e9 te parace si me pasas la bolsa?",
      "answer": "What do you think/feel about passing me the bag?",
      "selected": "file1"
    },
    {
      "question": "R",
      "answer": "red",
      "selected": "file1"
    },
    {
      "question": "Rain",
      "answer": "Lluvia",
      "selected": "file1"
    },
    {
      "question": "Rare ",
      "answer": "Extra\u00f1o/a",
      "selected": "file1"
    },
    {
      "question": "Really?",
      "answer": "De verdad?",
      "selected": "file1"
    },
    {
      "question": "Reflect/Ponder: If an id is only digits should it be store as a NUMERIC or as a STRING?",
      "answer": "The arguments for it being stored as NUMERIC over a STRING are:<br><br>Dealing with NUMERICS are easier for the database, and are easier to store and smaller and easier to work with.<br><br>The other argument is more of an information theory analogy. The container/schema of a piece of data should be flexible but not overly open. It should be as tight as possible to the data, without too much room for interpretation.<br><br>For example, in one of my projects in python I am using BigQuery and csv data. The question was, should id be NUMERIC or STRING? The problem is that just by looking at the csv file you can't tell. You would have to store the types in the header, or look at the database schema. This gets confusing. If it was just stored as a NUMERIC then all you have to do is look at the data itself and you can determine the type by iterating through all rows, and if only a single row has a non-digit in the id then the type should be STRING.<br><br>",
      "selected": "file1"
    },
    {
      "question": "Remember: When you mk sth more complex &amp; combine it with sth else a bit complex: these complexities multiply.",
      "answer": "Especially when moving from 1D info to 2D info. ie, dumping all files in a single folder w intelligently-chosen names (1D) vs having to deal w folder structures (2D).",
      "selected": "file1"
    },
    {
      "question": "Reminder: until you understand something like clay keep it on the outside looking in of your entire program.<br><br>The closer it becomes to clay the closer it can get to the inside of your program.",
      "answer": "\"<img src=\"\"img1935670770031123674.webp\"\">\"",
      "selected": "file1"
    },
    {
      "question": "Remove all lines in file except the first 10",
      "answer": "Enter command mode :<br>11,$d",
      "selected": "file1"
    },
    {
      "question": "Responsibility ",
      "answer": "responsabilidad",
      "selected": "file1"
    },
    {
      "question": "Rib manipulations while sitting ",
      "answer": "Never manipulate the ribs while patient is seated. Always do it supine.<br><br>If patient is sitting while you rotate ribs with a pulse then it might rip the lumbars.",
      "selected": "file1"
    },
    {
      "question": "Risk",
      "answer": "Arriesga",
      "selected": "file1"
    },
    {
      "question": "Rodilla",
      "answer": "Knee",
      "selected": "file1"
    },
    {
      "question": "Rotators of spine (extrinsics)",
      "answer": "\"Lats<br>External obliques<br>Internal obliques at the lumbar<br>Posterior delts at the upper thoracic?<br>+ Other muscles in shoulder..<br><br>Do pecs assist in rotation of the upper thoracic?<br><br><img src=\"\"Slide1.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "Roto",
      "answer": "Broken",
      "selected": "file1"
    },
    {
      "question": "Rude",
      "answer": "Brusco",
      "selected": "file1"
    },
    {
      "question": "S",
      "answer": "sun",
      "selected": "file1"
    },
    {
      "question": "SI Joint Tests?",
      "answer": "1) Leg length differences?<br><br>2) Stork Test (aka Gillet Test, Step Test, One-Legged Stance Test)<br><br>3) * Lye on back, internally rotate both legs & assess by feeling ASIS's on both sides. If one side is stuck then the ASIS should lack internal rotation.",
      "selected": "file1"
    },
    {
      "question": "Same",
      "answer": "Igual",
      "selected": "file1"
    },
    {
      "question": "Sand",
      "answer": "Arena",
      "selected": "file1"
    },
    {
      "question": "Say you are starting a new change:<br><br>What 4 steps do you do?",
      "answer": "1. jj new<br>&nbsp; - run this when you are done with the previous change, and set things up for a new change.<br>2. jj describe&nbsp;<br>&nbsp; - this command lets you write what you are working on.<br>3. jj st&nbsp;<br>&nbsp; - this shows that status<br>4. (Change the files you want. Delete files, etc.)",
      "selected": "file1"
    },
    {
      "question": "Scenario: I want to overwrite the local code with my remote repo.<br><br>&gt; git pull<br>Updating ac0f2b5..d1269a5<br>error: The following untracked working tree files would be overwritten by merge:<br>&nbsp;&nbsp;&nbsp; pipelines/google-ads/prepare-docker-and-tables.sh<br>Please move or remove them before you merge.<br>Aborting",
      "answer": "git stash --include-untracked<br>git pull<br><br>OR<br><br>git clean -fdx<br>git pull<br><br>(This is more risky bcuz you are removing all untracked files and folders instead of stashing them.)",
      "selected": "file1"
    },
    {
      "question": "Search backwards",
      "answer": "?&lt;string&gt;",
      "selected": "file1"
    },
    {
      "question": "Search forward",
      "answer": "/string",
      "selected": "file1"
    },
    {
      "question": "Select all lines ",
      "answer": "Take file",
      "selected": "file1"
    },
    {
      "question": "Select entire line before cursor",
      "answer": "Take head",
      "selected": "file1"
    },
    {
      "question": "Ser",
      "answer": "To be",
      "selected": "file1"
    },
    {
      "question": "Ser\u00e1s",
      "answer": "You will",
      "selected": "file1"
    },
    {
      "question": "She asked about me? ",
      "answer": "\u00bf(ella) Pregunt\u00f3 por m\u00ed?",
      "selected": "file1"
    },
    {
      "question": "Shit",
      "answer": "Mierda",
      "selected": "file1"
    },
    {
      "question": "Should IDs be numeric, or string?",
      "answer": "Numeric IDs are easier to work with for computers, easier to calculate and sort, auto-increment.<br><br>However string-based IDs are more universal: they can work for numeric IDs and UUIDs and IDs from other sources.<br><br>Numeric IDs are more efficient and suitable for sorting and range queries. For example, if you routinely want to find all rows of data within a certain range of IDs.",
      "selected": "file1"
    },
    {
      "question": "Should it be google-daily or google_daily?",
      "answer": "google_daily because if you ever want to import it: import statements don't allow for dashes. Only underscores.",
      "selected": "file1"
    },
    {
      "question": "Should you use a ID or a hash or both in the database?",
      "answer": "Hashes are good because they can be compared more easily. For example, we can look at the hashes between different rows and see how they differ.<br>Hashes are also good to ensure data integrity. We can rehash the values to make sure they match the expected hash, which is already stored.<br>Hashes are also useful for synchronization. We can quickly &amp; easily identify rows that have changed and need to be sync'ed.&nbsp;<br><br>IDs are good because they rarely, if ever, change.<br>IDs are useful for establishing and managing relationships between tables (foreign keys.)<br>IDs are generally numeric, making it easy and fast to work with them.<br><br><br>Advantages of using both:<br>- Versioning and History:&nbsp; We can store multiple versions of a row, each with the same ID, but wish different hashes that change over time.<br><br>However, this might be more difficult to manage.",
      "selected": "file1"
    },
    {
      "question": "Should you write/modify tests in the refactoring stage?",
      "answer": "No",
      "selected": "file1"
    },
    {
      "question": "Show all remote branches",
      "answer": "git branch -r&nbsp;",
      "selected": "file1"
    },
    {
      "question": "Show staged changes that are ready to be committed",
      "answer": "git diff --cached<br><br>OR<br><br>git diff --staged",
      "selected": "file1"
    },
    {
      "question": "Show what has changed but not yet staged for commit",
      "answer": "git diff",
      "selected": "file1"
    },
    {
      "question": "Si as\u00ed es",
      "answer": "That's how it is",
      "selected": "file1"
    },
    {
      "question": "Simple",
      "answer": "Sencillo",
      "selected": "file1"
    },
    {
      "question": "Slow",
      "answer": "Lento",
      "selected": "file1"
    },
    {
      "question": "So you understand?",
      "answer": "Lo entiendes?",
      "selected": "file1"
    },
    {
      "question": "Someone",
      "answer": "Alguien",
      "selected": "file1"
    },
    {
      "question": "Something that can\u2019t be described",
      "answer": "Inefable",
      "selected": "file1"
    },
    {
      "question": "Sometimes",
      "answer": "A veces",
      "selected": "file1"
    },
    {
      "question": "Son of a bitch ",
      "answer": "Hijo de puta",
      "selected": "file1"
    },
    {
      "question": "Sources of vitamin b6?",
      "answer": "poultry, fish, potatoes, chickpeas",
      "selected": "file1"
    },
    {
      "question": "State machine programming visually?",
      "answer": "StateCharts",
      "selected": "file1"
    },
    {
      "question": "Stocks:<br><br>In the start of the year, leaders from the previous year tend to..",
      "answer": "Underperform to start the year.",
      "selected": "file1"
    },
    {
      "question": "Street ",
      "answer": "Calle",
      "selected": "file1"
    },
    {
      "question": "Suerte",
      "answer": "Luck",
      "selected": "file1"
    },
    {
      "question": "Swap between windows in browser (ie brave)",
      "answer": "CMD + ~",
      "selected": "file1"
    },
    {
      "question": "SyntaxError: invalid syntax<br></span><br>What does this error indicate?\"",
      "answer": "\"The wrong version of python is being used.<br><br>In my lbmg poetry project this was because my execute_script functions were using \"\"python\"\" instead of sys.executable. This was, for some reason, using the wrong version of python, and not the one that was installed and activated via poetry.<br><br>Thischatgpt offers the following explanations:<br><br><ol><li><div><strong>Path Resolution</strong>: When you use <code>\"\"python\"\"</code> directly, it relies on the system's PATH environment variable to find the Python executable. If the PATH is set to a directory containing a different Python interpreter before the one managed by Poetry, it might use that instead. In contrast, <code>sys.executable</code> provides the absolute path to the Python interpreter, avoiding reliance on the PATH.</div></li><li><div><strong>Activation Script</strong>: Poetry typically sets up the virtual environment and modifies the PATH variable or provides an activation script to ensure that the correct Python interpreter is used when you run commands. If you're not using an activation script or it's not being sourced correctly in your environment, it might lead to the wrong Python version being used.</div></li><li><div><strong>Shell Interpolation</strong>: When you pass <code>\"\"python\"\"</code> directly to <code>subprocess.run()</code>, the shell might perform additional interpretation or substitution before executing the command, potentially leading to unexpected behavior. Using <code>sys.executable</code> bypasses the shell altogether and directly executes the specified Python interpreter.</div></li></ol>\"",
      "selected": "file1"
    },
    {
      "question": "T",
      "answer": "trap",
      "selected": "file1"
    },
    {
      "question": "T7-T4 rotation produces my symptoms!!!",
      "answer": "In the kitchen, put back against the door frame and anchor thoracic, and then do rotations above that anchor to feel which movements are causing my symptoms.",
      "selected": "file1"
    },
    {
      "question": "Take the conversation meta.<br><br>Instead of competing with every other guy on tinder find a way to talk about the dating game and how it's like to be a guy and get them to talk about what it's like to be a girl.",
      "answer": "This achieves standing out, making a deeper connection, and making them think differently than the others. You don't want to get branded the same in a group of other dudes.",
      "selected": "file1"
    },
    {
      "question": "Talon: wake up",
      "answer": "talon wake",
      "selected": "file1"
    },
    {
      "question": "Tarjeta",
      "answer": "Card",
      "selected": "file1"
    },
    {
      "question": "Taza ",
      "answer": "Cup",
      "selected": "file1"
    },
    {
      "question": "Te dije",
      "answer": "I told you",
      "selected": "file1"
    },
    {
      "question": "Tell them I have a few different senses of humor. Which one would they like?",
      "answer": "This allows them to tell me what they like so I can respond.",
      "selected": "file1"
    },
    {
      "question": "Tendon of the medial arch that holds up the first metataral bone?",
      "answer": "tibialis anterior",
      "selected": "file1"
    },
    {
      "question": "Tendons that rotate before they attach, in order to store and release elastic energy:",
      "answer": "Tibialis Posterior tendon<br>Achilles Tendon<br>Pec major",
      "selected": "file1"
    },
    {
      "question": "Term for adding something to a queue if it doesn't already exist, otherwise updating it?",
      "answer": "upsert",
      "selected": "file1"
    },
    {
      "question": "Term for enlarged sebaceous glands?",
      "answer": "sebaceous gland hyperplasia",
      "selected": "file1"
    },
    {
      "question": "Terminal: How do I see just the scripts from the package.json file?",
      "answer": "jq '.scripts' package.json",
      "selected": "file1"
    },
    {
      "question": "Test",
      "answer": "Test title",
      "selected": "file1"
    },
    {
      "question": "Text-mode interface for git?",
      "answer": "tig",
      "selected": "file1"
    },
    {
      "question": "Thanks to you",
      "answer": "Gracias a usted",
      "selected": "file1"
    },
    {
      "question": "That can't be true",
      "answer": "(eso) no puede ser verdad",
      "selected": "file1"
    },
    {
      "question": "That doesn't mean anything ",
      "answer": "eso no significa nada",
      "selected": "file1"
    },
    {
      "question": "That sounds delicious ",
      "answer": "eso suena delicioso",
      "selected": "file1"
    },
    {
      "question": "That's how I express myself",
      "answer": "asi me expreso",
      "selected": "file1"
    },
    {
      "question": "That's how it is",
      "answer": "Si as\u00ed es",
      "selected": "file1"
    },
    {
      "question": "That..over there",
      "answer": "Aquella",
      "selected": "file1"
    },
    {
      "question": "The floor",
      "answer": "El piso",
      "selected": "file1"
    },
    {
      "question": "The main rule for formatting?",
      "answer": "The main rule for formatting:<br><br>if you want to be able to line up information, for example filenames, then put them at the beginning of the logs.<br><br>This is because the closer to the beginning of each log entry, the more likely it will be lined up with the lines above and below it.<br><br>Put details, etc towards the end.<br><br><br>But when to use color? Use color to differentiate different log levels, but only color warn, info, etc if possible.",
      "selected": "file1"
    },
    {
      "question": "The name of the socket part of the hip",
      "answer": "acetabulum",
      "selected": "file1"
    },
    {
      "question": "The name of the toy that's like a long donut filled with water.",
      "answer": "Water wiggler<br>OR<br>Water snake toy",
      "selected": "file1"
    },
    {
      "question": "The pet",
      "answer": "La mascota",
      "selected": "file1"
    },
    {
      "question": "The stages of hair growth?",
      "answer": "Anagen<br>Catagen<br>Telegen<br>Exogen",
      "selected": "file1"
    },
    {
      "question": "The term for issues in organs that can refer pain, send signals, etc to other tissues, such as muscles, joints, bones, etc",
      "answer": "viecerosomatic reflex",
      "selected": "file1"
    },
    {
      "question": "The three lipids in skin care that are a part of the skin barrier.",
      "answer": "Ceramides<br>Cholesterol<br>Fatty acids",
      "selected": "file1"
    },
    {
      "question": "Then",
      "answer": "Entonces",
      "selected": "file1"
    },
    {
      "question": "Then don't..",
      "answer": "Enconces no..",
      "selected": "file1"
    },
    {
      "question": "There is / there are",
      "answer": "Hay",
      "selected": "file1"
    },
    {
      "question": "There is something about strength training that wakes me up, motivates me.<br><br>!!! It helps me get my routines kick-started.<br>Vs passive massage, etc which gets me slower and overthinking.",
      "answer": "Ie. Lifting dumbbells up over head with squats.",
      "selected": "file1"
    },
    {
      "question": "There was / there were",
      "answer": "Hubo",
      "selected": "file1"
    },
    {
      "question": "There will be",
      "answer": "Habr\u00e1",
      "selected": "file1"
    },
    {
      "question": "Thin vs thick-spined athletes",
      "answer": "A thicker spine means that bending will put more stress on the annulus, more likely leading to stress fractures.<br><br>Someone with a thinner spine can do situps, whereas someone with a thick spine shouldn't create these types of forces.<br><br>Think of a long thin tube vs a thick one. The thick tube will have more forces generated in the outer perimeter of the tube when bent.",
      "selected": "file1"
    },
    {
      "question": "Things ",
      "answer": "Cosas",
      "selected": "file1"
    },
    {
      "question": "Things to check for if `ssh blue-box-root -v` is not working.",
      "answer": "1. check the server logs.<br><br>2. Check ownership of .ssh folder and .ssh/authorized_keys",
      "selected": "file1"
    },
    {
      "question": "Thoughts on assert result_df.equals(EXPECTED_df) ?<br><br>(Using pandas)",
      "answer": "This is an issue because even if both pandas dataframes are the same shape and have the same rows and columns, they might not be equal due to a difference in their metadata.",
      "selected": "file1"
    },
    {
      "question": "Three parts of the Levator Ani?",
      "answer": "<strong>Pubococcygeus<br></strong><strong>Puborectalis<br></strong><strong>Iliococcygeus</strong>",
      "selected": "file1"
    },
    {
      "question": "Three sternum muscles that overlap eachother?",
      "answer": "Sternocleidomastoid<br>then sternohyoid<br>then sternothyroid",
      "selected": "file1"
    },
    {
      "question": "Three tick architectures?<br><br>Pros & Cons?<br><br>Reflect.",
      "answer": "1. Index ticks OPs. OP ticks its SPs.<br><br>2. Index ticks OPs and SPs.<br><br>3. OPs and SPs are responsible for themselves, and set a timeout after running and then call themselves.",
      "selected": "file1"
    },
    {
      "question": "Tinder: mention music ",
      "answer": "Sorry if I am late to respond. I am writing music.",
      "selected": "file1"
    },
    {
      "question": "Tinta",
      "answer": "Ink",
      "selected": "file1"
    },
    {
      "question": "Tissues that attach near or on the head of the fibula?",
      "answer": "biceps femoris tendon (short head)<br>Lateral Collateral Ligament<br>Soleus<br>Fibular Nerve<br>Arcuate Complex<br>Anterior Intermuscular Septum<br>Peroneus Longus<br>Extensor Digitorum Longus<br>Tibialis Anterior<br>Posterior tibial recurrent artery<br>Common fibular nerve<br>Circumflex fibular branch of posterior tibial artery<br>Circumflex fibular vein<br>+ lymph vessel",
      "selected": "file1"
    },
    {
      "question": "Tissues that attach to ischial tuberosity?",
      "answer": "Sacrotuberous ligaments<br><br>Semimembranosus<br>Semitendinosus<br>Biceps Femoris (long head)<br>Adductor Magnus (posterior part)",
      "selected": "file1"
    },
    {
      "question": "To be (not estar)",
      "answer": "Ser",
      "selected": "file1"
    },
    {
      "question": "To become",
      "answer": "Convertirse",
      "selected": "file1"
    },
    {
      "question": "To buy",
      "answer": "Comprar",
      "selected": "file1"
    },
    {
      "question": "To drive",
      "answer": "Conducir",
      "selected": "file1"
    },
    {
      "question": "To expand, grow, enlarge",
      "answer": "Ampliar",
      "selected": "file1"
    },
    {
      "question": "To help",
      "answer": "Ayudar",
      "selected": "file1"
    },
    {
      "question": "To lick",
      "answer": "Lamer",
      "selected": "file1"
    },
    {
      "question": "To listen ",
      "answer": "Escuchar",
      "selected": "file1"
    },
    {
      "question": "To open",
      "answer": "Abrir",
      "selected": "file1"
    },
    {
      "question": "To play (sport) ",
      "answer": "Jugar",
      "selected": "file1"
    },
    {
      "question": "To run",
      "answer": "Correr",
      "selected": "file1"
    },
    {
      "question": "To say",
      "answer": "Decir",
      "selected": "file1"
    },
    {
      "question": "To seem",
      "answer": "Perecer",
      "selected": "file1"
    },
    {
      "question": "To sing",
      "answer": "Cantar",
      "selected": "file1"
    },
    {
      "question": "To tell",
      "answer": "Contar",
      "selected": "file1"
    },
    {
      "question": "To wait ",
      "answer": "Esparar",
      "selected": "file1"
    },
    {
      "question": "To walk",
      "answer": "Caminar",
      "selected": "file1"
    },
    {
      "question": "Tonic contraction ",
      "answer": "As opposed to phasic.<br><br>More isometric",
      "selected": "file1"
    },
    {
      "question": "Tonto",
      "answer": "Fool",
      "selected": "file1"
    },
    {
      "question": "Tool",
      "answer": "herramienta",
      "selected": "file1"
    },
    {
      "question": "Tool for automatically reverse engineering REST APIs?",
      "answer": "MitmProxy2swagger",
      "selected": "file1"
    },
    {
      "question": "Torque generators of the hip, from greatest to lowest.<br><br>(Rotators, ab/ductors, extensors, flexors)",
      "answer": "\"Extensors,<br>Flexors,<br>Adductors,<br>Abductors,<br>Internal Rotators,<br>External Rotators<br><br><img src=\"\"Screenshot 2024-02-29 at 1.36.40\u202fPM.png\"\"><br><br><a href=\"\"https://www.jospt.org/doi/10.2519/jospt.2010.3025\"\">https://www.jospt.org/doi/10.2519/jospt.2010.3025</a>\"",
      "selected": "file1"
    },
    {
      "question": "Trabajo demasiado",
      "answer": "I work too much",
      "selected": "file1"
    },
    {
      "question": "Trite",
      "answer": "Of little importance,<br>Not original or fresh,<br>Overused",
      "selected": "file1"
    },
    {
      "question": "Truth",
      "answer": "Verdad",
      "selected": "file1"
    },
    {
      "question": "Tuberosity of calcaneus ",
      "answer": "Lateral and medial side of calcaneus there is a flat region.<br><br>",
      "selected": "file1"
    },
    {
      "question": "Tunnel that connects talus and calcaneus?",
      "answer": "Sinus tarsi",
      "selected": "file1"
    },
    {
      "question": "Type of cell more common in fingertips than other parts of body?",
      "answer": "Merkel cells",
      "selected": "file1"
    },
    {
      "question": "Type of reaction that leads to something breaking down into its smaller parts.",
      "answer": "Catabolic Reaction",
      "selected": "file1"
    },
    {
      "question": "U",
      "answer": "urge",
      "selected": "file1"
    },
    {
      "question": "UHK: pinky key",
      "answer": "Ctrl or Super",
      "selected": "file1"
    },
    {
      "question": "UHK: ring finger key",
      "answer": "Alt / option",
      "selected": "file1"
    },
    {
      "question": "UHK: thumb key",
      "answer": "Mod",
      "selected": "file1"
    },
    {
      "question": "Using fish, how do I tell if I am using vi bindings?",
      "answer": "<div>echo $fish_key_bindings</div>",
      "selected": "file1"
    },
    {
      "question": "Using mithril server side rendering, which lifecycle method doesn't fire?",
      "answer": "oncreate",
      "selected": "file1"
    },
    {
      "question": "V",
      "answer": "vest",
      "selected": "file1"
    },
    {
      "question": "Vale",
      "answer": "Ok",
      "selected": "file1"
    },
    {
      "question": "Valgus,<br>Normal,<br>Varus",
      "answer": "\"Valgus (knock knees)<br>Varus (bow legged)<br><br><img src=\"\"img6015832752619733704.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "Vengo",
      "answer": "I come",
      "selected": "file1"
    },
    {
      "question": "Ventana",
      "answer": "Window",
      "selected": "file1"
    },
    {
      "question": "Ventral vs dorsal",
      "answer": "Ventral refers to front of body.<br>Dorsal refers to back of body.",
      "selected": "file1"
    },
    {
      "question": "Verdad",
      "answer": "Truth",
      "selected": "file1"
    },
    {
      "question": "Vim:<br><br>move down half a page",
      "answer": "ctrl-d",
      "selected": "file1"
    },
    {
      "question": "Visual mode 2 tabs",
      "answer": "2&gt;",
      "selected": "file1"
    },
    {
      "question": "Visualize what happens after injuring a single joint or vertebrae.",
      "answer": "On injured discs or joints the area loses its stability or ability to stabilize.<br><br>This means other parts around have to attempt to stabilize this area, or this might be the part of the spine where most of the stress goes into during a certain motion, or overhead lift, etc<br><br>Imagine you can stiffen up all vertebrae except for one. That one will move much more than others and will take on a lot of force.<br><br>This is a weak spot.",
      "selected": "file1"
    },
    {
      "question": "Visualize: Calcaneal Eversion",
      "answer": "\"<img src=\"\"Screenshot 2023-11-28 at 12.30.16 PM.png\"\"><br><br>The calcaneus leans away from the midline. Ie in pronation\"",
      "selected": "file1"
    },
    {
      "question": "Vitamin B6 is good for what?",
      "answer": "Sebum production",
      "selected": "file1"
    },
    {
      "question": "Vitamin deficiency for bad night vision..",
      "answer": "Vitamin a, zinc (which activates vitamin a)",
      "selected": "file1"
    },
    {
      "question": "W",
      "answer": "whale",
      "selected": "file1"
    },
    {
      "question": "Wait for me",
      "answer": "Esperame",
      "selected": "file1"
    },
    {
      "question": "Was",
      "answer": "Estaba",
      "selected": "file1"
    },
    {
      "question": "Way to map out the sensitive skin parts of your face?",
      "answer": "Take a hot bath and sweat a lot until your face might have slight stinging in certain places.<br><br>This indicates the skin is sensitive and the barrier might be compromised in that area.<br><br>Vasodilation brings a lot of blood to the surface of the skin. This also brings a rush of other stuff with it in the blood.",
      "selected": "file1"
    },
    {
      "question": "Ways to avoid sunk cost while coding",
      "answer": "1_____________________________<br>Use git branches.<br><br>Then if I go down I certain path I can always go back to another branch at any point in time.<br><br>Ie adding get_input_path() and get_output_path() in the lbmg pipeline project.<br><br>2______________________________<br>Copy project into _playground and don't be afraid to play and remold things into a structure i'd like to try.<br><br>Then once I start molding it will lead to thoughts, and what-ifs..<br><br>@todo Very useful habit.",
      "selected": "file1"
    },
    {
      "question": "Ways to get femur into the posterior aspect of the acetabulum:<br><br>$addToCard:(add more as I think of them.)",
      "answer": "Internal rotation of the femur",
      "selected": "file1"
    },
    {
      "question": "Ways to leave insert mode",
      "answer": "ESC<br>CTRL + [",
      "selected": "file1"
    },
    {
      "question": "Ways to say both ",
      "answer": "Las Dos<br>Ambos",
      "selected": "file1"
    },
    {
      "question": "We are ready to order",
      "answer": "Estmaos listo para ordenar",
      "selected": "file1"
    },
    {
      "question": "Website to download podcasts when most others are blocked, ie on a United flight.",
      "answer": "Podscribe",
      "selected": "file1"
    },
    {
      "question": "Well done",
      "answer": "Bien hecho",
      "selected": "file1"
    },
    {
      "question": "Wet",
      "answer": "Mojado",
      "selected": "file1"
    },
    {
      "question": "What 4+ steps do I use for git filter-repo to remove the node_modules folder?",
      "answer": "0. backup the repo.<br>1. Git-Filter the repo.<br>2. Clean stale references. <br>3. Push (including tags)<br>4. Verify changes.<br><br><br>0. git clone --mirror &lt;repo-url&gt; backup-repo<br><br>1. git filter-repo --path node_modules --invert-paths<br><br>2. rm -rf .git/refs/original/<br><br>3. git push origin --force --all<br>     git push origin --force --tags<br><br>4. git log --stat<br>    git count-objects -vH",
      "selected": "file1"
    },
    {
      "question": "What B vitamins are good for sebum?",
      "answer": "B6",
      "selected": "file1"
    },
    {
      "question": "What are escape sequences?",
      "answer": "\"<div>An <b>escape sequence</b> is a special string of characters used to <b>send instructions</b> to the terminal (or another system) that wouldn\u2019t be possible using normal text.</div>",
      "selected": "file1"
    },
    {
      "question": "What are git's 3 core layers?<br>+ 4th layer for collaboration?",
      "answer": "1. Working directory (working tree)<br>2. Cache (index, or staging area)<br>3. Repository (where commit snapshots are stored)<br><br>4. Remote repository",
      "selected": "file1"
    },
    {
      "question": "What are merkel cells?",
      "answer": "Skin cells that are important for light-touch sensation.",
      "selected": "file1"
    },
    {
      "question": "What are muscles that have more than one innervation called?<br><br>Which ones are they?",
      "answer": "Hybrid Muscles.<br><br><br>Adductor Magnus (sciatic nerve for extension, and obturator innervation for adduction)<br><br>Biceps Brachii<br><br>Pectineus?",
      "selected": "file1"
    },
    {
      "question": "What are osteophytes?",
      "answer": "Bone spurs",
      "selected": "file1"
    },
    {
      "question": "What are some OLAP systems?",
      "answer": "RedShift<br>BigQuery<br>SnowFlake<br>DuckDB",
      "selected": "file1"
    },
    {
      "question": "What are some examples of OLTP systems?",
      "answer": "Mongo<br>MySQL<br>Postgres<br>Redis",
      "selected": "file1"
    },
    {
      "question": "What are some similar tools to netcat?",
      "answer": "ncat<br>socat<br>hping<br>tcpdump",
      "selected": "file1"
    },
    {
      "question": "What are some strange errors I might see when using vite?",
      "answer": "\"In production mode:<br><br>\"\"Missing semicolon\"\"<br>\"\"Unexpected token\"\"<br><br>It's rare, but for example, we might have a string somewhere in our code that contains something like \"\"process.env. NODE_ENV\"\" which gets transformed by vite into \"\"\"\"development\"\": \"\".<br><br>ref:&nbsp;<a href=\"\"https://vitejs.dev/guide/env-and-mode.html\"\">https://vitejs.dev/guide/env-and-mode.html</a>\"",
      "selected": "file1"
    },
    {
      "question": "What are the 3 types of ensemble learning?",
      "answer": "Bagging<br>Boosting<br>Stacking",
      "selected": "file1"
    },
    {
      "question": "What are the differences between buildah and podman?",
      "answer": "Buildah specializes in building container images, while Podman focuses on running, managing, and maintaining those images.",
      "selected": "file1"
    },
    {
      "question": "What are the effects of oral steroids?",
      "answer": "Steroids reduce inflammation, seal the blood/brain barrier, enhance nerve conduction and alter the immune system, all of which are potentially beneficial in treating MS.",
      "selected": "file1"
    },
    {
      "question": "What are the first two things you have to do before you can push to <b>github</b>?<div><br></div>",
      "answer": "Set user.name and user.email<div><br></div><div>Bonus: set the .ssh/config file to make sure I'm using the correct host.</div>",
      "selected": "file1"
    },
    {
      "question": "What are the main causes of IPC Errors?",
      "answer": "\"<div><b>Causes of IPC Errors</b></div>",
      "selected": "file1"
    },
    {
      "question": "What are the main problems with recursion?",
      "answer": "Tail recursion might not be optimized for, ie in python, nodejs.<br><br>It might create a giant call stack.",
      "selected": "file1"
    },
    {
      "question": "What are you saying?",
      "answer": "De que hablas?",
      "selected": "file1"
    },
    {
      "question": "What attaches to ASIS?",
      "answer": "Sartorius",
      "selected": "file1"
    },
    {
      "question": "What attaches to the PSIS?",
      "answer": "Thoracolumbar fascia",
      "selected": "file1"
    },
    {
      "question": "What can I use to split my terminal into different panes, windows?",
      "answer": "tmux",
      "selected": "file1"
    },
    {
      "question": "What can deplete zinc?",
      "answer": "Stress, sugar, carbs, phytic acid (in grains), inflammation in intestine, low stomach acid, alcohol",
      "selected": "file1"
    },
    {
      "question": "What chmod settings should the local ssh files be set to?",
      "answer": "600<br><br>(Read and write access for the owner)",
      "selected": "file1"
    },
    {
      "question": "What command in centos8 to see what is taking up RAM, CPU, etc?",
      "answer": "top",
      "selected": "file1"
    },
    {
      "question": "What could I be using instead of express?",
      "answer": "koa",
      "selected": "file1"
    },
    {
      "question": "What do I do if I want to add a new poetry package, ie `util`?",
      "answer": "\"Add it to the pyproject.toml file:<br>packages = [<br>&nbsp;&nbsp;&nbsp; { include = \"\"configuration\"\", from = \"\"packages\"\" },<br>&nbsp;&nbsp;&nbsp; { include = \"\"environment\"\", from = \"\"packages\"\" }, <br>&nbsp;&nbsp;&nbsp; { include = \"\"pipelines\"\", from = \"\"packages\"\" },<br>]<br><br>delete the poetry.lock file<br>run `poetry install`\"",
      "selected": "file1"
    },
    {
      "question": "What do you do when someone is giving excuses or stories for why they couldn't complete a task, are late, etc?",
      "answer": "\"\"\"How do you plan to improve next time?\"\"<br><br>This removes the two conversationalists from talking about what just happened, which is fused with strong emotion and excuses and stories.<br><br>Instead, discuss about the future, which is positive and removes.us from that emotion.\"",
      "selected": "file1"
    },
    {
      "question": "What do you like to do?",
      "answer": "Que te gusta hacer?",
      "selected": "file1"
    },
    {
      "question": "What do you mean? ",
      "answer": "eso no puede ser verdad?<br><br>Que quieres decir?",
      "selected": "file1"
    },
    {
      "question": "What does ETL stand for?",
      "answer": "Extract<br>Transform<br>Load",
      "selected": "file1"
    },
    {
      "question": "What does JWT stand for?",
      "answer": "JSON Web Tokens",
      "selected": "file1"
    },
    {
      "question": "What does OLAP stand for, and what is it's primary purpose?",
      "answer": "\"OLAP stands for \"\"Online Analytical Processing.\"\"<br><br>It's main purpose is to analyze large amount os data quickly. It supports compelx queries, data discovery, and decision-making processes.\"",
      "selected": "file1"
    },
    {
      "question": "What does OLTP stand for, and what is its primary purpose?",
      "answer": "\"OLTP stands for \"\"Online Transaction Processing.\"\"<br><br>It's main purpose is to handle a large number of short transactions (insert, update, delete,)&nbsp;\"",
      "selected": "file1"
    },
    {
      "question": "What does `echo $?` do?",
      "answer": "$? stores the exit code of the last command.",
      "selected": "file1"
    },
    {
      "question": "What does arn stand for?<br><br>As is arn:aws:s3?",
      "answer": "Amazon resource name",
      "selected": "file1"
    },
    {
      "question": "What does import('afile.js') return?",
      "answer": "a promise",
      "selected": "file1"
    },
    {
      "question": "What does the --stat option do in git diff?",
      "answer": "It provides a summary of changes instead of the full diff.",
      "selected": "file1"
    },
    {
      "question": "What does the following command do?<br><br><div>git branch -f my-branch my-tag</div>",
      "answer": "It will force the branch my-branch to point to the tag my-tag.",
      "selected": "file1"
    },
    {
      "question": "What does the following do?<br><br>set -a<br>source .env<br>set +a",
      "answer": "1. Every variable defined after `set -a` will be automatically exported as an environment variable.<br>&nbsp; i.e. now running `FOO=bar` is like doing `export FOO=bar`<br><br>2. Loads and runs the .env file lin-by-line, defining each var in the current shell.<br>&nbsp; i.e. if my .env file looks like this:<br>&nbsp; &nbsp; &nbsp; &nbsp; AIDER_API_KEY=deepseek=sk-abc123<div>&nbsp; &nbsp; &nbsp; &nbsp; DEBUG=true</div><div>&nbsp; ..those become <b>exported</b> environment variables.</div><div><br></div><div>3. Return things back to normal by turning off the automatic export mode.</div>",
      "selected": "file1"
    },
    {
      "question": "What does this do:<br><br>docker container ls",
      "answer": "It shows the running containers. Not the stopped ones.",
      "selected": "file1"
    },
    {
      "question": "What does this error mean?<br><br><br>/Users/luketych/Dev/_Projects/_ktr/_srt/workspace_github/@ktr-srt/project/.pnp.cjs:39832<br>&nbsp; return Object.defineProperties(new Error(message), {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ^<br><br>Error: Qualified path resolution failed: we looked for the following paths, but none could be accessed.<br><br>Source path: /Users/luketych/Dev/_Projects/_ktr/_srt/workspace_github/@ktr-srt/project/packages/events_board_js/src/queueEvents/index.js<br>Not found: /Users/luketych/Dev/_Projects/_ktr/_srt/workspace_github/@ktr-srt/project/packages/events_board_js/src/queueEvents/index.js<br><br>&nbsp;&nbsp;&nbsp; at makeError (/Users/luketych/Dev/_Projects/_ktr/_srt/workspace_github/@ktr-srt/project/.pnp.cjs:39832:34)<br>&nbsp;&nbsp;&nbsp; at resolveUnqualified (/Users/luketych/Dev/_Projects/_ktr/_srt/workspace_github/@ktr-srt/project/.pnp.cjs:41654:13)<br>&nbsp;&nbsp;&nbsp; at resolveRequest (/Users/luketych/Dev/_Projects/_ktr/_srt/workspace_github/@ktr-srt/project/.pnp.cjs:41695:14)<br>&nbsp;&nbsp;&nbsp; at Object.resolveRequest (/Users/luketych/Dev/_Projects/_ktr/_srt/workspace_github/@ktr-srt/project/.pnp.cjs:41751:26)<br>&nbsp;&nbsp;&nbsp; at resolve$1 (file:///Users/luketych/Dev/_Projects/_ktr/_srt/workspace_github/@ktr-srt/project/.pnp.loader.mjs:1989:21)<br>&nbsp;&nbsp;&nbsp; at nextResolve (node:internal/modules/esm/loader:164:28)<br>&nbsp;&nbsp;&nbsp; at ESMLoader.resolve (node:internal/modules/esm/loader:838:30)<br>&nbsp;&nbsp;&nbsp; at ESMLoader.getModuleJob (node:internal/modules/esm/loader:419:18)<br>&nbsp;&nbsp;&nbsp; at ModuleWrap.&lt;anonymous&gt; (node:internal/modules/esm/module_job:77:40)<br>&nbsp;&nbsp;&nbsp; at link (node:internal/modules/esm/module_job:76:36)",
      "answer": "I used to think it meant only one thing. But it can mean 2 things:<br><br>1. It means that somewhere in my project I am trying to import from src/queueEvents/index.js, but it doesn't exist.<br>2. OR it means that in the file src/queueEvents/index.js there is an incorrect import statement. In this case, it ws incorrectly trying to import a file '../redis.js'. But the correct path from '../../redis.js'&nbsp;",
      "selected": "file1"
    },
    {
      "question": "What happens if I shift my neck vertebrae in the frontal plane?",
      "answer": "If I shift to the right I think it reproduces my symptoms in my left neck and jaw of muscle twitching.",
      "selected": "file1"
    },
    {
      "question": "What helps to tighten the cell walls in the intestines?",
      "answer": "butyrate",
      "selected": "file1"
    },
    {
      "question": "What if I try psql and get an error saying it doesn't exist?",
      "answer": "try `su - postgres` first<br>",
      "selected": "file1"
    },
    {
      "question": "What if I want a specific commit ae24088b to be applied to branch my-branch?",
      "answer": "git checkout my-branch<br>git cherry-pick ae24088b",
      "selected": "file1"
    },
    {
      "question": "What if you want to stage only a part of a file instead of a whole thing?",
      "answer": "git add -p<br>or git add --patch",
      "selected": "file1"
    },
    {
      "question": "What if you've done something terribly wrong and want to see everything you've ever done so you can backtrack and go back in a time machine?",
      "answer": "\"<pre><code>git reflog",
      "selected": "file1"
    },
    {
      "question": "What is ** called in bash?",
      "answer": "globstar",
      "selected": "file1"
    },
    {
      "question": "What is ** in python?<br><br>For example:<br><br>schema = [bigquery.SchemaField(**col) for col in schema_json]",
      "answer": "Unpacking dicts.<br><br>Note: To unpack strings, lists, tuples, sets use a single *.",
      "selected": "file1"
    },
    {
      "question": "What is ACID is database systems?",
      "answer": "\"<i>Atomicity,&nbsp;<a href=\"\"https://en.m.wikipedia.org/wiki/Consistency_(database_systems)\"\">Consistency</a>,&nbsp;<a>Isolation</a>,&nbsp;<a href=\"\"https://en.m.wikipedia.org/wiki/Durability_(database_systems)\"\">Durability</a></i>\"",
      "selected": "file1"
    },
    {
      "question": "What is Feature Toggle?",
      "answer": "You can use, for example, .env files to toggle certain features in the code on/off, in any branch or production, or staging, or development, etc, etc.<br><br>This makes things like a canary rollout and A/B testing easier.",
      "selected": "file1"
    },
    {
      "question": "What is Galileo's Principle?",
      "answer": "A system that is highly coupled and complex will fail and fail hard.<br><br>Every time you add something new that's a new layer of complexity.<br><br>If you have a beam resting on 2 supports you might think 3 supports is better. But it's likely that the middle support could take on more weight than the ends and end up cracking the beam.",
      "selected": "file1"
    },
    {
      "question": "What is Nutpicking?",
      "answer": "\"Example:<br><br>Someone points out the crazy, extremism of the democratic party as a reason why they're all crazy.<br><br>For example, AOC.<br><br>\"\"This is when you focus on the dumbest, craziest arguments from the dumbest, craziest members of a group, thereby avoiding the possibility of being persuaded by anyone from that group.\"\"\"",
      "selected": "file1"
    },
    {
      "question": "What is a Contract Violation?",
      "answer": "<div>when a system <b>fails to adhere to an agreed-upon interface, schema, or protocol</b>.</div>",
      "selected": "file1"
    },
    {
      "question": "What is a Serialization Error?",
      "answer": "When data cannot be correctly converted into a format for storage or transmission.<br><br>Serialization is the process of converting objects into different formats so that they can be saved or sent over networks or to other systems.",
      "selected": "file1"
    },
    {
      "question": "What is a catabolic reaction?",
      "answer": "A reaction that breaks molecules down into smaller units.",
      "selected": "file1"
    },
    {
      "question": "What is a duct tape programmer?",
      "answer": "A programmer that does everything management wants, but writes hard-to-maintain code.<br><br>Management loves him because he delivers, but the tech team hates him because his code is shit.",
      "selected": "file1"
    },
    {
      "question": "What is a git pull?",
      "answer": "A fetch and a merge",
      "selected": "file1"
    },
    {
      "question": "What is a globstar?",
      "answer": "**, it searches all files and directories from the directory in which it is called.",
      "selected": "file1"
    },
    {
      "question": "What is a peerDependency?",
      "answer": "It's defined in package.json.<br><br>It's a dependency that the project itself is not directly dependent upon. But other dependencies in the project are dependent on.<br><br>They are expected to be supplied by the consumer. That means when you run `yarn install` peerDependencies will not be installed. You will have to install them manually, or by running `yarn add --peer` or `npm install --peer`",
      "selected": "file1"
    },
    {
      "question": "What is a python namespace package, and when is it useful?",
      "answer": "A namespace package gives you the ability to separate a package up into separate directories.<br><br>This is useful when the package is huge and you want to split it into pieces to make it more maintainable.&nbsp;<br><br>Some packages, such as numpy, also use this concept to create a common namespace for a group of related packages.",
      "selected": "file1"
    },
    {
      "question": "What is a response to Occam's Razor?",
      "answer": "Occam's Dilemma<br>.ie in statistics, you have to embrace a certain amount of complexity. The simplest models don't work and don't have enough parameters to fit the data.",
      "selected": "file1"
    },
    {
      "question": "What is a tool used for finding out which commit that introduced a bug?",
      "answer": "git bisect?",
      "selected": "file1"
    },
    {
      "question": "What is a tty?",
      "answer": "\"<div><b>TTY</b> stands for <b>Teletypewriter</b> \u2014 originally referring to physical terminals used to communicate with mainframes in the early days of computing.</div>",
      "selected": "file1"
    },
    {
      "question": "What is alostasis?",
      "answer": "As opposed to homeostasis <br><br>Things are stable<br>Then then get knocked into instability<br>Then they recover back into a new balance between the systems involved.",
      "selected": "file1"
    },
    {
      "question": "What is an Ichimoku Cloud?",
      "answer": "An alternative to the moving average.<br>But also much more than that. It attempts to calculate the support and resistance levels. It also shows trend momentum and direction.",
      "selected": "file1"
    },
    {
      "question": "What is an alternative to git?",
      "answer": "\"<span style=\"\"color: rgb(240, 246, 252); background-color: rgb(13, 17, 23);\"\">Jujutsu<br></span><br>(jj)\"",
      "selected": "file1"
    },
    {
      "question": "What is an alternative to moving averages, and also shows support/resistance levels, trend direction and momentum.",
      "answer": "Ichimoku Cloud",
      "selected": "file1"
    },
    {
      "question": "What is an example of a centered vector, using Cartesian coordinates for a very simple 2D example?",
      "answer": "\"<img src=\"\"file-LxpusrZNW4kAKKQUpx9k3R.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "What is an isokinetic movement?",
      "answer": "A The term you're describing is isokinetic movement.<br><br>In isokinetic movements, the muscle's length remains constant during the movement because the joint angle or pivot point is changing, allowing for a consistent speed of motion. This is different from isometric contraction, where the muscle length stays constant because the joint does not move at all.<br><br>Specialized machines, such as isokinetic dynamometers, are often used to control the speed of movement while the muscle maintains consistent tension throughout the range of motion.<br><br>",
      "selected": "file1"
    },
    {
      "question": "What is another term for the <b>Baader-Meinhof Phenomenon</b>?",
      "answer": "Frequency Illusion",
      "selected": "file1"
    },
    {
      "question": "What is another term for the <b>frequency illusion</b>?",
      "answer": "Baader-Meinhof Phenomenon",
      "selected": "file1"
    },
    {
      "question": "What is borage oil good for?",
      "answer": "Reduced PH of skin",
      "selected": "file1"
    },
    {
      "question": "What is git reset?<br><br>Is it:<br>A) git reset --soft<br>B) git reset --mixed<br>C) git reset --hard",
      "answer": "git reset --mixed",
      "selected": "file1"
    },
    {
      "question": "What is grey rocking?",
      "answer": "When you don't want to engage with someone it's being as unresponsive as possible. Maybe just saying uh huh, or that's nice. Stuff like that.",
      "selected": "file1"
    },
    {
      "question": "What is happening when muscles start to shake?<br><br>For example doing a 45 degree angle single glute bridge, and keeping the contralateral leg extended and the pelvis up until shaking in the quads.",
      "answer": "Slow twitch fibers to fast twitch fibers.<br><br>One motor nerve goes to around 2,000 fibers. So it's not as coordinated. In slow twitch fibers it's 200-300 fibers. <br><br>That's why you see the shake.",
      "selected": "file1"
    },
    {
      "question": "What is milk thistle good for?",
      "answer": "Helping the liver.<br><br>Regulating sebum, acne lesions.",
      "selected": "file1"
    },
    {
      "question": "What is nutpicking?",
      "answer": "When someone points out the most ridiculous or extreme examples of something to distance themselves from it or attempt to convince you that the entire thing is bad.<br><br>For example, using AOC as a reason to hate the democrats.",
      "selected": "file1"
    },
    {
      "question": "What is one of the main advantages of duckdb?",
      "answer": "It can query data without having to ingest it. <br><br><br>To elaborate: DuckDB can run SQL queries directly on external files like Parquet, CSV, and others without loading them into a separate internal database format. <br><br>This is especially useful for:<br> - Exploratory data analysis<br> - Ad hoc querying of large datasets<br> - Lightweight ETL tasks<br><br>This behavior is similar to how SQLite operates, but optimized for analytical workloads (OLAP) rather than transactional workloads.",
      "selected": "file1"
    },
    {
      "question": "What is paresthesia?",
      "answer": "Pins and needles sensation",
      "selected": "file1"
    },
    {
      "question": "What is postgres NOTIFY? What is the other related command?",
      "answer": "NOTIFY is used to send a notification event together with an optional payload string to each client who is LISTENing for the specific channel name in the current database. Notifications are visible to all users.<br><br>The other related command is LISTEN.",
      "selected": "file1"
    },
    {
      "question": "What is reactance?",
      "answer": "In psychology, when someone feels threat from their autonomy or freedom being removed.<br><br>For example, when you tell someone what to do or what to believe or how to act.",
      "selected": "file1"
    },
    {
      "question": "What is the Dilution Effect?",
      "answer": "When you make an argument or present examples or evidence. The listener takes an average of all of the examples.<br><br>For example, good arguments mixed with weak arguments undermines the good arguments.",
      "selected": "file1"
    },
    {
      "question": "What is the cow face pose?",
      "answer": "Do the behind the arm-paolo stretch, and put one leg over the other to stretch outsides of hips.",
      "selected": "file1"
    },
    {
      "question": "What is the difference between HEAD~ and HEAD~1?",
      "answer": "Nothing",
      "selected": "file1"
    },
    {
      "question": "What is the difference between restart and reload?",
      "answer": "Reload causes the service to restart its configuration without completely restarting the service.",
      "selected": "file1"
    },
    {
      "question": "What is the difference between these two:<br><br>git reset<br><br>git reset --hard",
      "answer": "\"`git reset` allows you to move the branch pointer to a specific commit. This effectively \"\"uncommits\"\" changes. <br><br>By default, it moves the branch pointer to the specified commit but leaves your working directory and staging area unchanged.<br><br>This command is often used to uncommit changes while preserving the changes in your working directory. You can then recommit, amend, or modify the changes before committing.<br><br><br>`git reset --hard` also updates both the working directory and staging area.<br>Any uncommited changes in your working directory and staging area are discarded.<br><br><br>https://stackoverflow.com/questions/3639342/whats-the-difference-between-git-reset-and-git-checkout\"",
      "selected": "file1"
    },
    {
      "question": "What is the difference between these two:<br><br>python __main__.py<br>python -m __main__.py<br><br>?",
      "answer": "\"The second command is telling python to run a module. Python will first look for a package named __main__ and then look for a module in that package named __main__.py.<br><br>\"\"<span style=\"\"color: rgb(55, 65, 81); background-color: rgb(247, 247, 248);\"\">This approach ensures that the module is properly set up as a package, and allows you to import other modules within the package using relative imports.\"\"<br><br>The \"\"</span>python __main__.py\"\" command tells python to run the specified file directly. This is simpler, but not recommended for projects because you can't easily import other modules using relative imports.<span style=\"\"color: rgb(55, 65, 81); background-color: rgb(247, 247, 248);\"\"><br></span>\"",
      "selected": "file1"
    },
    {
      "question": "What is the downside of taking too much vitamin d?",
      "answer": "It reduces absorption of vitamin a.",
      "selected": "file1"
    },
    {
      "question": "What is the function of the iliotibial band?",
      "answer": "The glute and tfl contract to create a compressive force, preventing the femur from bending during single-leg stance.",
      "selected": "file1"
    },
    {
      "question": "What is the myotatic reflex?",
      "answer": "The stretch reflex",
      "selected": "file1"
    },
    {
      "question": "What is the name for comments that appear directly under a function declaration or a module?",
      "answer": "Docstrings",
      "selected": "file1"
    },
    {
      "question": "What is the name for the phenomenon where once you learn about something you start to see examples of it everywhere?<br><br>For example, when I learned about the 80-20 rule.",
      "answer": "Baader-Meinhof Phenomenon<br>OR<br>Frequency Illusion",
      "selected": "file1"
    },
    {
      "question": "What is the nefron a basic unit of?",
      "answer": "Kidney",
      "selected": "file1"
    },
    {
      "question": "What is the psychology term for when someone feels threatened because their feeling of autonomy/freedom of action/thought is being taken away?",
      "answer": "Reactance&nbsp;",
      "selected": "file1"
    },
    {
      "question": "What is the sinus tarsi?",
      "answer": "A tunnel between the calcaneus and talus",
      "selected": "file1"
    },
    {
      "question": "What is the term that describes the following:<br><br>When someone consciously or unconsciously puts obstacles in front of themselves so when they fail it protects their esteem.<br><br>For example, sometimes I eat food I know will hurt my skin so I can feel secure knowing the cause of it. <br><br>It would hurt me more if a new food caused other sorts of issues.",
      "answer": "Self-handicapping",
      "selected": "file1"
    },
    {
      "question": "What is the term used when you want to collapse a section of your code and hide it (but not delete it)?",
      "answer": "folding",
      "selected": "file1"
    },
    {
      "question": "What is the tissue btwn the tibia and fibula called?",
      "answer": "interosseous ligament",
      "selected": "file1"
    },
    {
      "question": "What is the type of python module where you can split things up across multiple folders, or possibly namespaces?",
      "answer": "namespace module",
      "selected": "file1"
    },
    {
      "question": "What is tree shaking?",
      "answer": "\"A type of debugging where you basically are looking to get rid of the functions that aren't running and slim down your code of bloat.<br><br>It is a \"\"dead code elimination\"\" technique.\"",
      "selected": "file1"
    },
    {
      "question": "What is yarn dlx?",
      "answer": "a temporary environment to run a package in",
      "selected": "file1"
    },
    {
      "question": "What libraries should I consider when building a CLI?",
      "answer": "prompt, inquirer, yargs, commander",
      "selected": "file1"
    },
    {
      "question": "What macronutrients increase sebum production? ",
      "answer": "Carbohydrate and fat<br><br>https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3051853/",
      "selected": "file1"
    },
    {
      "question": "What might pomegranate extract be good for?",
      "answer": "Phytoestrogens, which might compete with estrogen for binding of receptors. This might reduce estrogen levels.",
      "selected": "file1"
    },
    {
      "question": "What muscles lie underneath the sternocleidomastoid?",
      "answer": "sternohyoid,<br>then sternothyroid&nbsp;",
      "selected": "file1"
    },
    {
      "question": "What muscles make up the triceps of the hip?",
      "answer": "obtruator internus<br>superior gemellus<br>inferior gemellus",
      "selected": "file1"
    },
    {
      "question": "What problem do I have with my eyes? (It has to do with seeing up close with my muscles.)<br>",
      "answer": "Convergence Insufficiency&nbsp;&nbsp;",
      "selected": "file1"
    },
    {
      "question": "What shell am I currently running in my terminal?",
      "answer": "echo $SHELL",
      "selected": "file1"
    },
    {
      "question": "What should you supplement while fasting?",
      "answer": "B vitamins, electrolytes, water soluble vitamins, potassium, trace minerals, vitamin C, vitamin D,<br>Some amino acids",
      "selected": "file1"
    },
    {
      "question": "What sternum muscle is not found in everyone?",
      "answer": "sternalis",
      "selected": "file1"
    },
    {
      "question": "What sugars do yeast consume and convert to ethanol + CO2?",
      "answer": "sucrose, fructose, glucose. But not lactose",
      "selected": "file1"
    },
    {
      "question": "What sugars does yeast not consume and convert to ethanol + CO2?",
      "answer": "lactose",
      "selected": "file1"
    },
    {
      "question": "What to do if branches aren't being shown?",
      "answer": "Maybe they're remote but not local:<br><br>git branch -r",
      "selected": "file1"
    },
    {
      "question": "What to do if my git repo is too big, and I can't remove large files, ie csv files?",
      "answer": "Use git-filter-repo:<br><br>git-filter-repo --path-glob '*.csv' --invert-paths<br><br>git push origin --force --all",
      "selected": "file1"
    },
    {
      "question": "What to do if yarn link is giving me an error saying I can't link a project to itself?",
      "answer": "\"go to ktr.bio/yarn-link<br><br>Note: sometimes `yarn add @ktr-srt/util` works. It adds `\"\"@ktr-srt/util\"\": \"\"workspace:^\"\"` to package.json dependencies.<div><div></div></div>\"",
      "selected": "file1"
    },
    {
      "question": "What to mention when you know that adding more manpower is a project in the late stages will make it take even longer as people have to get up to speed, etc.",
      "answer": "Brook's Law",
      "selected": "file1"
    },
    {
      "question": "What to use when the git branches or commits are messed up?",
      "answer": "Reflog",
      "selected": "file1"
    },
    {
      "question": "What type of drugs kill of senescent cells?",
      "answer": "senolytics",
      "selected": "file1"
    },
    {
      "question": "What user am i?",
      "answer": "whoami",
      "selected": "file1"
    },
    {
      "question": "What users are on the system?",
      "answer": "who",
      "selected": "file1"
    },
    {
      "question": "What was the most likely reason for rapid brain expansion during evolution?",
      "answer": "Fire.<br><br>This allowed us to extract more calories from our food, and sleep.<br><br>Sleep led to REM sleep, which leads to rapid brain development.",
      "selected": "file1"
    },
    {
      "question": "What's a good technique for releasing the scalenes while the patient is lying supine?",
      "answer": "Rolfing<br><br>They will usually feel referred pain radiating into the shoulder or up into the face/ear area.",
      "selected": "file1"
    },
    {
      "question": "What's an example of a piezoelectric material in the body?",
      "answer": "Bone",
      "selected": "file1"
    },
    {
      "question": "What's it called when someone gives a personal reading of you, and even though it's very general it feels personalized",
      "answer": "Barnum effect",
      "selected": "file1"
    },
    {
      "question": "What's it called when someone mistakes a memory for their own idea something new and original.",
      "answer": "Cryptomnesia",
      "selected": "file1"
    },
    {
      "question": "What's the issue with this?<br><br>try {<br>     fetchUserData()<br>    } catch (error) {<br>    throw new Error(`Failed to fetch user data: ${error.message}`);<br>  }",
      "answer": "In JavaScript anything can be thrown.<br><br>So we don't know if that's even an error. We don't know if it contains .message.<br><br>So what do we do?<br><br>We can check to make sure it's an error first using instanceof, or use Result<T,E>, or tuples in the form of [result, err]",
      "selected": "file1"
    },
    {
      "question": "When a javascript function doesn't return something what does it return?",
      "answer": "undefined",
      "selected": "file1"
    },
    {
      "question": "When consuming protein what should I add alongside?",
      "answer": "Fat or fiber.<br><br>(And some carbohydrates?)<br><br>Because protein on its own, ie protein powder, is going to mess up insulin levels",
      "selected": "file1"
    },
    {
      "question": "When creating a self-invoking function what do I need to remember to do?",
      "answer": "Put a semicolon at the beginning",
      "selected": "file1"
    },
    {
      "question": "When does glute max fire?",
      "answer": "In heel strike and toe-off",
      "selected": "file1"
    },
    {
      "question": "When doing a USD to USD wire transfer what should I always make sure to do?",
      "answer": "\"Always add note \"\"keep funds in USD, do not convert currency.\"\"\"",
      "selected": "file1"
    },
    {
      "question": "When eating vegetables what should I eat them with?",
      "answer": "Fat, to absorb the fat soluble vitamins.",
      "selected": "file1"
    },
    {
      "question": "When in visual mode to select text,<br><br>How to increase selection in both directions?",
      "answer": "For example, h will increase selection to the the left. Then press o. Then l will increase the selection towards the right.",
      "selected": "file1"
    },
    {
      "question": "When is __init__.py file ran?<br>",
      "answer": "\"__init__.py is only ran when the package (or module) is imported.<br><br>So, for example, it is not run when I do this:<br><br>concurrently = { \"\"shell\"\" = \"\"poetry run concurrently \\\"\"python -m debugpy --listen 127.0.0.1:5679 projects/ibWriter/src\\\"\"\"\" }\"",
      "selected": "file1"
    },
    {
      "question": "When looking at a git reference, ie&nbsp;9b61fc9090b44949bc057374fdcbc04607158460, what characters do we use for shorthand?",
      "answer": "The first 8 characters",
      "selected": "file1"
    },
    {
      "question": "When lying on the couch downstairs with my neck forward ",
      "answer": "I can start to feel it go into my ribs and make my breathing constricted from there.<br><br>Maybe there is a cross-force from posterior or anterior neck to anterior chest and ribs..",
      "selected": "file1"
    },
    {
      "question": "When making a function file such as getProxy.js, should I do export default function() or export default function getProxy()?",
      "answer": "The second is easier to debug. If I am looking for getProxy() and I have only the filename called getProxy then I won't be able to find it as easily.",
      "selected": "file1"
    },
    {
      "question": "When managing a monorepo with namespaces/workspaces, if the version of the entire monorepo project is 1.2.3 what versions should the internal workspace repos be?",
      "answer": "At least 1.2.3.<br><br>The sub-repos inside of the monorepo have to be at least the same version as the monorepo.",
      "selected": "file1"
    },
    {
      "question": "When massaging for thoracic:",
      "answer": "Go muscle-by-muscle.<br><br>Think of the lats. Hit the strategic parts of the lats.<br><br>Then the extensors, rotators, etc.<br><br>Don't treat them all as one.",
      "selected": "file1"
    },
    {
      "question": "When my program exits, or crashes and then recovers why don't active jobs resume right away?",
      "answer": "They are considered stalled jobs, and will wait for 30 seconds (by default) before attempting to be run again.&nbsp;",
      "selected": "file1"
    },
    {
      "question": "When people are given a title they take pride in that title. They start to behave like that title.",
      "answer": "For example, when you tell someone they're a manager or head of data management then they start to take on those responsibilities. Including managing meetings, etc etc.<br><br>They'll research how to perform that role. They'll look into responsibilities, and examples to emulate.",
      "selected": "file1"
    },
    {
      "question": "When running yarn, which version will be used?",
      "answer": "Yarn 1 is meant to be used globally.<br><br>Newer versions, ie berry, are meant to be used on a project-specific basis.<br><br>This means that you must cd to the project directory where yarn is set up (yarn file, etc.) and then run it from there.",
      "selected": "file1"
    },
    {
      "question": "When setting up a new centos8 server (for example) I notice there are a lot of suspicious login attempts.<br><br>What steps should I take to protect the server?",
      "answer": "\"- Disable logging in with a password. Use SSH if possible.<br>- Set option in /etc/ssh/sshd_config&nbsp;<span style=\"\"color: rgb(255, 255, 255); font-weight: 600; background-color: rgb(68, 70, 84);\"\">PermitRootLogin no<br></span>- install and run fail2ban, which will ban ip addresses that keep making attempts to brute force into the server.<br>- maybe only whitelist my ip address and Harbie's<br>- Regularly monitor logs: /var/log/secure and /var/log/auth.log<br>- Consider using an Intrusion Detection System (IDS)<br>- use Port Knocking\"",
      "selected": "file1"
    },
    {
      "question": "When should one return an error instead of throwing an error?",
      "answer": "\"In cases where the error might be expected and shouldn't throw off the flow of the program.<br><br>For example, division by zero:<br><br>```<br>function divide(a, b) {",
      "selected": "file1"
    },
    {
      "question": "When someone or a team tries to appear bigger than they actually are, especially online by using bots and Trump techniques.",
      "answer": "Astroturfing",
      "selected": "file1"
    },
    {
      "question": "When someone point out the CIA proves in psychics or other alien crap:",
      "answer": "\"Well the CIA also \"\"proved\"\" that Uri Geller's psychic abilities were real...<br><br>That turned out to be a massive fraud.\"",
      "selected": "file1"
    },
    {
      "question": "When specifying dependencies in Python package managers like Poetry or pip, you should use the hyphenated name as it appears in the URL, not the underscored version<br><br>When specifying dependencies in python pkg managers like poetry/pip, ie a packge names a_b_c, how should it be references in the&nbsp;toml file?",
      "answer": "a-b-c.<br><br>(Python will make the conversion between underscores and hyphens.)",
      "selected": "file1"
    },
    {
      "question": "When starting a new yarn project, what steps are required?",
      "answer": "1. yarn init<br>2. yarn set version berry",
      "selected": "file1"
    },
    {
      "question": "When taking fat soluble vitamins what should I do?",
      "answer": "Take it with meal, or fat",
      "selected": "file1"
    },
    {
      "question": "When testing a new library, and trying to fit it into my existing project/workspace what should I do?",
      "answer": "Get it to work within the place it will be when it's integrated with my project.<br><br>Remember bull-board. Once I FINALLY got it working, I spent my time refactoring it to learn and get used to it.<br><br>BUT I should have got it to work in my setup first.<br><br>It was a lot of stuff. Typescript, lerna, a bunch of libs I've never used before, etc. Maybe I was so happy to finally get it working I just wanted to jump into the code and spend some time with it instead of doing what I should have done: like a tree root, stretch from 0 to 100 as fast as possible to see how it will work. Even if that's not possible, go through the process of stretching as far as I can before branching out breadth-wise before the next milestone up the mountain climb.<br><br>I remember I changed it from express to koa because koa is awesome. And for no other reason than that. I should have realized that you have to play within level 0 until you are comfortable playing with it like that. That means it needs to be easy to move around and reshape.<br><br>I should have known that bull-board used express as a default and express was simpler and less lines of code, which ended up meaning that it was easier to work with, at least while I am still in the process of building the clay. LEVEL ZERO.<br>",
      "selected": "file1"
    },
    {
      "question": "When thinking of using one of the following:<br><br>git add .<br>git add -A<br><br>What might I use instead?",
      "answer": "git add -p<br><br>This might help me get into the habit of staging chunks of a file, which will lead to better commit messages.",
      "selected": "file1"
    },
    {
      "question": "When to use flexbox vs grid?",
      "answer": "Flexbox when you want your layout to flex.to your content.<br><br>Grid when you want everything to confirm to a more rigid structure.<br><br>Flexbox is great for a navbar.<br><br>Grid is more for when you want a layout where lots of pieces fit into exact places.",
      "selected": "file1"
    },
    {
      "question": "When trying to kill a process, but it won't, what steps should I take?",
      "answer": "\"<br>> Step 1:<br>Check the status of the process: (e.g., process is PID 58172)<br><br>ps aux | grep 58172<br><br>Example output:<br><br>root      58172  1.2  0.0      0      0 pts/0    Z   19:08   0:05 [yum]<br><br>{{c1::What does \"\"Z\"\" indicate in the process status?}}\"",
      "selected": "file1"
    },
    {
      "question": "When turning head to the left, which side of the traps will tighten?",
      "answer": "Right side",
      "selected": "file1"
    },
    {
      "question": "When using a TTY vs not using a TTY?",
      "answer": "<div><h3><b>\ud83d\udd39 When a program detects a TTY:</b></h3></div><br><div><ul><li><br><div>It <b>shows colors</b><b></b></div><br></li><li><br><div>It <b>uses grid layouts</b>, <b>interactive UIs</b>, and <b>animations</b><b></b></div><br></li><li><br><div>Think: eza, fzf, htop, less, vim</div><br></li></ul></div><br><div></div><br><div><h3><b>\ud83d\udd38 When&nbsp;</b></h3><h3><b>not</b></h3><h3><b>&nbsp;connected to a TTY:</b></h3></div><br><div><ul><li><br><div>Output is redirected (e.g., piped to a file or another command)</div><br></li><li><br><div>The program <b>disables formatting</b> (to avoid polluting logs)</div><br></li><li><br><div>Behavior is often plain, like one item per line or no color</div></li></ul></div>",
      "selected": "file1"
    },
    {
      "question": "When using a list or array or object where the objective is to have things sorted by time or a priority?",
      "answer": "Priority Queue",
      "selected": "file1"
    },
    {
      "question": "When using ctrl+f, how to cycle to next occurence&nbsp;",
      "answer": "Enter",
      "selected": "file1"
    },
    {
      "question": "When using delete, ie delete myObj['somekey'], what should I think about?",
      "answer": "Am I causing any side effects?",
      "selected": "file1"
    },
    {
      "question": "When you have foamy urine, what can that mean?",
      "answer": "Too much protein",
      "selected": "file1"
    },
    {
      "question": "When you say to someone something good about yourself, one of the other persons' personalities will be comparing to you, and will be thinking that compared to you they are worse.",
      "answer": "\"For example:<br><br>I say \"\"I am a good singer\"\"<br>Someone might hear this as \"\"you're not as good of a singer as me.\"\" or \"\"I'm better than you at singing.\"\"<br><br>This depends on what is going on in their mind at the time, and also their baseline state of minds.<br><br>\"",
      "selected": "file1"
    },
    {
      "question": "When you stand on one leg and collapse into your hip, what is happening? What does that lead to?",
      "answer": "Weak ab and glute, esp medial.<br><br>This will lead to knee extension and plantar flexion, leading to lateral toe-off",
      "selected": "file1"
    },
    {
      "question": "Where are the facet joints oriented throughout the spine?",
      "answer": "Coronal plane in the cervical.<br>Coronal plane in the thoracic then in the sagittal plane in the lumbar, and then coronal plane in the lowest part of the lumbar. L4-L5?",
      "selected": "file1"
    },
    {
      "question": "Where to set custom karabiner mods?",
      "answer": "~/.config/karabiner/assets/complex_modifications",
      "selected": "file1"
    },
    {
      "question": "Which Hallicus muscle doesn't have a counterpart (Longus, brevis)?",
      "answer": "Extensor Hallicus",
      "selected": "file1"
    },
    {
      "question": "Which ankle joint has dominance in the frontal plane?",
      "answer": "subtalar joint",
      "selected": "file1"
    },
    {
      "question": "Which ankle joint has dominance in the sagittal plane?",
      "answer": "tibio-talar joint,<br>Or the talocrural joint",
      "selected": "file1"
    },
    {
      "question": "Which ankle joint has dominance in the transverse plane and frontal plane?",
      "answer": "subtalar joint",
      "selected": "file1"
    },
    {
      "question": "Which ankle joint has dominance in the transverse plane?",
      "answer": "subtalar joint",
      "selected": "file1"
    },
    {
      "question": "Which direction do joints refer pain?",
      "answer": "Downward (distal)<br><br>Source: Human Locomotion, page 389 (Hip Osteoarthritis)",
      "selected": "file1"
    },
    {
      "question": "Which is deeper?<br><br>Gastroc or soleus?",
      "answer": "Soleus",
      "selected": "file1"
    },
    {
      "question": "Which muscle doesn't have a tendon?<br><br>$addToCard:(are there others?)",
      "answer": "Adductor magnus",
      "selected": "file1"
    },
    {
      "question": "Which muscle tendons flow through the malleolar groove of the fibula?",
      "answer": "Peroneal longus<br>Peroneal brevis",
      "selected": "file1"
    },
    {
      "question": "Which muscle tendons flow through the malleolar groove of the tibia?",
      "answer": "Tibialis Posterior<br>Flexor digitorum longus",
      "selected": "file1"
    },
    {
      "question": "Which muscles come together to form the iliotibial band?",
      "answer": "Gluteus Maximus<br>Gluteus Medius<br>Tensor Fasciae Latae",
      "selected": "file1"
    },
    {
      "question": "Which muscles have high amount of muscle spindles?",
      "answer": "Small rotators, Intertranverserii of the spine. Multifidii, rotator cuff.<br><br>These muscles are length transducers.<br><br>They are not contractile.",
      "selected": "file1"
    },
    {
      "question": "Which of the 3 parts of the spinal cord is for touch?",
      "answer": "Posterior column",
      "selected": "file1"
    },
    {
      "question": "Which part of piriformis should be treated?",
      "answer": "Distal piriformis is mostly tendon. In order to treat, massage the piriformis focus on the proximal section of the muscle, connecting to the sacrum.",
      "selected": "file1"
    },
    {
      "question": "Which part of the (3 parts of the) spinal cord is for motor function and for sensory information?",
      "answer": "Lateral and anterior column",
      "selected": "file1"
    },
    {
      "question": "Which parts of the intestine is iron absorbed?<br>",
      "answer": "duodenum and upper jujunum",
      "selected": "file1"
    },
    {
      "question": "Which vertebrae hold the false ribs?",
      "answer": "T8-T12",
      "selected": "file1"
    },
    {
      "question": "Which vertebrae hold the floating ribs?",
      "answer": "T11 T12",
      "selected": "file1"
    },
    {
      "question": "Who",
      "answer": "Quien",
      "selected": "file1"
    },
    {
      "question": "Why are \\0 and \\n typically the separators that should be used when handling data in a bash script?",
      "answer": "\\n is good for making things human-readable, and sometimes for debugging.<br>Sometimes the watch variables don't handle \\0 null characters very well. So we might want to separate things with a \\n. But sometimes that also fails, and so we might want to use a special character in that case.<br><br>But generally \\0 null characters are well-handled (and sometimes \\n newline characters), and so these should be generally used when you can. Something like pilcrow \u00b6 can be used, it is generally not processed automatically by other scripts that you might want to pipe into.",
      "selected": "file1"
    },
    {
      "question": "Why can't we have a flat architecture for OPs and SPs?",
      "answer": "Because the OPs need to take the input from the SPs and make the final order decisions, needs to be smart and determine if orders should cancel out each other, etc.<br><br>So SP needs to be underneath OP.",
      "selected": "file1"
    },
    {
      "question": "Why do I usually need to create an async init function for stuff requiring the file system?",
      "answer": "Because the file system is slow, we can't write or read from it very efficiently. So fs supplies a lot of different ways to deal with files and dirs. Because of the delay, if I am going to create an object that deals with files then I need to usually await it to initialize. This requires an init() function.",
      "selected": "file1"
    },
    {
      "question": "Why do escape sequences exist?",
      "answer": "\"<div>Because terminals are basically just fancy text interpreters. But over time, they learned how to:</div>",
      "selected": "file1"
    },
    {
      "question": "Why do the worlds best runners have longer Achilles Tendons?",
      "answer": "Because tendons are good sprint force generators.<br><br>On heel-strike they will shorten and then on toe-off they will lengthen like a spring and push off and generate force to propel the leg forward.",
      "selected": "file1"
    },
    {
      "question": "Why do we need a semicolon before an self-invoked function?",
      "answer": "\"Two reasons: javascript uses parens mainly for order of operations in math, and for function declarations. By putting a ; in front of a self-invoked function we are forcing the interpreter to see the opening paren ( in front of the self-invoking function prevents it from becoming an argument to something that might precede it.<div><br></div><div>The other reason is that if you had two files with self-invoking functions, and concatenated those files together they would be all put onto the same line with no separator. Adding a semi-colon in front will keep a separator in btwn.<br><div><br></div><div>https://stackoverflow.com/questions/7365172/semicolon-before-self-invoking-function#:~:text=Putting%20a%20semicolon%20before%20the,become%20confused%20with%20function%20application.<br></div></div>\"",
      "selected": "file1"
    },
    {
      "question": "Why does pandas suck?",
      "answer": "- It is an eager engine, meaning is executes operations immediately instead of waiting, like a lazy engine. This makes it difficult to optimize and make calculations in a smarter way.<br><br>- Missing values are set as NaN instead of NULL. <br>(This is because NumPy uses NaN and Pandas was built on top of NumPy.)<br>(If Pandas used Python\u2019s native None to represent missing values, Pandas would have to store columns using the <b>object data type</b> (which is a generic type for mixed data). This is because None is not a numeric value<br><br>\u2014it is a Python object. This means it couldn't work with numeric data types, such as int64 and float64. Object types are stored as pointers to Python objects, which results in slower processing and higher memory usage.)<br><br>- When Pandas uses an object dtype, it sacrifices a lot of the performance benefits of working with numeric data types (like int64 or float64), which are much faster and more memory-efficient than object types. This is because:</div><br><br>- Numeric types are stored in contiguous memory blocks and can be processed by highly optimized numerical libraries.<br><br>- Object types, on the other hand, are stored as pointers to Python objects, resulting in slower processing and higher memory usage.<br><br>- primitive data types, such as int64 and float64, are lighter weight, stored contiguously in memory (as opposed to Objects, which are stored elsewhere, and the pointers to the memory holding these objects has to be stored and followed. They also don't have to be garbage collected like objects do.",
      "selected": "file1"
    },
    {
      "question": "Why does the tibia rotate the same whether or not the talus rotates more or less, which will change depending on whether you have a high arch or not?",
      "answer": "Because the sub-talus joint is a torsion dissipator. So it absorbs that rotational force while the foot is on the ground during the gait cycle.<br><br>High-arch: will evert 4 degrees, but tibia will turn in 8 degrees.<br><br>Pronator: will evert 10 degrees, but tibia will only turn in 8 degrees.<br><br><br>Source: (YouTube) Clinical Servant Series, Dr Tom Michaud , Human Locomotion Part 1",
      "selected": "file1"
    },
    {
      "question": "Why is `poetry` a bad name for a project directory?",
      "answer": "Because it doesn't mean anything out-of-context.<br><br>It's better to add as much context to a name as possible, and then start to consolidate into a better name over time.<br><br>This is better because it preserves meaning. Whereas `poetry` only has meaning as a project directory name if seen in context, ie lightboxmediagroup/poetry, something like poetry-reporting, in order to distinguish it from the original, older project, is a better name.<br><br>Over time, the meanings and relations between things will evolve, and so will the name.",
      "selected": "file1"
    },
    {
      "question": "Why is it a good idea to have a setupLogger file in each module/workspace, even if you have something like @ktr-srt/logging setup?",
      "answer": "Because then I can set the logging level and other options in my config or env file and have a central file where I set global options for the logger which will work across all files, rather than having to set it up across every single file one-at-a-time.<br><br>For example, I can set an option to not print to file in my config/env file. Then when my program starts it will import and setup a logger, which I can then import from src/logger.js.",
      "selected": "file1"
    },
    {
      "question": "Why is my websocket connection http:// and not ws:// ?",
      "answer": "The initial parts of the connection are done through http, but then should switch over to ws or wss",
      "selected": "file1"
    },
    {
      "question": "Why is running so efficient and hard to burn calories with?",
      "answer": "When you walk you isometrically contract a lot of muscles. This allows the tendons to generate a lot of the force instead of the muscles and is why walking is so efficient and hard to burn calories with.<br><br>",
      "selected": "file1"
    },
    {
      "question": "Why is the following wrong/bad?<br><br>if (x instanceof Error) { ... }",
      "answer": "It will provide a false negative with a cross-realm (such as iframes, or node's vm module.)<br><br>ou can't rely on instanceof Error because there are places where an error comes from where it will no longer be an Error instance.<br><br>You need a way to check if it's reliable.<br><br>There is a current javascript proposal that should fix this: error.isError()",
      "selected": "file1"
    },
    {
      "question": "Why might having a parasite reduce bile?",
      "answer": "Because bile is bad for parasites. So many of them use mechanisms to try and reduce it in the host.",
      "selected": "file1"
    },
    {
      "question": "Why might it be a bad idea to move dataframes around?",
      "answer": "Lack of tooling. SQL is battle-tested and easier to debug, check transformed tables, check for missing data, etc. Files are hard to move around, keep track of. Think back to all of the csv utility tools I had to write.<br><br>They are loaded into RAM, and therefore heavy.<br><br>If you convert them to-and-from csv you might lose formatting for dates, timestamps.<br><br>Empty rows with empty cells, or issues might cause pandas to do tricks to fill in the missing data. For example, it might put a 0, when you wanted a 0.0.<br><br>psychpg2 retrieves numerical types as Decimal objects by default.<br>(This means that if I retrieve data from my neon table then floats will be converted to Decimals.)",
      "selected": "file1"
    },
    {
      "question": "Why might it be a good idea to name my id's like _id or ktr_id, or _id_ktr instead of simply id?",
      "answer": "Because it makes it less likely to avoid potential conflicts.<br><br>Example:<br><br>the tiktok.advertiser table there is a column already called `id`. So in my pipeline when I tried to add a id column it was conflicting. If, instead, I called my id column _id, there would be no conflict. Then later on down the pipeline I can clean up all of the names.<br><br>Lesson:<br><br>The more unique you name things the less likely there might be conflicts. This is in opposition to following convention. A downside of following all conventions like this is that you might run into conflicts when dealing with data from different sources.",
      "selected": "file1"
    },
    {
      "question": "Why might it be better to move all of the subProcedure config files outside the orderProcedure/types folders, and into the Project Root?",
      "answer": "I think...bcuz this makes more sense from a management point-of-view, and also it makes more sense when I realize that the database will also be storing all of this information.. So when I retrieve all data from the database it should be easy to access all of the config info, which should be stored similarly to the database, and not hidden/tucked into all of these subfolders.",
      "selected": "file1"
    },
    {
      "question": "Why might it not be a good idea to name directories like this:<br><br>-Demos<br>-Libraries<br>-Playground<br>-Projects",
      "answer": "\"In the command line, options start with -.<br><br>For example you cannot do \"\"mkdir -mydirectory\"\". You have to create it as another name like \"\"mkdir tmp\"\" and then \"\"mv tmp -mydirectory\"\"\"",
      "selected": "file1"
    },
    {
      "question": "Why might one use timestamp or datetime in the database schema instead of a string in iso format?",
      "answer": "In most databases, this allows for better querying, sorting, etc. This format is more supported.",
      "selected": "file1"
    },
    {
      "question": "Why might problems in the gut leads to skin issues?",
      "answer": "Leaky gut, allergies in blood, low zinc",
      "selected": "file1"
    },
    {
      "question": "Why would I ever want to use a technology like LibCST?",
      "answer": "For python:<br><br>Is it similar to an AST (Abstract Syntax Tree), but is lossless. It keeps all indents, comments, etc.<br><br>It might be useful when trying to refractor a large python codebase, while maintaining formatting.<br><br><div><b>It is useful for building custom linters, codemods (</b><b>automated code refactoring tools</b>&nbsp;)<b>, or static analysis tools.</b></div>",
      "selected": "file1"
    },
    {
      "question": "Window",
      "answer": "Ventana",
      "selected": "file1"
    },
    {
      "question": "Wonder",
      "answer": "preguntarse",
      "selected": "file1"
    },
    {
      "question": "Word meaning something that is overused, not original or fresh, of little importance",
      "answer": "Trite",
      "selected": "file1"
    },
    {
      "question": "X",
      "answer": "plex",
      "selected": "file1"
    },
    {
      "question": "Y",
      "answer": "yank",
      "selected": "file1"
    },
    {
      "question": "Ya no",
      "answer": "Not anymore",
      "selected": "file1"
    },
    {
      "question": "Yank the current line",
      "answer": "\"<div> \u2022 yy yanks the current line.</div>",
      "selected": "file1"
    },
    {
      "question": "Yank the entire file from the start (gg) to the env of the file",
      "answer": "<div>\u2022 ggVGy yanks the entire file from the start (gg) to the end (G).<br></div>",
      "selected": "file1"
    },
    {
      "question": "You are writing the Value&lt;T,E&gt; stuff in pure javascript for error handling.<br><br>Write the err() function.",
      "answer": "\"<pre><code>",
      "selected": "file1"
    },
    {
      "question": "You are writing the Value&lt;T,E&gt; stuff in pure javascript for error handling.<br><br>Write the ok() function.",
      "answer": "\"<pre><code>",
      "selected": "file1"
    },
    {
      "question": "You are writing the Value&lt;T,E&gt; stuff in pure javscript..<br><br>Write the flat map function (async).",
      "answer": "\"<pre><code>",
      "selected": "file1"
    },
    {
      "question": "You are writing the Value&lt;T,E&gt; stuff in pure javscript..<br><br>Write the map function (async).",
      "answer": "\"<pre><code>",
      "selected": "file1"
    },
    {
      "question": "You decide",
      "answer": "Tu decides",
      "selected": "file1"
    },
    {
      "question": "You did enough",
      "answer": "hiciste lo suficiente",
      "selected": "file1"
    },
    {
      "question": "You remind me of a young me",
      "answer": "me recuerdas a mi de joven",
      "selected": "file1"
    },
    {
      "question": "You want to see me? ",
      "answer": "\u00bfQuieres verme?",
      "selected": "file1"
    },
    {
      "question": "You wanted to see me? ",
      "answer": "\u00bfQuer\u00edas verme?",
      "selected": "file1"
    },
    {
      "question": "You went",
      "answer": "Tu fuiste",
      "selected": "file1"
    },
    {
      "question": "You were going to say<br>You were going to share<br>You were going to tell me",
      "answer": "Ibas a decirme algo",
      "selected": "file1"
    },
    {
      "question": "You will",
      "answer": "Ser\u00e1s",
      "selected": "file1"
    },
    {
      "question": "You're going to...",
      "answer": "Vas a...",
      "selected": "file1"
    },
    {
      "question": "Youtube website I can use on my laptop to download videos/audio?",
      "answer": "cnvmp3.com",
      "selected": "file1"
    },
    {
      "question": "Youtube: Go to 10%, 20%, 30% of the video",
      "answer": "1,2,3,etc",
      "selected": "file1"
    },
    {
      "question": "Youtube: Next video",
      "answer": "Shift+N",
      "selected": "file1"
    },
    {
      "question": "Youtube: go to beginning of video",
      "answer": "0",
      "selected": "file1"
    },
    {
      "question": "Youtube: increase/decrease volume by 5%",
      "answer": "up, down arrows",
      "selected": "file1"
    },
    {
      "question": "Youtube: mute / unmute video",
      "answer": "m",
      "selected": "file1"
    },
    {
      "question": "Z",
      "answer": "zip",
      "selected": "file1"
    },
    {
      "question": "Zorra",
      "answer": "Bitch; whore",
      "selected": "file1"
    },
    {
      "question": "[",
      "answer": "L square",
      "selected": "file1"
    },
    {
      "question": "[Bash]<br><br>In a bash script, what does the option -u do?<br><br>ie set -u",
      "answer": "-u treat unset variables as errors.<br><br>If we try and access a variable that doesn't exist then it's an error.",
      "selected": "file1"
    },
    {
      "question": "[Bash]<br><br>List all of the current key binding in your shell",
      "answer": "bindkey<br><br>(This will show all key sequences and the functions or widgets they are bound to.)",
      "selected": "file1"
    },
    {
      "question": "[Bash]<br><br>What does the -e option do in a script?<br><br>ie `set -e`",
      "answer": "-e exit immediately if any command fails.<br><br>Otherwise it will keep running.<br><br>Historically, there were two philosophies for debugging: 1. As soon as the program encounters an error it should exit.<br>2. The program should keep running until the end, or until terminated.",
      "selected": "file1"
    },
    {
      "question": "[Cursor]<br><br>focus chat",
      "answer": "CMD + L",
      "selected": "file1"
    },
    {
      "question": "[Cursorless]<br><br>cheatsheet",
      "answer": "Cursorless cheatsheet<br>Cursorless reference <br><br>Cursorless help<br>Cursorless docs",
      "selected": "file1"
    },
    {
      "question": "[Emacs]<br><br><div>Move <b>backward</b> a word</div>",
      "answer": "<div>Option + B on Mac</div><div><br></div><div>(Note, You might have to use Esc+B because option is usually mapped to insert special characters)</div>",
      "selected": "file1"
    },
    {
      "question": "[Emacs]<br><br><div>Move to <b>start</b> of line</div>",
      "answer": "<div>Ctrl + A</div>",
      "selected": "file1"
    },
    {
      "question": "[Emacs]<br><br>Delete from cursor to start of word",
      "answer": "Alt-Del<br><br>(M-Del in Emacs notation)",
      "selected": "file1"
    },
    {
      "question": "[JavaScript]<br><br><div>Can you use a dot (.) inside a key in a JavaScript object?</div>",
      "answer": "<div>Yes, but you cannot access it using dot notation. You must use bracket notation instead.</div><div><br></div><div>This makes things confusing.</div>",
      "selected": "file1"
    },
    {
      "question": "[JavaScript]<br><br><div>How do you access the value of a key containing a dot (.) in a JavaScript object?</div>",
      "answer": "\"<div>Use bracket notation. For example:</div><div><br></div><div>const obj = { \"\"callerInfo.filename\"\": \"\"test.js\"\" };<br>console.log(obj[\"\"callerInfo.filename\"\"]); // Works<br></div>\"",
      "selected": "file1"
    },
    {
      "question": "[JavaScript]<br><br>How to do Result(T,E) in pure JavaScript?",
      "answer": "\"// Conventionally called \"\"Result\"\"<br>function ok(value) {<br>&nbsp; &nbsp; return { ok: true, value }; <br>&nbsp; &nbsp; // equivalent to Result(T, never)<br>}<br><br>function err(error) {<br>&nbsp; &nbsp; return { ok: false, error }; <br>&nbsp; &nbsp; // equivalent to Result(never, E)<br>}\"",
      "selected": "file1"
    },
    {
      "question": "[JavaScript]<br><br>What is flatmap used for?",
      "answer": "\"When using map, sometimes the result will be nested. For example:<br><br>const result = map(parseJSON(jsonStr), getName);<br>// result = { ok: true, value: { ok: true, value: \"\"Luke\"\" } }<br>// BAD: it's a Result *inside* a Result<br><br>const result = flatMap(parseJSON(jsonStr), getName);<br>// result = { ok: true, value: \"\"Luke\"\" }\"",
      "selected": "file1"
    },
    {
      "question": "[Linux]<br><br>What if you're low on memory on a linux server,<br><br>ie my DigitalOcean ubuntu server.. I'm trying to build a docker image with only 2GB RAM but it gets killed because it runs out of RAM.",
      "answer": "add swap (a swapfile)<br><br>swap is like <b>emergency backup memory</b> on your hard drive or SSD.<br><div>When your system <b>runs out of physical RAM</b>, it can \u201cswap out\u201d inactive stuff from memory and store it temporarily on disk, so the system doesn\u2019t crash.</div><div><br></div><div><div>A <b>swapfile</b> is just a file on your disk that acts like pretend RAM.</div></div>",
      "selected": "file1"
    },
    {
      "question": "[Youtube]<br><br>Rewind 10 seconds",
      "answer": "j",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br><div>How can fascial asymmetry in the pelvic floor lead to coccyx deviation?</div>",
      "answer": "If one side of the fascia is tighter, it can pull the coccyx laterally through tension on the pelvic floor muscles and ligaments, especially the anococcygeal ligament.",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br><div>What is the deep posterior (thoracolumbar) fascia and how does it relate to the coccyx?</div>",
      "answer": "It\u2019s a multi-layered fascial sheath connecting the spine, sacrum, and glutes. It transmits load and tension through the sacrotuberous ligament, which anchors to the coccyx \u2014 thus indirectly influencing coccyx position and stability.",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br><div>What is the pelvic floor fascia and how does it affect the coccyx?</div>",
      "answer": "The pelvic floor fascia (endopelvic fascia) is a sheet of connective tissue enveloping pelvic organs and muscles. <br>It attaches to the coccyx and transmits muscular and fascial tension. <br>Asymmetry in this fascia can pull the coccyx off midline or increase tension on one side.",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br><div>What major muscles does the pelvic floor fascia envelop that attach to the coccyx?</div>",
      "answer": "Levator ani group (iliococcygeus and pubococcygeus), <br>coccygeus,<br>external anal sphincter.",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br><div>Which muscles blend with the thoracolumbar fascia and influence coccyx alignment?</div>",
      "answer": "Gluteus maximus, <br>latissimus dorsi, <br>erector spinae, <br>hamstrings (via the sacrotuberous ligament)",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br><div>Which muscles converge at the perineal body?</div>",
      "answer": "<b>p</b>ubococcygeus, <br><b>b</b>ulbospongiosus, <br><b>s</b>uperficial transverse perineal muscles, <br><b>d</b>eep transverse perineal muscles<br><b>e</b>xternal anal sphincter.<br><br>mnemonic:<br><blockquote><b>\u201cPeople Buy Super Delicious Eggs\u201d</b><b></b></blockquote><br>",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Another name for the Spring Ligament?",
      "answer": "plantar calcaneonavicular ligament",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Another name for the talocrural joint?",
      "answer": "tibio-talar joint",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>At the fibula, which is the more lateral biceps tendon?..<br><br>The short head or the long head?",
      "answer": "The short head",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Attachments of Tibialis Posterior ",
      "answer": "Medial cuneiform<br>Navicular <br>+ Others",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Attachments of soleus?",
      "answer": "Calcaneus tendon (Achilles) and fibula",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Compare the paths of the long head and the short head of the biceps femoris.<br><br>Which one starts more lateral/medial?<br>Which one starts more superior/inferior?<br>Which one is on top of the other?",
      "answer": "\"The short head starts more lateral than the long head. It travels underneath the long head towards the femur and attaches near the linea aspera, lateral supracondylar line. <br><br>The long head starts a bit more medial and inferior, and travels up towards the ischial tuberosity, and sacrotuberous ligament over the short head.<br><br><br><img src=\"\"biceps-femoris-lateral-long-and-short-heads.jpg.webp\"\"><br><br><img src=\"\"3_biceps_femoris_long_head-875x1024.png\"\"><br><br><img src=\"\"c09dc30816e6a98dde198d8245298109.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Does the flexor Hallicus Longus wrap to the inside or the outside of the foot?",
      "answer": "Inside",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>How many tendons flow in between the calcaneus/talus/navicular?",
      "answer": "4",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>How much can the diaphram weigh?",
      "answer": "Up to 10 lbs!",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>In the knot of Henry, which tendon is deep and which is superficial?",
      "answer": "(superficial) <b>Flexor Digitorum Longus</b><br><br>    flows on top of the <br><br>(deep) <b>Flexor Hallicus Longus</b>",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Levator Scapula attachment points on the vertebrae?",
      "answer": "Transverse processes C1-C4",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Mnemonic for muscles next to shin bone?",
      "answer": "<b>Tom Dick & Harry:</b><br><br>Tibialis Posterior <br>Flexor Digitorum Longus<br>Flexor Hallucis Longus",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Mnemonic for tissues (muscles, nerves, arteries, veins) inside of shin bone.",
      "answer": "<b>Tom, Dick And Very Nervous Harry</b><br><br>Tibialis Posterior <br>Flexor Digitorum Longus <br>Artery (Posterior Tibial)<br>Vein (Posterior Tibial)<br>Nerve (Tibial)<br>Flexor Hallucis Longus",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Muscles / tendons that attach on or near the head of the fibula?",
      "answer": "Biceps Femoris tendonS<br>Peroneus Longus<br>Extensor Digitorum Longus<br>Tibialis Anterior<br>Soleus",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Muscles on spine, near or around scapulae,<br>deep-to-superficial",
      "answer": "0. semispinalis thoracis<br>1. spinalis thoracis - longissimus thoracis - illiocostalis<br>2. splenius cervicus<br>3. serratus posterior superior<br>4. rhomboid major + minor<br>5. trapzius",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Muscles that attach to the coccyx?",
      "answer": "Coccygeus<br>Levator Ani group:<br>  iliococcygeus<br>  pubococcygeus<br>Gluteus maximus (deep fibers)<br>External anal sphincter (via fascia)",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Muscles that attach to the sternum?",
      "answer": "sternocleidomastoid<br>pectoralis major<br>sternalis<br>sternohyoid<br>sternothyroid",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Muscles that connect to the IT Band?",
      "answer": "Fibularis <br>Tibialis Anterior<br>Tensor Fasciae Latae<br>Glute",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Muscles under the recus femoris?",
      "answer": "\"vastus medialis + vastus lateralis<br>Then underneath is the vastus intermedius<br><br><img src=\"\"figure-5.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Name all bones in foot, not including tibia  and fibula.",
      "answer": "\"<img src=\"\"Foot-Bones-Labeled-Diagram.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Name of the bony prominence on the medial part of the foot?<br><br>(Not the medial malleolus)",
      "answer": "Navicular Tuberosity",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Number of muscles that attach near the head of the fibula.",
      "answer": "6",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Tibialis anterior vs tibialis Posterior pathways at the ankle? ",
      "answer": "\"One wraps in front of the medial malleolus, the other behind.<br><br><img src=\"\"Screenshot_2023-11-27-00-14-59-36_40deb401b9ffe8e1df2f1cc5ba480b12.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>What are all of the hip flexors?",
      "answer": "Iliacus<br>Psoas<br>Pectineus<br>Rectus femoris<br>Sartorius<br>Tensor Fascia Latae",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>What are inflare and outflare?",
      "answer": "\"The anterior aspect of the ilium moves inward/outward <br><br><img src=\"\"Pelvic_Malalignment.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>Where does plantaris attach?",
      "answer": "\"Across tibia and femur (knee) on lateral side above fibula.<br><br>And down towards heel of calcaneus.<br>However, it might also attach more proximal and act similar to the gastroc, but obviously different.<br><br><img src=\"\"Plantaris_muscle_-_posterior_view.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>mnemonic for remembers all tissues that attach to ischial tuberosity",
      "answer": "SIT And Be Strong, Quiet<br><br>Semimembranosus <br>Inferior Gemellus<br>SemiTendinosus<br>Adductor Magnus<br>Biceps Femoris Long Head<br>Sacrotuberous Ligament<br>Quadratus Femoris",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>muscles inferior from the spine of the scapula?",
      "answer": "infraspinatus<br>teres minor<br>teres major",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>pelvic floor fascia",
      "answer": "endopelvic fascia",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>what side of the body is the liver?<br>The diaphram?<br>",
      "answer": "liver and diaphram are mostly on the right side",
      "selected": "file1"
    },
    {
      "question": "[anatomy]<br><br>which tendons flow in between the calcaneus/talus/navicular?",
      "answer": "tibialis posterior<br>Tibialis Anterior <br>flexor hallicus brevis<br>flexor digitorum longus<br><br>( special note: flexor hallicus longus passes through the groove for the tendon of flexor hallucis longus, which is posterior to the Sustentaculum tali.",
      "selected": "file1"
    },
    {
      "question": "[aws]<br><br>When running `aws configure`,<br>in what order does aws CLI look for the token?",
      "answer": "1. looks for AWS_ACCESS_KEY_ID in .env<br>2. then looks for it in ~/.aws/credentials<br>3. finally looks for IAM role, if running EC2/Lambda/etc.",
      "selected": "file1"
    },
    {
      "question": "[bash] [zsh]<br><br>1. View all your current keybindings<br>2. View your custom key bindings",
      "answer": "1. bindkey<br>2. grep bindkey ~/.zshrc",
      "selected": "file1"
    },
    {
      "question": "[bash] [zsh]<br><br>What is zle?",
      "answer": "\"<div><div><h3><div style=\"\"font-weight: 400;\"\"><b><br class=\"\"Apple-interchange-newline\"\">Zsh Line Editor (ZLE)</b></div><div style=\"\"font-weight: 400;\"\"><blockquote>The system that handles everything you do while typing in your terminal&nbsp;<b>before</b>&nbsp;you press Enter.</blockquote><blockquote><br></blockquote></div></h3><h3><b>\ud83d\udd27 What ZLE Does</b></h3></div>",
      "selected": "file1"
    },
    {
      "question": "[bash] [zsh]<br><br>man pages for bindkey",
      "answer": "\"1. man zshzle \u2190 primary source (Zsh Line Editor)<br>2. man zshbuiltins \u2190 includes built-in commands<br><div><ul><li>",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>1. How do I redirect all terminal output to a log file, ie /tmp.log, instead of printing it to the terminal screen?<br><br>2. How do I reverse that back to normal?",
      "answer": "1. exec &gt;&gt; /tmp.log 2&gt;&amp;1<br><br>2. exec &gt; /dev/tty 2&gt;&amp;1<br><br>Bonus: Why don't we need to do `exec &gt;&gt; /dev/tty 2&gt;&amp;1` to return things back to normal?<br>",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>1. What is the curl command that mimics the browser so we are less likely to get blocked.<br>2. the github repo for it?",
      "answer": "curl-impersonate<br><br>github.com/lexiforest/curl-impersonate",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>Difference between `kill` and `kill -9`?",
      "answer": "kill sends a polite (TERM) signal to the process and allows it time to cleanup, etc.<br><br>kill -9 is not polite and will terminate the process right away.",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>Exit the current shell",
      "answer": "Ctrl+D",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>Fix this command:<br>fd -g '_ai/**/llm-merge_master'",
      "answer": "fd -g '**/llm-merge_master' _ai",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>How do I access the sudoers file?",
      "answer": "<pre><div><div><code>sudo visudo<br></code></div></div></pre>Don't edit /etc/sudoers directly. In order to avoid syntax errors. Otherwise this might cause issues.",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>How do these 3 fd command variations work?<br><br>1. fd -g '_ai' Dev<br><br>2. fd -g '*_ai*' Dev<br><br>3.&nbsp;fd -gp '**/_ai' Dev",
      "answer": "\"1. Looks in Dev folder for glob pattern '_ai'. In this case it finds it.<br><br>2. Looks in Dev folder for glob pattern '*_ai*'. It finds a lot of things that contain the substring \"\"ai\"\", such as&nbsp;/pytz/zoneinfo/America/Argentina/Buenos_Aires.<br><br>3. Looks in Dev folder for glob pattern '**/_ai', using -p flag, which tells it to use the pattern for the whole path. So it looks for and finds&nbsp;Dev/_ai/ successfully, as intended.\"",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>Log stdout to tmp.log but ignore errors using exec &gt;",
      "answer": "exec &gt; /tmp.log 2&gt; /dev/null",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>What does -x option do in a script?<br>ie set -x",
      "answer": "-x prints every command before executing, prefixed with a +",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>What does the following do?<br><br>set +a",
      "answer": "<div>Undoes `set -a`, which automatically will export all defined vars.</div><div><br></div><div>Turns off auto-export mode.<br><br><div>So future variables won\u2019t be automatically exported unless you do so manually with export.</div></div>",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>What does the following do?<br><br>set -a",
      "answer": "<div>Automatically export <b>all variables</b> defined from now on.</div><div><br></div><div><div>This means anything defined (like FOO=bar) will not only be a shell variable, but also an <b>environment variable</b>, which is important because some tools (like aider) only read env vars.</div></div>",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>What does this do?<br><br><pre><code>mkdir -p frontend/src/{components,hooks,utils,styles,pages,stores,types}</code></pre>",
      "answer": "It creates multiple directories: frontend/src/components, frontend/src/hooks, etc.",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>When writing a script what should you use instead of ls?<br><br>Why?",
      "answer": "Globs<br><br>Because ls spits out strange characters, newlines, spaces, etc",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>bindkey: <br>If I want to find a keycode for a specific key:",
      "answer": "ctrl+v, followed by the key.<br><br>For example: ctrl+v, then g will result in ^G, which means ctrl+g",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>echo alternative?",
      "answer": "printf",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>exec > /dev/tty 2>&1<br><br>What is risky about this?",
      "answer": "\"Risk:<br><br>It assumes /dev/tty is the original stdout/stderr.<br><br>If it\u2019s not (e.g., running from cron, script, or redirected context), this may fail or misroute output.<br><br><br>Safer alternative: Save and restore original file descriptors<br><br>exec 3>&1 4>&2         # Save original stdout (fd 1) and stderr (fd 2)<br>exec >> /tmp.log 2>&1  # Redirect stdout and stderr to a file<br><br># ... run commands ...<br><br>exec 1>&3 2>&4         # Restore original stdout and stderr<br><br>This approach doesn't assume anything about /dev/tty. It safely restores output streams regardless of environment.\"",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>find the luke folder, specifically the one under the user folder use fd",
      "answer": "fd -pg '**/user/luke'",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>set -eux<br><br>What is this?",
      "answer": "-x (<b>xtrace)&nbsp;</b>prints every command before executing, prefixed with a +<br><br>-e (<b>errexit)&nbsp;</b>exit immediately if any command fails.<br>Otherwise it will keep running.<br><br>-u (<b>no unset)&nbsp;</b>treat unset variables as errors.<br>If we try and access a variable that doesn't exist then it's an error.",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>swap last 2 characters (before cursor)",
      "answer": "CTRL+T",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>terminal-based tool for debugging dns stuff. Ie seeing if my website is connecting with the server IP address properly.",
      "answer": "dig<br><br>ie `dig strapi.ktrx.cards +short`",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>type in the last used word",
      "answer": "!$",
      "selected": "file1"
    },
    {
      "question": "[bash]<br><br>use the last used command",
      "answer": "!!",
      "selected": "file1"
    },
    {
      "question": "[biomechanics]<br><br>In regards to cervical rotation, how are the SCM and Trapezius related?",
      "answer": "The left SCM (especially the sternal portion) rotates head the right.<br><br>The trapezius also helps rotate the head to the right.",
      "selected": "file1"
    },
    {
      "question": "[biomechanics]<br><br>In regards to the shoulder girdle, how do the SCM and Trapezius relate?",
      "answer": "The SCM wants to tilt the shoulder girdle up into extension.<br><br>The Trapezius wants to pull it into flexion.<br><br>Antagonists in this action.",
      "selected": "file1"
    },
    {
      "question": "[browser] [youtube]<br><br>previous video",
      "answer": "Shift+P",
      "selected": "file1"
    },
    {
      "question": "[cloud] [aws]<br><br><div>What action allows public read access to S3 objects?</div>",
      "answer": "<div>s3:GetObject</div>",
      "selected": "file1"
    },
    {
      "question": "[cloud] [aws]<br><br><div>What is the correct format for an S3 object ARN in a bucket policy?</div>",
      "answer": "<div>arn:aws:s3:::bucket-name/* \u2014 this covers <b>all objects</b> in the bucket.</div>",
      "selected": "file1"
    },
    {
      "question": "[colima] [podman]<br><br>On MacOS why do you need to choose beetween podman and colima?",
      "answer": "\"<div><h3><b>\u26a0\ufe0f They each manage their own virtual machine and container ecosystem.</b></h3></div><div><img src=\"\"CleanShot 2025-05-06 at 12.47.15@2x.png\"\"></div><div><div><h3><b>\ud83d\udca5 Why you&nbsp;</b><b style=\"\"font-size: 20px;\"\">can\u2019t mix them</b></h3></div>",
      "selected": "file1"
    },
    {
      "question": "[containers]<br><br><div>What Linux kernel features do containers rely on?</div>",
      "answer": "\"<div><div><ol><li><br><div>\ud83e\uddf1 <b>Namespaces</b> \u2013 isolate process ID, network, filesystem, etc.</div><br></li><li><br><div>\u2696\ufe0f <b>Cgroups</b> \u2013 limit and account for resources (CPU, memory, etc.)</div><br></li><li><br><div>\ud83e\udde9 <b>OverlayFS/</b><b>UnionFS&nbsp;</b>\u2013 layered filesystems for image composition</div></li><li><br><div>\ud83d\udd10 <b>Capabilities</b> \u2013 fine-grained control of root privileges</div><br></li><li><br><div>\ud83d\udc64 <b>User namespaces</b> \u2013 allow unprivileged users to act like root inside container</div><br></li></ol></div><br><div></div></div><div><h2><b>\ud83d\udd20&nbsp;</b><b style=\"\"font-size: 20px;\"\">&nbsp;5-Letter Mnemonic:&nbsp;</b></h2><div><h2><b>\u201cNUCOC\u201d</b></h2><h2><b>&nbsp;(pronounced like \u201cnew-cock\u201d or \u201cnuke-ock\u201d if you want a cleaner image \ud83d\ude04)<br></b></h2></div></div><div><div><h2><b>\ud83e\udde0 Mental Image to Remember \u201cNUCOC\u201d:</b></h2></div><br><blockquote>Imagine a <b>new container</b> (NUCOC) being born, and it\u2019s wrapped in:</blockquote><br><div><ul><li><br><div>a <b>Namespace suit</b> (to stay isolated)</div><br></li><li><br><div>wearing <b>User privilege gloves</b> (to look like root, but isn\u2019t)</div><br></li><li><br><div>eating <b>Cgroup snacks</b> (carefully rationed CPU/memory)</div><br></li><li><br><div>standing on <b>Overlay blocks</b> (layered filesystems)</div><br></li><li><br><div>and protected by a <b>Capability shield</b> (so it can\u2019t nuke the host)</div><br></li></ul></div><br><div></div></div><div><br></div>\"",
      "selected": "file1"
    },
    {
      "question": "[containers]<br><br><div>docker-compose.yml</div><div><br></div><div>services:</div><div> &nbsp; &nbsp; strapi:</div><div> &nbsp; &nbsp; &nbsp; &nbsp; container_name: strapi</div><div> &nbsp; &nbsp; &nbsp; &nbsp; build: .</div><div> &nbsp; &nbsp; &nbsp; &nbsp; image: strapi-local:latest<br><br>What does this do?</div>",
      "answer": "\"We are building a service called \"\"strapi\"\".&nbsp;<br>We want the container to be named strapi, instead of a default name docker would give to it.<br><br>build: .<br>- tells docker compose to build the image from the Dockerfile<br><br>image: strapi-local:latest&nbsp;<br>- tells docker to name our built image strapi-local, with a default version tag of \"\"latest\"\"<br><br><br><br>\"",
      "selected": "file1"
    },
    {
      "question": "[containers]<br><br>Can you use colima with podman?",
      "answer": "\"<div><br>  Despite the presence of the --runtime podman flag in Colima, it\u2019s <b>non-functional</b> and has been <b>deprecated/ignored</b>.<br></div><br><div></div><br><div><br>  <div><h3><b>\ud83d\udd34 TL;DR:</b></h3></div><br>  <blockquote><b>Colima only supports Docker runtime.</b></blockquote><br>  <blockquote><b>Podman must be run via its own podman machine VM on macOS.</b></blockquote><br>  <blockquote><b>\ud83d\udee0\ufe0f Why?</b></blockquote><br>  <blockquote><br>    <div><br>      <ul><br>        <li><div><b>Colima</b> uses <a href=\"\"https://github.com/lima-vm/lima\"\">Lima</a> under the hood, which technically <i>can</i> run Podman.</div></li><br>        <li><br>          <div>However, Colima developers <b>never completed full Podman support</b>, due to:</div><br>          <div><br>            <ul><br>              <li><div>Lack of stable, cross-platform tooling</div></li><br>              <li><div>Compatibility issues with volumes, networking, and DNS on macOS</div></li><br>            </ul><br>          </div><br>        </li><br>        <li><div>That\u2019s why <code>colima start --runtime podman</code> shows:</div><br>          <blockquote>unsupported container runtime 'podman'</blockquote><br>        </li><br>      </ul><br>    </div><br>  </blockquote><br><br>  <div><h3><b>\u2705 What to Do Instead</b></h3></div><br>  <div>Use <b>Podman\u2019s native VM for macOS.</b></div><br>  <div><br>    <div>This works <b>independently of Colima</b> and gives you:</div><br>    <div><br>      <ul><br>        <li><div>Rootless containers</div></li><br>        <li><div>Docker-compatible CLI</div></li><br>        <li><div>Integration with Buildah and Skopeo</div></li><br>      </ul><br>    </div><br>  </div><br><br>  <div><h3><b>\ud83d\udfe1 What If I Still Want to Use Colima?</b></h3></div><br>  <div><br>    <p><b>\u2705 Stick with Colima + Docker:</b> This is the only stable and officially supported configuration. It integrates well with Docker CLI, Compose, and most development tools on macOS.</p><br>    <p><b>\u26a0\ufe0f Workarounds (not recommended or officially supported):</b></p><br>    <ul><br>      <li><br>        <b>Manual Lima + Podman setup:</b> You can bypass Colima and configure Lima manually using the <a href=\"\"https://github.com/lima-vm/lima/blob/master/examples/podman.yaml\"\">Podman example template</a>. However, you'll lose Colima's CLI conveniences.<br>      </li><br>      <li><br>        <b>Use Podman CLI with Docker alias:</b> Install Podman via Homebrew, start its VM with <code>podman machine init/start</code>, and optionally alias <code>docker=podman</code>. This allows partial Docker CLI compatibility but may break Compose and volume usage.<br>      </li><br>    </ul><br>  </div><br></div>\"",
      "selected": "file1"
    },
    {
      "question": "[containers]<br><br>What is CRI-O?",
      "answer": "\"Cree Runs In Open <br><br>\"\"Container Runtime Interface - Open\"\"<br><br>- it's not Linux-based<br>- it's kubernetes-based<br><br><div><b>CRI-O</b> is a lightweight, production-ready container runtime that implements the <b>Kubernetes Container Runtime Interface (CRI)</b> and uses <b>OCI-compliant containers</b> (Open Container Initiative).</div><br><div><ul><li><br><div>It\u2019s built to <b>replace Docker in Kubernetes clusters</b><b></b></div><br></li><li><br><div>Designed to <b>run containers</b> without the Docker daemon</div></li></ul></div><br><div><h3><b>\ud83e\uddf1 Architecture:</b></h3></div><br><div><ul><li><br><div>CRI-O plugs into Kubernetes via the <b>CRI API</b><b></b></div><br></li><li><br><div>Internally uses:</div><br><div><ul><li><br><div><b>runc</b> to run containers</div><br></li><li><br><div><b>conmon</b> to manage logs and container lifecycle</div><br></li><li><br><div><b>image and storage libraries</b> shared with Podman/Buildah</div></li></ul></div></li></ul></div><div><div><h3><b>\u2705 Benefits:</b></h3></div><br><div><ul><li><br><div>Lightweight alternative to Docker in Kubernetes</div><br></li><li><br><div>Fewer moving parts = better performance and security</div><br></li><li><br><div>Shared codebase with Podman and Buildah</div><br></li></ul></div><br><div><br></div><br><div><h3><b>\u274c What It\u2019s&nbsp;</b><b style=\"\"font-size: 20px;\"\">Not</b></h3></div><br><div><ul><li><br><div>Not a CLI tool \u2014 it runs as a system service under Kubernetes</div><br></li><li><br><div>Not useful outside Kubernetes environments</div><br></li></ul></div><br><div></div></div>\"",
      "selected": "file1"
    },
    {
      "question": "[containers]<br><br>Why use `set -eux` ?",
      "answer": "Because it prevents containers from being partially built (-e). If a command fails then the layer doesn't get cached as successful.<br><br>-u is set so that if you reference an environment variable you forgot to define , then it fails loudly.<br><br>-x prints each command so that build logs are traceable.",
      "selected": "file1"
    },
    {
      "question": "[cursorless]<br><br>expand select to ( )",
      "answer": "Take round",
      "selected": "file1"
    },
    {
      "question": "[data science] [machine learning] [xgboost]<br><br>What are 2 ways to handle categorical features in XGBoost?",
      "answer": "1) <b>Traditional Way:</b><br><br>pd.get_dummies(df, columns=['categorical_column])<br><br>2) <b>New Way:</b><br><code><br><pre><br>X['category'] = X['category'].astype('category]<br>model = xgb.XGBClassifier(tree_method='hist')<br>model.fit(X, y)<br></pre><br></code>",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>CatBoost handles categorical features natively.<br><br>What does this mean, and why is it an advantage?",
      "answer": "CatBoost can process categorical features directly without requiring manual preprocessing like one-hot encoding or label encoding. It uses techniques such as target statistics and ordered permutations to convert categories into numerical representations during training.<br><br>Why it\u2019s an advantage:<br><br>1. No manual preprocessing needed \u2013 Saves time and reduces human error.<br><br><br>2. Avoids overfitting \u2013 By using ordered target statistics, it prevents target leakage.<br><br><br>3. More efficient \u2013 Uses memory and compute more effectively than one-hot encoding, especially with high-cardinality features.<br><br><br>4. Better performance \u2013 Often leads to improved model accuracy compared to generic encoding methods.",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>CatBoost uses ordered boosting to prevent target leakage.<br><br>1. What is ordered boosting?<br><br><br>2. How does it prevent target leakage",
      "answer": "1. Ordered Boosting is a training technique where, instead of using the entire dataset at once, CatBoost simulates online learning by training each new data point using only the data points that came before it. This is done using permutations of the dataset and averaging the results to reduce variance.<br><br><br>2. It prevents target leakage by ensuring that the prediction for a given data point is not influenced by its own target label or by data points that come after it in the permutation. This mimics a real-world scenario where future information is unavailable, thereby avoiding information leakage that can lead to overly optimistic model performance.",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>What are odds? What is probability",
      "answer": "<b>odds</b><br>The ratio of something happening : that thing not happening.<br>e.g. my team winning / my team not winning<br><br><b>probability</b><br>The ratio of something happening : every other possibility<br>e.g. my team winning / my team winning &amp; not winning",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>What are the 2 ways of calculating odds?",
      "answer": "1. From counts.<br>2. From probabilities.<br><br>ie If your team won 5 games and didn't win 3:<br><br><b>Using counts:&nbsp;</b><br>Odds = 5/3 = 0.625<br><br><b>Using probabilities:<br></b>Probability of winning = 5/8<br>Probability of not winning = 3/8<br>Odds = (5/8)/(3/8) = 5/3 = 0.625",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>What are the 3 ways to determine if an odds ratio (or log(odds ratio)) is statistically significant?",
      "answer": "\"<img src=\"\"CleanShot 2025-06-11 at 14.14.11@2x.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>What does a gradient look like visually?",
      "answer": "\"<img src=\"\"CleanShot 2025-06-11 at 13.09.58@2x.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>What is the formula for a gradient?",
      "answer": "\"<img src=\"\"CleanShot 2025-06-11 at 13.09.04@2x.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>What is the logit function?",
      "answer": "\"<img src=\"\"CleanShot 2025-06-11 at 13.47.21@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 13.47.09@2x.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>When using something like XGBoost for classification, why do we use log(odds)?",
      "answer": "When determining where to split the tree, we have to add the resulting residuals of each model together.<br><br>But we can't add probabilities together because they would increase past 1.<br><br>So instead, we use log odds.",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>Why does <b>log odds</b> exist?",
      "answer": "\"<img src=\"\"CleanShot 2025-06-11 at 13.43.40@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 13.43.40@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 13.43.33@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 13.43.45@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 13.44.14@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 13.44.37@2x.png\"\"><br><br><img src=\"\"CleanShot 2025-06-11 at 13.50.14@2x.png\"\"><br><img src=\"\"CleanShot 2025-06-11 at 13.50.23@2x.png\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[data science]<br><br>Why is CatBoost more resistant to overfitting on small datasets?",
      "answer": "CatBoost is more resistant to overfitting on small datasets due to:<br><br>1. Ordered Boosting \u2013 Prevents target leakage by ensuring that each model is trained only on past data in a randomized order, avoiding using future labels.<br><br><br>2. Built-in Regularization \u2013 Incorporates techniques like L2 regularization and shrinkage (learning rate) to reduce model complexity.<br><br><br>3. Efficient Categorical Feature Handling \u2013 Uses target statistics without target leakage by applying permutations and Bayesian averaging, avoiding overfitting to noise in categorical data.<br><br><br>4. Oblivious Trees \u2013 Uses symmetric decision trees (same split across each level), which limits model flexibility and reduces the chance of over fitting compared to asymmetric trees.",
      "selected": "file1"
    },
    {
      "question": "[docker]<br><br><div>&nbsp;restart: unless-stopped<br><br>What other options are there?</div><br>+ What is the default?",
      "answer": "no (default)<br>always<br>on-failure",
      "selected": "file1"
    },
    {
      "question": "[docker]<br><br>How to make sure build logs are traceable?",
      "answer": "use `set -x`",
      "selected": "file1"
    },
    {
      "question": "[docker]<br><br>In a docker-compose file, what does this mean?<br><br>ports:<br>&nbsp; - 8081:8080",
      "answer": "The container's port 8080 is being mapped to the host's port 8081",
      "selected": "file1"
    },
    {
      "question": "[docker]<br><br>Why doesn't lsof work sometimes with docker?<br><br>ie <br>lsof -i :5432<br><br>What to use instead of lsof?<br>",
      "answer": "Because lsof only shows processes on the host. Docker runs, ie postgres, inside of a container.<br><br>Unless you are running docker with host networking. Which you should not.<br><br>Instead use a different tool:<br><br>ss<br>netstat<br>",
      "selected": "file1"
    },
    {
      "question": "[emacs]<br><br><div>Delete <b>backward</b> word</div>",
      "answer": "<div>Ctrl + W</div>",
      "selected": "file1"
    },
    {
      "question": "[emacs]<br><br><div>Delete entire line</div>",
      "answer": "<div>Ctrl + U</div>",
      "selected": "file1"
    },
    {
      "question": "[emacs]<br><br><div>Delete from cursor to end of word</div>",
      "answer": "<div>Alt + D</div><br><br>(Written as M-D in Emacs notation)",
      "selected": "file1"
    },
    {
      "question": "[emacs]<br><br><div>Move <b>forward</b> a word</div>",
      "answer": "<div>Option + F on Mac</div><br><br></div>(Note, You might have to use Esc+F because option is usually mapped to insert special characters)</div>",
      "selected": "file1"
    },
    {
      "question": "[emacs]<br><br><div>Move to <b>end</b> of line</div>",
      "answer": "<div>Ctrl + E</div>",
      "selected": "file1"
    },
    {
      "question": "[git] what git command can be used to check why a directory or file is being ignored?",
      "answer": "git check-ignore -v path/to/directory",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>(base) \u279c&nbsp; util git:(main) git push -u origin main<br>[0208/202543.928687:ERROR:node_main.cc(135)] Node.js environment variables are disabled because this process is invoked by other apps.",
      "answer": "Check to make sure I am pushing to github.com-luketych and not github.com",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>1. What does `git clean` do?<br>2. What are some common git clean examples?",
      "answer": "\"It is used to remove untracked files and directories from your working directory.<br><br>This helps you clean up files that are not being tracked by Git (i.e. files not added with git add), such as build artifacts, temporary files, or generated logs.<br><br><b><u>Common Usage</u></b><br><br><b>git clean -n:</b><br>Dry run \u2013 shows what would be deleted without actually deleting anything.<br><br><b>git clean -f:</b><br>Force \u2013 actually deletes the untracked files.<br><br><b>git clean -fd:</b><br>Deletes untracked files and directories.<br><br><b>git clean -fx:</b><br>Deletes untracked files including files ignored by .gitignore.<br><br><b>git clean -fdx:</b><br>Deletes untracked files and directories including ignored ones.<br><br>---<br><br><b><u>Examples</u></b><br><br># Preview what will be deleted<br>git clean -n<br><br># Remove untracked files<br>git clean -f<br><br># Remove untracked files and directories<br>git clean -fd<br><br># Remove all untracked files, including ignored ones<br>git clean -fdx<br><br>Warning: git clean is permanent. It doesn\u2019t move files to the trash \u2013 they\u2019re gone unless you have a backup. Always use -n first to see what will be deleted.<br><br>\"",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>3 Ways to add multi-line commit messages?",
      "answer": "\"1) git commit<br>(this will open a default text editor).<br><br>2) git commit -m \"\"Line 1\"\" -m \"\"Line 2\"\"<br><br>3) git commit -F- &lt;&lt;EOF <br>line 0<br>line 1<br>line 2<br>EOF\"",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br><div>If your working directory and staging area have become messy (e.g., with many untracked or modified files), <b>this</b> command resets everything to match the last committed state.</div>",
      "answer": "<div>git restore -WS .</div>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>After abandoning a commit I haven't yet pushed to a remote repo using `git reset HEAD`<br><br>..what do I do next?",
      "answer": "git fetch origin<br>git log origin/main..HEAD<br><br>This checks the log of the current local HEAD against origin/main. If both are the same then there will be no difference.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Change name of current branch.",
      "answer": "git branch -m new-name<br><br>THEN<br>git push -u origin old-name<br><br>AND THEN MAYBE <br>git push origin --delete old-name",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Compare the staging area with the last commit",
      "answer": "git diff --staged <br><br>git diff --cached",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Delete all uncommitted files and directories.",
      "answer": "git clean -fd. (f stands for force, d for directories)<br>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Difference between git restore -W and git restore -S",
      "answer": "\"<table><tbody><tr><th>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Difference between these 2?<br><br>git diff --name-status refactor..HEAD<br>git diff --name-status HEAD..refactor",
      "answer": "The first shows the files added, deleted, modifed in order to go from &lt;b&gt;refactor&lt;/b&gt; to &lt;b&gt;HEAD&lt;/b&gt;.<br><br>The second shows the files added, deleted, modified in order to go from &lt;b&gt;HEAD&lt;/b&gt; to &lt;b&gt;refactor&lt;/b&gt;.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Discard all changes to tracked files.<br><br>Delete all untracked files and folders.",
      "answer": "git restore .<br>git clean -fd",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Empty folders are not added to the git repo. What if I need empty folders as part of a data pipeline?",
      "answer": "Add a .gitkeep file into the folders.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Git command that can get:<br>- size<br>- num objects<br>- plus more",
      "answer": "git count-objects -vH<br><br>-v is verbose<br>-H is human-readable",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>How do I remove a folder (using git restore) from the staging area before pushing a commit?",
      "answer": "<div>1. git restore --staged (or -S) folder/</div><div><br></div><div>2. verify changes:&nbsp;</div><div>git status</div><div><br></div><div>3. make a new commit:&nbsp;</div><div>git commit</div>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>How to stage new, untracked files?",
      "answer": "git add .<br><br>(But it won't stage deletions)",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>If I have leftover directories that aren't being removed..<br><br>What might be happening?<br><br>(Assume we think that the directories are untracked).",
      "answer": "Git does not track directories. It only tracks files inside of the directories.<br><br>1. `git status` to check if the directory is untracked.<br>2. Use `git clean -fdn` to remove both untracked files and untracked directories. (-n option to do a clean run because this command is dangerous.)<br>3. git check-ignore -v path/to/directory",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>If you've already added and committed (but not pushed) files you don't want,  how do you reverse that?<br><br>2 methods.<br><br>Bonus: Why not use git restore?",
      "answer": "1. git rm -r --cached .<br><br>2. git reset HEAD~<br><br>Bonus: Because git restore won't remove the files from git's history. It just unstages or resets its contents.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Instead of using<br>`git stash --include-untracked`<br>what else can you use?<br><br>ie what else can you use to get a similar effect by using git clean?",
      "answer": "1. git clean -fdxn<br><br>(Always use -n because you want to see what you are doing before you do it.)<br><br>Then you can do <br>2. git clean -fdx",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Oh shit! You've accidentally commited to the wrong branch. (How to fix this not using cherry-pick?)",
      "answer": "\"<pre><code><span style=\"\"color: rgb(153, 153, 153);\"\"># undo the last commit, but leave the changes available</span><br>git reset HEAD~ --soft<br>git stash<br><span style=\"\"color: rgb(153, 153, 153);\"\"># move to the correct branch</span><br>git checkout name-of-the-branch-the-commit-should-have-been-on<br>git stash pop<br>git add . # or add individual files<br>git commit -m <span style=\"\"color: rgb(145, 158, 107);\"\">\"\"your message here\"\"</span>;<br><span style=\"\"color: rgb(153, 153, 153);\"\"># now your changes are on the correct branch</span></code></pre>\"",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Remove a file from the staging area, and tell git to delete it from the repo on the next commit.",
      "answer": "git rm --cached &lt;file&gt;<br><br>Note: it's history will still exist, so in past commits the file/folder will still be there.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Remove a file from the staging directory, but keep it in the working directory.<br><br>If it's already being tracked then keep tracking it.<br><br>In other words: \u201cDon\u2019t commit this change yet, but still track this file in the future.\u201d",
      "answer": "git restore --staged &lt;file&gt;",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Remove a folder from remote repo but keep it in working directory (locally).<br><br>(Hint: use git rm)",
      "answer": "\"git rm -r --cached path/to/folder<br><br>git commit -m \"\"Remove folder from remote but keep locally\"\"<br><br>git push origin main\"",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Similar to a hotfix branch, but not urgent..?",
      "answer": "chore",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Tell me about this command:<br><br>git switch --detach origin/main",
      "answer": "This is the same as:<br><br>git switch origin/main, since it's a remote branch it will be detached anyways.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>What are the steps to do a clean reset to match the remote?<br><br>(Use git restore)",
      "answer": "1. git fetch origin<br>2. git restore -WS .<br>3. git clean -d --force<br>4. git switch --detach origin/main<br>5. git switch -C main<br><br>1) \u2022 Ensures you\u2019re working with the latest remote data.<br>2) \u2022 Discards all uncommitted changes and staged files, returning to the latest commit.<br>3) \u2022 Removes all untracked files and directories.<br>4) \u2022 Checks out the remote-tracking branch in a detached HEAD state, so you're pointing at exactly what's on the remote.<br>5) \u2022 Resets (or creates) your local main branch to match the current commit (ie origin/main), and switches to it.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>What does this do?<br><br>git restore -WS .",
      "answer": "Discards:<br><br> all uncommitted changes<br> And all staged files, <br><br>returning to the latest commit.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>What if you want to make one small change without a comment?<br>(Warning: don't do this if it has already been pushed up to a repo.)",
      "answer": "\"<pre><code><span style=\"\"color: rgb(153, 153, 153);\"\"># make your change</span><br>git add . # or add individual files<br>git commit --amend --no-edit<br><span style=\"\"color: rgb(153, 153, 153);\"\"># now your last commit contains that change!</span><br><span style=\"\"color: rgb(153, 153, 153);\"\"># WARNING: never amend public commits</span></code></pre>\"",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>What is a detached HEAD state?",
      "answer": "You are no longer working on a branch.<br><br>Instead, you are directly viewing or modifying a specific commit.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>What is git restore?",
      "answer": "\"It's used to undo changes in your working directory or staging area.<br><br>It's hard to remember because it doesn't seem to make sense.<br><br>But it's like telling git \"\"get me a clean copy from the repo or index and overwrite my current file.\"\"<br><br>Examples:<br><br>git restore file.txt<br>Discard local changes to file.txt (reset it to last commit)<br><br>git restore --staged file.txt<br>Unstage file (move it from staged back to working directory without losing edits)<br><br>git restore --source=COMMIT_ID file.txt<br>Restore file.txt from a specific commit.<br><br>git restore .<br>Restores every file in the current directory and all subdirectories to their last committed state (HEAD).<br><br>git restore -WS<br>(shorthand for git restore --source=HEAD --worktree --staged .)\"",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>What is the difference between git clean and git restore?",
      "answer": "<b>git restore</b><br><br>Restores modified tracked files to the last commit.<br><br>Does not touch untracked or ignored files.<br><br>Think of it as: \u201cUndo changes to files Git is already tracking.\u201d<br><br><b>git clean</b><br><br>Deletes untracked files and directories.<br><br>Useful for getting rid of leftover files (like compiled binaries, temp files, etc).<br><br>Think of it as: \u201cClean up things Git doesn\u2019t know about.\u201d<br>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>When to use `git add -A`?",
      "answer": "git add -A is a combination of the following:<br>1) git add .&nbsp; (stages new and modified files in the current dir and subdirs)<br>2) git add -u&nbsp; (stages modifications and deletions for tracked files)",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>When would you use both git restore and git clean?",
      "answer": "Typical used together<br><br>If you want to reset everything in your working directory (like a clean slate):<br><br>git restore .<br>git clean -fd<br><br>This combination:<br><br>Discards all changes to tracked files.<br><br>Deletes all untracked files and folders.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>Which command messes with the commit history?<br><br>git restore<br><br>git reset",
      "answer": "git reset",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>`git add -A` is a combination of 2 git commands.&nbsp;<br>What are they?",
      "answer": "git add -u<br>&amp;&amp; git add .",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>git reset --soft HEAD~1<br>vs.<br>git reset --mixed HEAD~1<br>vs.<br>git reset --hard HEAD~1",
      "answer": "\"git reset --soft HEAD~1   <br># Move HEAD back 1 commit; keep all changes staged<br><br>git reset --mixed HEAD~1  <br># Move HEAD back 1 commit; keep changes unstaged<br><br>git reset --hard HEAD~1   <br># Move HEAD back 1 commit; discard all changes<br><br><table><tbody><tr><th>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>git reset:<br><br>- soft vs mixed vs hard<br><br>- how to use git reset?",
      "answer": "<table><tbody><tr><th><br><div><b>Command</b></div><br></th><th><br><div><b>What it does</b></div><br></th><th><br><div><b>Affects</b></div><br></th><th><br><div><b>Typical Use Case</b></div><br></th></tr><tr><td><br><div>git reset --soft &lt;commit&gt;</div><br></td><td><br><div>Move HEAD to the specified commit. Keep changes <b>staged</b>.</div><br></td><td><br><div>\u2705HEAD \u274cIndex \u274cWorking Dir</div><br></td><td><br><div>Keep your code and staging, just rewind the commit</div><br></td></tr><tr><td><br><div>git reset --mixed &lt;commit&gt; (default)</div><br></td><td><br><div>Move HEAD and unstage the changes. Keep them in the working directory.</div><br></td><td><br><div>\u2705HEAD \u2705Index (cleared) \u274cWorking Dir</div><br></td><td><br><div>Want to unstage files but keep your changes</div><br></td></tr><tr><td><br><div>git reset --hard &lt;commit&gt;</div><br></td><td><br><div>Move HEAD and <b>erase everything</b> back to the specified commit.</div><br></td><td><br><div>\u2705HEAD \u2705Index \u2705Working Dir</div><br></td><td><br><div>Revert everything \u2014 use with caution</div></td></tr></tbody></table>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>git restore<br>vs<br>git reset",
      "answer": "git restore affects the working directory.<br>It's used to discard uncommitted changes in your files.<br><br>git reset affects the staging area and/or commit history.<br>It is used to move pointers (branches, HEAD), and optionally modify staged or working files.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>git rm -r folder<br>vs<br>git rm -r --cached folder",
      "answer": "git rm -r folder removes the folder from tracking and also removes it from your local working directory.<br><br>git rm -r --cached folder removes the folder from tracking, but doesnt remove the file from your local working directory.",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>use <b>git log</b> to compare commits in:<br>local repo vs remote repo.<br><br>ie I want to see commits that are on my local machine but not on the remote repo.",
      "answer": "<i>git fetch origin</i><br><b>git log origin/main..HEAD</b>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>use git rev-list to count number of commits in main",
      "answer": "<div>git rev-list --count main</div>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>use git rev-list to get last 5 commits",
      "answer": "<div>git rev-list HEAD --max-count=5</div>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>use git rev-list to list all commits in main",
      "answer": "<div>git rev-list main</div>",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>what do the following do?<br>git reset --soft<br>git reset --mixed",
      "answer": "soft: Undo commit but keep changes in the staging area.<br><br>mixed: Undo commit, but keep files in the working directory. (This is the default when you do `git reset`)",
      "selected": "file1"
    },
    {
      "question": "[git]<br><br>what does `git reset --soft &lt;COMMIT&gt;` do?",
      "answer": "It moves the current branch (your HEAD) to another commit.<br>It moves the index to match that commit, but leaves the working directory unchanged.<br><br>Example:<br>git reset --soft HEAD~1<br>This undoes the last commit, but all changes from that commit will still be staged.",
      "selected": "file1"
    },
    {
      "question": "[iTerm]<br><br>How do you change the tab title in iTerm, using only the keyboard?",
      "answer": "\"echo -ne \"\"\\033]1;My New Title2\\a\"\"\"",
      "selected": "file1"
    },
    {
      "question": "[iTerm]<br><br>Shift+Cmd F",
      "answer": "Global search",
      "selected": "file1"
    },
    {
      "question": "[jj]<br><br>What if I want to just start a new change, and forget what I was doing for a while?<br><br>Or, say I clone a new repo and want to just start working without having to understand the context?",
      "answer": "jj new main<br>OR<br>jj new trunk()",
      "selected": "file1"
    },
    {
      "question": "[linux]<br><br>What is CRIU?",
      "answer": "\"\"\"Checkpoint Restore In Userspace\"\"<br><br><div><b>CRIU</b> allows you to <b>freeze a running Linux process</b>, save it to disk, and <b>resume it later</b>, even on another machine.</div><br><div><ul><li><br><div>Think of it like <b>\u201cpause and save\u201d</b> for containers or processes.</div><br></li><li><br><div>Originally built for high-performance computing (HPC), now used in some container runtimes.</div></li></ul><div><div><h3><b>\ud83d\udee0\ufe0f Key Use Cases:</b></h3></div><br><div><ul><li><br><div>Live migration of containers (move a running container to another host)</div><br></li><li><br><div>Fast startup by restoring pre-warmed containers</div><br></li><li><br><div>Process snapshotting in debugging or fault tolerance</div></li></ul><div><div><div><h3><b>\u2699\ufe0f How It Works with Containers:</b></h3></div><br><div><ul><li><br><div>Tools like <b>Podman</b>, <b>LXC</b>, and <b>containerd</b> can integrate CRIU for container checkpoint/restore</div></li></ul><div>Example:</div><div>podman container checkpoint my-container<br>podman container restore my-container<br></div></div></div><br><div><h3><b>\u26a0\ufe0f Limitations:</b></h3></div><br><div><ul><li><br><div>Only works on <b>Linux</b> with <b>kernel support</b><b></b></div><br></li><li><br><div>Doesn\u2019t support all container features (e.g., GPUs, some mounts)</div><br></li><li><br><div>Complex to set up; rarely used in general DevOps workflows</div></li></ul></div></div></div></div></div>\"",
      "selected": "file1"
    },
    {
      "question": "[macos] [finder]<br><br>open Utilities folder",
      "answer": "Shift-CMD-U",
      "selected": "file1"
    },
    {
      "question": "[math]<br><br>Difference between dot-product and cross-product?",
      "answer": "\"<img src=\"\"Visual Representation of Cross Product a \u00d7 b = Area.png\"\"><br><div>&lt;p style=\"\"font-size: 0.8em; color: gray; margin-top: 4px;\"\"&gt;</div><div>This diagram shows how the dot product of two vectors is calculated geometrically:&nbsp;Red: Vector a,&nbsp;Green: Vector b,&nbsp;Blue: The projection of b onto a,&nbsp;Dashed line: The perpendicular dropped from b to a.</div><div>&lt;/p&gt;</div><div><br></div><b>dot-product</b> is a scalar of how much 2 vectors both point the the same direction.<br>This number will be highest when the 2 vectors point in the exact same direction. If they are perpendicular then the result will be 0.<br><br><br>",
      "selected": "file1"
    },
    {
      "question": "[medicine]<br><br>Name of inflamed lymph system in penis",
      "answer": "<h1>Lymphangiosclerosis</h1>",
      "selected": "file1"
    },
    {
      "question": "[nodejs]<br><br>Fields inside of package.json:<br><br><table><tbody><tr><th><br><div><b>Field</b></div><br></th><th><br><div><b>Purpose</b></div><br></th></tr><tr><td><br><div>main</div><br></td><td><br><div><br></div><br></td></tr><tr><td><br><div>module</div></td><td><br></td></tr><tr><td><br><div>exports</div></td><td><br></td></tr><tr><td><br><div>types</div><br></td><td><br><div><br></div></td></tr></tbody></table>",
      "answer": "<table><tbody><tr><th><div><b>Field</b></div></th><th><div><b>Purpose</b></div></th></tr><tr><td><div>main</div></td><td><div>Default entry point for CommonJS (require())</div></td></tr><tr><td><div>module</div></td><td><div>Entry point for ES modules (used by bundlers like Rollup, Webpack)</div></td></tr><tr><td><div>exports</div></td><td><div>Explicitly define imports/exports for different environments/formats</div></td></tr><tr><td><div>types</div></td><td><div>Entry point for TypeScript definitions</div></td></tr></tbody></table>",
      "selected": "file1"
    },
    {
      "question": "[nushell]<br><br>how do I do multiline commands?",
      "answer": "for example:<br><br>do {<br><div>&nbsp; let x = 1</div><br><div>&nbsp; let y = 2</div><br><div>&nbsp; $x + $y</div>}<br>",
      "selected": "file1"
    },
    {
      "question": "[nushell]<br><br>how do you set it so that you can using vi commands when using the terminal?",
      "answer": "in ~/.config/nushell:<br><br>$env.config.edit_mode = 'vi'",
      "selected": "file1"
    },
    {
      "question": "[nushell]<br><br>in nushell, how do I know if the default settings are emacs or vi?",
      "answer": "<div>$env.config.edit_mode</div>",
      "selected": "file1"
    },
    {
      "question": "[obsidian]<br><br>Bold highlighted text",
      "answer": "Alt + B",
      "selected": "file1"
    },
    {
      "question": "[obsidian]<br><br>Toggle left sidebar",
      "answer": "Ctrl + B",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Best way to activate the tibialis posterior?",
      "answer": "Forefoot adduction with elastic bands<br><br>(Not heel raises. Adduction produced almost twice as much activity compared to heel raises.)<br><br>The Tibialis Posterior controls eversion and controls dorsiflexion. <br>  - Gary Gray",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Difference between mechanoreceptors and proprioceptors?",
      "answer": "Mechanoreceptors tell the brain how to use muscles.<br><br>Proprioception receptors tell us where we are.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Examination:<br>Issue with Biceps: Resisted arm flexion<br><br>What cervical nerve myotome is affected?",
      "answer": "C6",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Examination:<br>Issue with Deltoids: Resisted shoulder abduction<br><br>What cervical nerve myotome is affected?",
      "answer": "C5",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>How many muscle fiber types are there?",
      "answer": "1. Type I (Slow Oxidative)<br><br>Slow-twitch fibers<br><br>High endurance, low power<br><br>Rely on aerobic metabolism<br><br><br><br>2. Type IIa (Fast Oxidative-Glycolytic)<br><br>Fast-twitch fibers<br><br>Moderate endurance and power<br><br>Use both aerobic and anaerobic metabolism<br><br><br><br>3. Type IIb (Fast Glycolytic)<br><br>Fast-twitch fibers<br><br>Low endurance, high power<br><br>Rely on anaerobic metabolism",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>How many muscle fiber types does a motor unit connect to?",
      "answer": "Usually just one",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>In anatomical position what hip extensors have the greatest moment arm?",
      "answer": "\"adductor magnus, followed by the semitendinosus<br><br><a href=\"\"https://www.jospt.org/doi/10.2519/jospt.2010.3025\"\">https://www.jospt.org/doi/10.2519/jospt.2010.3025</a>\"",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>In rotation of the lumbar spine, rotation puts stress mostly on which joints?",
      "answer": "The contralateral facet joints.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Nutation vs counternutation",
      "answer": "<b>Nutation:</b> the sacrum tips forward relative to the ilium.<br><br><b>Counternutation:</b> the sacrum tips backward relative to the ilium.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>On Examination:<br><br>Issue with Finger flexors and thumb adductors: Resisted finger flexion and thumb adduction<br><br>What cervical nerve myotome is affected?",
      "answer": "C8",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>On examination:<br><br>Issue with Wrist extensors: Resisted wrist extension<br><br>What cervical nerve myotome is affected?",
      "answer": "C6",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Part of spinal cord that transmits information from golgi tendon organs, muscle spindles, joint receptors to cerebellum?",
      "answer": "anterior spinocerebellar tract",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Peroneus Tertius actions?",
      "answer": "Dorsiflexion eversion",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Term for when the ilium rotates backward relative to the sacrum.",
      "answer": "Posterior innominate rotation",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Term for when the ilium rotates forward relative to the sacrum.",
      "answer": "Anterior innominate rotation",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Terms for when the ilium shifts superiorly/inferiorly on the sacrum?",
      "answer": "Upslip, downslip",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Thinking of the ankle joints through the planes of motion, which ones are used in each plane of motion?",
      "answer": "Sagittal Plane: Tibio-talar joint<br>Frontal Plane: Subtalar Joint<br>Transverse Plane: Subtalar Joint",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What are all the elbow flexors, their functions,?",
      "answer": "Primary Elbow Flexors<br><br>1. Biceps Brachii<br><br>Function: Flexes the elbow (most effective when forearm is supinated); assists in forearm supination.<br><br><br>2. Brachialis<br><br>Function: Primary elbow flexor (active in all positions of the forearm).<br><br><br>3. Brachioradialis<br><br>Function: Flexes the elbow most effectively when forearm is in neutral (midway between pronation and supination). <br><br>ie Hammer Curls<br><br>---<br><br>Secondary or Accessory Elbow Flexor<br><br>4. Pronator Teres<br><br>Function: Assists with elbow flexion; primarily functions in forearm pronation.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What are bone spurs called?",
      "answer": "Osteophytes",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What happens to the afferent and efferent signaling when at the end range of motion?",
      "answer": "\"The nervous system must send more information to the muscles.<br><br><br>Maybe this is because the nerve may be stretched and therefore information is harder to send through, requiring the nervous system to overcompensate with some sort of \"\"pressure\"\" increase.<br><br>Does this require more blood?<br><br>Muscles are also outside of their optimal ranges and mechanoreceptors are less accurate. Muscles aren't as \"\"strong\"\". Movement becomes more twitchy and less precise. Compensation might come from a greater recruitment of other muscle fibers.\"",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What happens to the space between the tibia and fibula on dorsiflexion?",
      "answer": "Is spreads apart",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What happens when Achilles tendon or the tib posterior tendon get injured?",
      "answer": "If not fixed, and inflammation continues into tendinopathy these tendons will eventually lengthen, leading to arch collapse.<br><br>The tib post tendon will lengthen, leading to excessive rear foot eversion.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What is a strong antagonist to the tib ant?",
      "answer": "Poroneus<br><br>Tib ant inverts and dorsi flexes<br>Poroneus everts and plantar flexes",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What is an alternative strategy to intra-abdominal pressure. an external-to-internal approach, rather than the internal-to-external approach?",
      "answer": "Extension/Compression Stabilization Strategy or ECSS&nbsp;",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What region is covered by the C5 dermatome?",
      "answer": "Lateral shoulder and upper arm",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What region is covered by the C6 dermatome?",
      "answer": "Lateral forearm, <br>thumb,<br>Index finger.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What region is covered by the C7 dermatome?",
      "answer": "Middle finger",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What region is covered by the C8 dermatome?",
      "answer": "Ring finger,<br>Little finger,<br>Medial forearm",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What region is covered by the T1 dermatome?",
      "answer": "Medial forearm and region closer to the elbow.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>What's the name of the theory where joints follow stable, mobile, stable, mobile, etc. <br><br>For example foot mobile, knee stable, hip mobile, lumbar stable, etc",
      "answer": "Joint by joint theory",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>When does the space btwn the tibia &amp; fibula open up?",
      "answer": "On ankle dorsi-flexion.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>When is the diaphragm in a dome shape?",
      "answer": "When fully exhaled, relaxed.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>When is the diaphragm in a flat shape?",
      "answer": "On full inhalation, tension. The diaphragm moves from a dome shape, down into a flatter shape.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>When squatting, my left fibula area snaps.<br><br>What's a good way to figure out why?",
      "answer": "In sitting position, compare the tendons of the right and left biceps tendons.<br><br>Is the left much tighter than the right?<br><br>Are these the tendons that snap over the fibula area during the squat?",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Where do the biceps attach?",
      "answer": "\"The short head: coracoid process<br><br>The long head: <b>supraglenoid tubercle of the scapula<br></b><br>Both attach to the&nbsp;<span style=\"\"color: rgb(232, 234, 237); background-color: rgb(32, 33, 36);\"\">radial tuberosity and the fascia of the forearm via the bicipital aponeurosis.</span>\"",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Which cervical joint often has more osteoarthritis?<br><br>Why?",
      "answer": "C5-C6<br><br>Because slightly more flexion/extension  occurs here.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Why might sleeping on the back with a thick pillow lead to neck issues?",
      "answer": "The prolonged flexion will stretch out the joint capsules of the facets joints, eventually leading to strain, and fluid buildup etc.",
      "selected": "file1"
    },
    {
      "question": "[physio]<br><br>Why should toe raises be performed at the top height of the toe raise?",
      "answer": "Because the function of the toe flexors is at the top of that range just before toe-off. So we need to train the muscles at that length, where they execute during that phase of the gait cycle.<br><br>This is why the toe pro is angled, so that when you do heel raises your toes will be in an extended position, mimicking toe-off.",
      "selected": "file1"
    },
    {
      "question": "[pkg management]<br><br>Difference between compatible release specifier (~=) and the caret specifier (^)?",
      "answer": "\"They both define version ranges in dependency management \u2014 but they are used in different ecosystems and follow different rules.<br><br>---<br><br>1. Compatible release specifier (~=) \u2014 Python / PEP 440<br><br>Used in Python (e.g. in requirements.txt, pyproject.toml):<br><br>package ~= 1.4 translates to:<br>>=1.4.0 and <2.0.0<br><br>~= 1.4.2<br>means:<br>>=1.4.2 and <1.5.0<br><br>---<br><br>2. Caret specifier (^) \u2014 JavaScript / Rust / Cargo / Node (npm)<br><br>\"\"^1.4.2\"\"<br>translates to:<br>>=1.4.2 and <2.0.0<br><br>But:<br><br>^0.3.4 \u2192 >=0.3.4 and <0.4.0 (because 0 is special \u2014 considered unstable)<br><br>^0.0.3 \u2192 >=0.0.3 and <0.0.4<br><br>---<br><br>TL;DR<br><br>~= (Python): pins all digits to the left of the last one you specify.<br><br>^ (JavaScript/Rust): pins the leftmost non-zero digit.\"",
      "selected": "file1"
    },
    {
      "question": "[psychology]<br><br>The name of the memory effect where people remember things better if they create things themselves?",
      "answer": "Generation effect<br><br>Active (generated) learning",
      "selected": "file1"
    },
    {
      "question": "[python] [generators]<br><br>instead of building and returning an entire data structure at once, generators ___________.",
      "answer": "yield values one at a time",
      "selected": "file1"
    },
    {
      "question": "[python]<br><br>Good way of chaining processing steps together one at a time. Using stateful iteration.",
      "answer": "Generators",
      "selected": "file1"
    },
    {
      "question": "[python]<br><br>The int datatype exists in python.<br><br>What about for decimals?",
      "answer": "Float.<br><br>(Double does not exist.)",
      "selected": "file1"
    },
    {
      "question": "[python]<br><br>What are __init__, __repr__, __gt__, etc called?",
      "answer": "Magic methods",
      "selected": "file1"
    },
    {
      "question": "[python]<br><br>What can you use to process large files or data sources without loading everything into memory?",
      "answer": "Use generators",
      "selected": "file1"
    },
    {
      "question": "[python]<br><br>When installing python what is the difference between&nbsp;<br>A. make install<br>B. make altinstall",
      "answer": "`make install` will overwrite the default python installation so that running `python` will run this new installation version.<br><br>`make altinstall` will install this new installation version, for example 3.12 under python3.12",
      "selected": "file1"
    },
    {
      "question": "[python]<br><br>Yield values one at a time, instead of building and returning entire data structures at once?",
      "answer": "Generators",
      "selected": "file1"
    },
    {
      "question": "[python]<br><br>in Python logging, what is a transport called?",
      "answer": "destination",
      "selected": "file1"
    },
    {
      "question": "[python]<br><br>pip install -e .<br><br>What is this?",
      "answer": "editable mode.<br><br><div>&nbsp;instead of installing a static copy of the package, pip <b>creates a symbolic link to your source code</b>. This allows you to make changes to the package <b>without reinstalling it</b>.</div><br><div> \u2022 It creates a .egg-link file pointing to your source directory.</div><br><div> \u2022 A develop version of your package is registered in site-packages.</div>",
      "selected": "file1"
    },
    {
      "question": "[sound:dataDrift-lq.mov]",
      "answer": "Data drift",
      "selected": "file1"
    },
    {
      "question": "[sound:googletts-0385380c-358f5e8f-5189fbea-306aceca-c6811564.mp3]\"",
      "answer": "\"<img src=\"\"Tarsal_bones_-_animation01.gif\"\">&nbsp;<br>What is name of the joint formed by the green and blue bones, and the white bones anterior to them?<br><br>\tThe tarsometatarsal joint, (Lisfranc joint).<br><div id=\"\"io-extra-wrapper\"\">",
      "selected": "file1"
    },
    {
      "question": "[sound:googletts-35017676-72f85785-7a6076ce-2742be23-ada9ac70.mp3]\"",
      "answer": "\"What is name of the joint formed by the five long white bones and the five short white bones?<div><img src=\"\"Tarsal_bones_-_animation01.gif\"\">&nbsp;<br></div><br><br>\tMetatarsophalangeal joint.<br><div id=\"\"io-extra-wrapper\"\">",
      "selected": "file1"
    },
    {
      "question": "[sound:googletts-35e8aeff-aba92942-7cdf4250-2b1d5994-ecdd6906.mp3]\"",
      "answer": "\"<img src=\"\"Tarsal_bones_-_animation01.gif\"\"> <br>Identify the yellow bone<br><br>\tThe calcaneus. <br><div id=\"\"io-extra-wrapper\"\">",
      "selected": "file1"
    },
    {
      "question": "[sound:googletts-8b9d79aa-1eb888c1-23f7f442-c616af2b-3992aa26.mp3]\"",
      "answer": "\"<img src=\"\"Tarsal_bones_-_animation01.gif\"\">&nbsp;<br>What is the common name for the green, blue and red bones?<br><br>\tThe midfoot.<br><div id=\"\"io-extra-wrapper\"\">",
      "selected": "file1"
    },
    {
      "question": "[ssh] [gitlab]<br><br>When dealing with ssh &amp; git, how do I tell which gitlab account I am currently set up as?",
      "answer": "ssh -T git@gitlab.com<br><br>Welcome to GitLab, @mrlanderson69!",
      "selected": "file1"
    },
    {
      "question": "[strapi] [AWS]<br><br>You are setting up AWS S3 in strapi.<br>You want to disable ACL..<br><br>In config/plugins.js, what variable do you set?   ",
      "answer": "const awsConfig",
      "selected": "file1"
    },
    {
      "question": "[strapi] [aws]<br><br>You are setting up strapi to use aws s3.<br><br>You want to disable ACL in strapi.<br><br>You are editing the config/plugins.js.file, and setting the awsConfig const.<br><br>What should you set it as?",
      "answer": "<code><br>const awsConfig = {<br>    params: {<br>        ACL: null<br>    }<br>}<br></code>",
      "selected": "file1"
    },
    {
      "question": "[strapi]<br><br>You want to disable ACL in strapi.<br><br>What file do you edit?",
      "answer": "config/plugins.js",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless] <br><br>delete target and leave cursor where target was so it can be replaced",
      "answer": "Change target",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless]<br><br>Cursorless: expand selection to { }",
      "answer": "Take curly",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless]<br><br>clone a line<br><br>ie. line with H on it.",
      "answer": "\"\"\"clone harp\"\"\"",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless]<br><br>clone<br><br>Three different types of ways to clone different code chunks.",
      "answer": "clone state sit (clone statement at I)<br><br>clone funk drum (clone function at D)<br><br>clone block drum (clone block at D)",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless]<br><br>copy and paste the value at the blue C to after the return statement at the R.",
      "answer": "bring blue cap to value red/rosh",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless]<br><br>cursorless: enter",
      "answer": "enter,<br>slap,<br><br>custom: push",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless]<br><br>go to spot after red a",
      "answer": "Post red air",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless]<br><br>see all of the invisible blocks of code that cursorless sees behind the scenes.<br><br>For example:<br>1. I want to see all of the function scopes.<br>2. I want to see all of the block scopes.",
      "answer": "1. visualize funk<br>Then: visualize nothing (to turn it off)<br><br>2. visualize block",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless]<br><br>select A above pink dot and until end of line",
      "answer": "Take tail pink air",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless]<br><br>select from cursor to top of current function ",
      "answer": "Take head funk",
      "selected": "file1"
    },
    {
      "question": "[talon] [cursorless]<br><br>select the entire line, 2 lines above the current line",
      "answer": "take line up 2",
      "selected": "file1"
    },
    {
      "question": "[talon] [vim]<br><br>Use talon + vim to go to the next comma",
      "answer": "fine/fomp comma",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Alt+Cmd",
      "answer": "Malt",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Alt+Ctrl",
      "answer": "Cat []-> cult",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Alt+Shift",
      "answer": "Ash<br><br>=> Shilt",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>CMD+Alt",
      "answer": "Malt",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>CMD+Alt+Shift",
      "answer": "Mash<br><br>=> Sham",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>CMD+Shift",
      "answer": "Mush <br><br>=> Shim",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Cap-locked phrase,<br>ie result: HELLO WORLD",
      "answer": "all cap<br>ie all cap hello world<br>&gt; HELLO WORLD",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Ctrl",
      "answer": "Roll",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Ctrl+Alt",
      "answer": "Cat",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Ctrl+Shift",
      "answer": "Cash<br><br>=> Shick",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>How to add letters to the alphabet?",
      "answer": "In .talon/settings/alphabet.csv",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>How to see a list of all vscode commands?",
      "answer": "\"\"\"please default keyboard\"\"\"",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Left mouse click",
      "answer": "touch",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Select paragraph ",
      "answer": "Take block",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Shift + Cmd + P",
      "answer": "\"\"\"please\"\"\"",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Shift+Alt",
      "answer": "Ash<br><br>=> Shalt",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Shift+Alt+Cmd",
      "answer": "Mash<br><br>=> Sham",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Shift+CMD+Alt",
      "answer": "Mash<br><br>=> Sham",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Shift+Cmd",
      "answer": "Mush<br>Kush<br><br>=> Shim",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Shift+Ctrl",
      "answer": "Cash<br><br>=> Shick",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Talon command to start a terminal history search.",
      "answer": "\"rerun:<br><br>ie `rerun hello` will search the history for commands that contain \"\"hello\"\" in them.<br>`rerun search` or simply `rerun` will start a history search.\"",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>Trade two words. <br><br>First word is at an A, second word at a W.",
      "answer": "swap [string] air with whale",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>comma separated words",
      "answer": "\"list,<br><br>ie \"\"list hello world\"\" -=&gt; \"\"hello, world\"\"\"",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>dash-separated words<br><br>ie result: this-is-a-test",
      "answer": "kebab<br><br>ie `kebab this is a test`<br>&gt; this-is-a-test",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>global search",
      "answer": "\"\"\"hunt all\"\"<br><br>(Shift + CMD + F)\"",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>no spaces in between words<br><br>ie &gt; helloworld",
      "answer": "smash<br><br>ie. smash hello world<br>&gt; helloworld",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>see what I am saying, what talon is hearing",
      "answer": "command history",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>slash-separated words",
      "answer": "conga<br><br>ie: conga this is a test<br>&gt; this/is/a/test",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>slash-separated words, starting with a slash<br><br>ie /hello/world",
      "answer": "slasher<br><br>ie slasher hello world<br>&gt; /hello/world",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>view log",
      "answer": "talon open log",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>view repl",
      "answer": "talon open rebel",
      "selected": "file1"
    },
    {
      "question": "[talon]<br><br>what if I'm having trouble with the enter button?<br><br>For example, say that it is not working on the UI",
      "answer": "\"say \"\"return\"\" instead\"",
      "selected": "file1"
    },
    {
      "question": "[tech] <br>[bash]<br><br>Command to see every port that currently has something running on it.",
      "answer": "netstat -nlt",
      "selected": "file1"
    },
    {
      "question": "[tech] [bash]<br><br>1. if I use cd to move into a symbolic link, how do I use pwd to show the actual path, not the one to the symbolic link?<br><br>2. How do I use cd .. to move up a directory to the actual parent, and not the parent of the symbolic link?<br><br>3. What if you wanted to set this behaviour to happen automatically in a shell script?",
      "answer": "\"1. pwd -P<br>2. cd -P ..<br>3. At top top of the bash script use \"\"set -P\"\"\"",
      "selected": "file1"
    },
    {
      "question": "[tech] [bash]<br><br>what is the difference between kill and pkill?",
      "answer": "pkill is to kill by name.",
      "selected": "file1"
    },
    {
      "question": "[tech] [containers]<br><br>If you wanted to drop docker entirely, and use alternative tools for building images..<br><br>What would you use?",
      "answer": "<div><b>For building images:</b><b></b></div><br><div>\ud83d\udd28 Buildah \u2013 daemonless, rootless image builder</div>",
      "selected": "file1"
    },
    {
      "question": "[tech] [containers]<br><br>If you wanted to drop docker entirely, and use alternative tools for container management..<br><br>What would you use?",
      "answer": "<div><b>For container management (run/exec):</b><b></b></div><br><div>\ud83d\udc27 Podman \u2013 Docker-compatible, no daemon, rootless</div>",
      "selected": "file1"
    },
    {
      "question": "[tech] [containers]<br><br>If you wanted to drop docker entirely, and use alternative tools for docker compose functionality..",
      "answer": "What would you use?<br><br><div><b>For docker-compose functionality:</b><b></b></div><br><div>\ud83e\udde9 podman-compose \u2013 CLI-compatible</div><br><div>\u2699\ufe0f Podman Quadlets \u2013 declarative systemd units</div>",
      "selected": "file1"
    },
    {
      "question": "[tech] [containers]<br><br>If you wanted to drop docker entirely, and use alternative tools for docker desktop replacement..<br><br><br>What would you use?",
      "answer": "<div><b>For Docker Desktop replacement (VM on macOS):</b><b></b></div><br><div>\ud83d\udda5\ufe0f Colima \u2013 lightweight VM for Podman/Docker</div><br><div>(\u2705 Works with aliases like docker=podman)</div>",
      "selected": "file1"
    },
    {
      "question": "[tech] [containers]<br><br>If you wanted to drop docker entirely, and use alternative tools for pushing/pulling images..<br><br>What would you use?",
      "answer": "<div><b>For pushing/pulling images (registries):</b><b></b></div><br><div>\ud83d\udce6 Podman \u2013 push/pull support</div><br><div>\ud83d\udce4 Skopeo \u2013 advanced image copying and inspection</div>",
      "selected": "file1"
    },
    {
      "question": "[tech] [feathersjs]<br><br>What is an external resolver in feathers?",
      "answer": "A normal resolver is both for the data coming into feathers and the data going out.<br><br>An external resolver is only for data going out of feathers to the client. It is useful for hiding sensitive data. For example, you sent back the api response to a user but hide certain data. But it's usually used for highly sensitive data, such as passwords.",
      "selected": "file1"
    },
    {
      "question": "[tech] [git]<br><br>&gt; git merge refactor<br>Already up to date.<br><br>&gt; git diff refactor<br>&lt;b&gt;=&lt;/b&gt;&lt;i&gt;What do you expect here?&lt;/i&gt;",
      "answer": "\"It might still show differences.<br><br>It's a common mistake to think that because `git merge refactor` returns \"\"Already up to date\"\" that there are no file diffs.<br><br>\"\"Already up to date\"\" means that the current branch already includes all &lt;b&gt;commits&lt;/b&gt; that branch:refactor has in Git's history.<br><br>&lt;b&gt;Git's merge check is based on commit history.&lt;/b&gt;<br><br>So even if branch:refactor has a new file if that file was already merged earlier via another branch (ie branch:feature-backup), which has since been merged into branch:main, then git considers branch:refactor already merged.\"",
      "selected": "file1"
    },
    {
      "question": "[tech] [git]<br><br>3 useful git log commands:",
      "answer": "\"git log --oneline<br><br>git log --stat<br><br>git log --graph --full-history --all --color --pretty=format:\"\"\"\"<br>\"",
      "selected": "file1"
    },
    {
      "question": "[tech] [git]<br><br>True or False?<br><br>\u201cGit looks at file differences when checking if a branch is up to date.\u201d",
      "answer": "False.<br><br>Git only uses the commit ancestry.&nbsp;",
      "selected": "file1"
    },
    {
      "question": "[tech] [git]<br><br>What does the following mean?<br><br>&gt; git merge refactor<br>Already up to date.",
      "answer": "The current branch already includes all commits that branch:refactor has in Git's history.",
      "selected": "file1"
    },
    {
      "question": "[tech] [git]<br><br>git clean -fd",
      "answer": "git clean -fdn<br><br>Make sure to use -n to preview what will be deleted before doing so.",
      "selected": "file1"
    },
    {
      "question": "[tech] [git]<br><br>git status vs git log",
      "answer": "git status is for checking the current state of your working directory and staging area.<br><br>git log is for displaying the commit history of your repository. It can also show commits that haven't yet been pushed up to the remote repo.",
      "selected": "file1"
    },
    {
      "question": "[tech] [git]<br><br>how to verify the remote url?",
      "answer": "git remote -v",
      "selected": "file1"
    },
    {
      "question": "[tech] [git]<br><br>see all git branches (local and remote)",
      "answer": "git branch -a",
      "selected": "file1"
    },
    {
      "question": "[tech] [jupyter]<br><br>List all jupyter kernels",
      "answer": "<div>jupyter kernelspec list</div>",
      "selected": "file1"
    },
    {
      "question": "[tech] [macos]<br><br>Finder:<br> Open Downloads folder",
      "answer": "Option-CMD-L",
      "selected": "file1"
    },
    {
      "question": "[tech] [macos]<br><br>Open Desktop folder",
      "answer": "Shift-CMD-D",
      "selected": "file1"
    },
    {
      "question": "[tech] [macos]<br><br>Show Hide Dock",
      "answer": "Option-CMD-D",
      "selected": "file1"
    },
    {
      "question": "[tech] [macos]<br><br>Swipe all windows away and show desktop background",
      "answer": "f11",
      "selected": "file1"
    },
    {
      "question": "[tech] [nginx]<br><br>Context: <br>Setting up nginx on a new server. What do I need to do?",
      "answer": "Make sure sites-enabled works. Create two folders: sites-available and sites-enabled.&nbsp;<br><br>In nginx.conf add the following line:<br><br>`include /etc/nginx/sites-enabled/*.*;`",
      "selected": "file1"
    },
    {
      "question": "[tech] [python]<br><br>Python data orchestration tools?",
      "answer": "Dagster",
      "selected": "file1"
    },
    {
      "question": "[tech] [terminal]<br><br>if alt-d isn't deleting words forward in the terminal, what button might be set for this instead of alt?",
      "answer": "escape",
      "selected": "file1"
    },
    {
      "question": "[tech] [vscode] <br><br>list and select window",
      "answer": "Ctrl+W",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br><b>A)</b> How do I show all of the files that git is currently tracking in the staging area, (or possibly on my local machine),<br> But not yet pushed to a remote repo.<br><br>(Two ways. One using git diff)<br><br><b>B)</b> See all tracked files, whether in staging area or not.",
      "answer": "<b>A)</b> <br>1. git diff --cached (--name-only)<br>2. git status<br><br><b>B)</b><br>git ls-files",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br><div><br>  <h3>Fix this script:</h3><br>  <pre><br>    <code><br>const mochaScripts = Object.entries(packageJSONscripts)<br>  .filter(([key, val]) => packageJSONscripts[key].includes('mocha'))<br>  .map(([key, val]) => ({ key: val }));<br>    </code><br>  </pre><br></div>",
      "answer": "<div><br>  <h3>Fixed Script:</h3><br>  <pre><br>    <code><br>const mochaScripts = Object.entries(packageJSONscripts)<br>  .filter(([key, val]) =&gt; val.includes('mocha'))<br>  .map(([key, val]) =&gt; ({ [key]: val }));<br>    </code><br>  </pre><br>  <br>  <h3>Explanation:</h3><br>  <ul><br>    <li>Removed unnecessary repetition of <code>packageJSONscripts[key]</code>, as <code>val</code> already holds the value.</li><br>    <li>Ensured the <code>map()</code> method correctly creates objects with <code>key</code> as the property name (using <code>[key]</code>) and <code>val</code> as the value.</li><br>    <li><code>[key]</code> dynamically sets the property name in the object to the value of the variable <code>key</code>.</li><br>  </ul><br>  <br>  <h3>Notes for Better Understanding:</h3><br>  <ul><br>    <li><code>Object.entries()</code> converts an object into an array of <code>[key, value]</code> pairs.</li><br>    <li>The <code>filter()</code> method narrows down entries to those containing <code>'mocha'</code> in their value.</li><br>    <li><code>[key]: val</code> dynamically sets the property name in the resulting object, making the object structure <code>{ scriptName: scriptValue }</code>.</li><br>  </ul><br></div>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br><div><div>vite app</div><div><br></div><div>.env:</div><div>STRAPI_UPLOAD_TOKEN=b7fc3101cab7</div></div><div><br></div><div>{</div><div><div><div>&nbsp; 'Authorization': `Bearer ${import.meta.env.STRAPI_UPLOAD_TOKEN}`</div><div>}</div><div></div></div></div>",
      "answer": "This won't work. In VITE, all environment variables must be prefixed with VITE_<br><br>ie<br><br>.env:<br>VITE_STRAPI_UPLOAD_TOKEN=<br><br><div>{</div><div><div><div>&nbsp; 'Authorization': `Bearer ${import.meta.env.VITE_STRAPI_UPLOAD_TOKEN}`</div><div>}</div></div></div>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Alternative to try catch for error handling?",
      "answer": "\"Result<T, E><img src=\"\"1745620461329.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Alternatives to SQLmesh?",
      "answer": "DBT",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Better alternative to netstat?",
      "answer": "ss",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Command line tool to analyze project dependencies and see which ones are used why whom and which ones are unused..",
      "answer": "Depcheck",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Development tools for mobile browser",
      "answer": "\"<a href=\"\"https://github.com/liriliri/eruda\"\">eruda</a>\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Find a file vocab.talon somewhere under the luke folder.",
      "answer": "fd -p -g '**/luke/**/vocab.talon'",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Finder:<br> Show/Hide Sidebar",
      "answer": "Option-CMD-S",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Good terminal app for shortcuts?",
      "answer": "bindkey",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>How do you set a placeholder in xargs.&nbsp;<br><br>For example, say you are piping input from a previous command?",
      "answer": "xargs -I {}<br><br>if you want to use {} as the placeholder.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>How to check all ssh keys that are loaded?",
      "answer": "ssh-add -l",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>How to debug ssh if something is not working.<br><br>- What to do on the remote machine side?<br>- What to do on the local machine side?<br><br>ie not able to do `ssh blue-box-root`",
      "answer": "On the remote server (centos8): /var/log/secure<br><br>On my local machine (mac): run ssh with -v (verbose) option.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>How to find the parent process of process 5022?",
      "answer": "ps -o ppid= -p 5022",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>If my database is using hashes instead of IDs what do I do if I update a row, and the data that makes up the hash gets altered?",
      "answer": "Generate a new hash.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>If ssh isn't working to connect to my remote server,<br>How do I check the server logs?",
      "answer": "\u2022 log into the server, and then check the server logs: `tail /var/log/secure`",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>If you want to share a screen with someone without using teamviewer?",
      "answer": "freerdp<br><br>rustdesk",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Mutable vs Immutable data types?",
      "answer": "Immutable data types cannot change once created. For example, tuples in python. In javascript we have to do things like Object.seal(), Object.freeze(), const and other libraries like immutable.js.<br><br>The value of immutable data types are that:<br><br>- we don't have side effects.<br><br>- They are easier to predict and optimize. <br><br>- They are also better for threads, since we know there won't be side effects.<br><br>- They are better-used as hashes. Imagine we use a mutable object as a hash. If that changes, then the hash would not, which would make things confusing.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Ping, but with a graph.",
      "answer": "gping",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Similar lib to bullMQ for python?",
      "answer": "Celery",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Some things immutable data types are better for?",
      "answer": "<br>Threads<br>..since we know there won't be side effects.<br><br>Hashes. <br>..Imagine we use a mutable object as a hash. If that changes, then the hash would not, which would make things confusing.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>The more times we convert between tools/formats, ie csv, pandas, polars, tables, etc, ...",
      "answer": "\"...the more data \"\"drift\"\" that might occur.<br><br><img src=\"\"img7472586404719786691.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Things to check for when having issues using ssh to login to remote server?",
      "answer": "Run `ssh -v`, and see what is happening. Is the problem on the server side, or on the client side?<br>&nbsp; &nbsp; - If on the server side, then check the ssh logs on the server.<br><br>Check permissions of the ssh files/folders on both the client and server.<br><br>Check ownership of the ssh files/folders on both the client and server.<br><br>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Think about different testing methodologies:<br><br><b>The Ice Cream Cone</b><br>Vs<br><b>The Pyramid</b>",
      "answer": "\"<img src=\"\"softwaretestingicecreamconeantipattern.png\"\"><br><br><i>With a software testing ice cream cones, the majority of testing is done manually. UI automated test are a close second, integration test in the middle, with unit testing lagging behind completely. This is not scalable.</i><br><br><img src=\"\"eye.jpg\"\"><br><br>    <p>The <strong>Ice Cream Cone Anti-Pattern</strong> in software testing prioritizes manual and end-to-end (E2E) tests over unit and integration tests, inverting the efficient Testing Pyramid.</p><br><br>    <b>Characteristics</b><br>    <ul><br>        <li>Heavy reliance on slow, fragile manual and UI/E2E tests.</li><br>        <li>Few unit and integration tests, missing early defect detection.</li><br>        <li>Centralized QA, siloed teams, sequential workflows.</li><br>    </ul><br><br>    <b>Drawbacks</b><br>    <ul><br>        <li>High maintenance costs for E2E tests.</li><br>        <li>Slow feedback loops delay releases.</li><br>        <li>Late bug detection increases fix costs.</li><br>        <li>Fragile tests break with UI changes.</li><br>        <li>Unscalable as features grow.</li><br>    </ul><br><br>    <b>Causes</b><br>    <ul><br>        <li>Initial ease of manual/UI testing.</li><br>        <li>Lack of unit testing expertise.</li><br>        <li>Siloed teams or legacy codebases.</li><br>        <li>Short-term focus over strategic automation.</li><br>    </ul><br><br>    <b>Avoidance Strategies</b><br>    <ul><br>        <li>Prioritize unit and integration tests (e.g., via TDD/BDD).</li><br>        <li>Automate low-level tests, limit E2E to critical paths.</li><br>        <li>Foster developer-QA collaboration.</li><br>        <li>Use CI for frequent, fast test runs.</li><br>        <li>Limit manual testing to exploratory cases.</li><br>    </ul><br><br>\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Thoughts when writing code where a function calls a function, which calls another function?",
      "answer": "\"\"\"Trees, not graphs.\"\"<br><br><img src=\"\"Screenshot_2025-03-11-07-56-49-82_40deb401b9ffe8e1df2f1cc5ba480b12.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Unknown Errors in engineering, logic, programming..&nbsp;<br><br>What are they?",
      "answer": "\"<img src=\"\"programming-unknown_errors-anki.jpg\"\">\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Use brew to check what program installed erlang?",
      "answer": "brew uses --installed erlang",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What 2 parts does an ai transformer consist of?",
      "answer": "<div> \u2022 <b>Encoder</b>: Processes input text and converts it into contextualized embeddings.</div><br><div> \u2022 <b>Decoder</b>: Generates output text (used in models like GPT and T5).</div>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What 3 things does passing -- into the command line do?<br><br>Examples:<br>ls -- -l<br>yarn start -- --port 3000<br>echo -- --help",
      "answer": "<div><b>1. Disambiguating Arguments</b></div><div><div><b>2. Passing Flags to Subcommands</b></div></div><div><div><b>3. Forcing Positional Arguments</b></div></div><div><b><br></b></div><div><b>Examples:<br><br>1.</b>&nbsp;<b>ls -- -l</b></div><div><div> \u2022 Without --: ls -l is interpreted as a flag to list files in long format.</div><br><div> \u2022 With --: ls -- -l treats -l as a filename, not a flag.</div></div><div><br></div><div><b>2.&nbsp;yarn start -- --port 3000</b></div><div><div> The first -- is for Yarn: It passes everything after it (--port 3000) as arguments to the script being executed.</div><br><div> \u2022 --port 3000 is then processed by the script as runtime arguments.</div></div><div><b><br></b></div><div><b>3.</b><b>&nbsp;echo -- --help</b><b><br></b></div><div><div>Output: --help (not interpreted as a flag, but printed as a string).</div></div>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What are some examples of system daemons?",
      "answer": "dockerd<br>sshd<br>cron",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What are the SOLID principles?<br><br>How to remember?",
      "answer": "In OOP,<br><br>Sing Open Lick In Deep<br><br>Single responsibility<br>Open-closed<br>Liskov substitution<br>Interface segregation<br>Dependency inversion<br>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What are the main types of boundary conditions / boundary errors?",
      "answer": "- Algorithm Boundaries<br><br>- Logical Boundaries, ie transitions btwn states<br><br>- Resource Limits (This is related to boundary conditions because if a system is overly taxed, at its limit and lacking in resources then it will encounter boundary errors. A way to test a system is to push it to its limit, and also to limit its resources. For example, how does the skin and other prote tive barriers behave when nutrition and immune cells are limited?)<br><br>- Concurrency Issues<br><br>- Mathematical Boundaries<br><br>- Edge Cases<br><br>- Junctions or Communications between two systems",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What did Kings recommend for video transcription?",
      "answer": "microsoft stream",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What do I do if a breakpoint isn't firing? (In VS Code)",
      "answer": "Highlight mouse over the breakpoint and look at the imports. Check for things that might be capitalized or lowercase but should be different. If this is the case I need to flush out VS Code. I did this by changing the folder/filename to 'piss' and then back to what I want. This should fix things.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What does FSM stand for?",
      "answer": "Finite State Machine",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What does upsert mean?",
      "answer": "If something doesn't exist then add it, otherwise update it",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What is a IPC Error?",
      "answer": "<div><b>IPC (Inter-Process Communication) Error</b></div><br><div><br></div><br><div>An <b>IPC (Inter-Process Communication) Error</b> occurs when <b>two or more processes fail to exchange data correctly</b>. IPC is used in <b>multi-threaded</b> or <b>multi-process</b> applications, distributed systems, and OS-level process management.</div>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What is different when setting up a key for GitHub instead of other services such as gitlab?",
      "answer": "1. Generate SSH key (use GitHub email)<br><br>Notes<br><br>Your key must use your GitHub email address when generating it.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What is fetch { method: HEAD } useful for?",
      "answer": "If you want to just fetch the headers of a resource.<br><br>This is useful, for example, maybe you don't know if the resource exists or not, or you want to know its size so you know how to deal with it before fetching the whole resource.<br><br>For example, this is also useful if I don't know whether an image exists or not. Without this, I will attempt to fetch with resource which I think will result in a 404 error. This way, I can first check to make sure that the image actually exists.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What is similar to AST but maintains formatting?",
      "answer": "LibCST",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What is similar to LibCST, but without maintaining the formatting?",
      "answer": "AST",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What is the difference between Serialization and Mashalling?",
      "answer": "Marshalling is more general. <br>It is more often used for preparing input/outputs (function args and return values) for remote execution.<br>An example: RPC (Remote Procedure Calls).<br><br>Serialization: <br><b>object \u2192 format</b> <br>(ie saving JSON to disk).<br><br>Marshalling:<br><b>object \u2192 network-ready format</b> <br>(ie often for RPC).",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What is the difference between TIMESTAMP and DATE?",
      "answer": "Date only includes the data information, and not the time.<br><br>Timestamp includes both the data and time, ie 2023-01-01T00:00:00.000",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What is the escape sequence representation for the escape character?<br><br>+ What is the alternative?",
      "answer": "\\033 <br><br>\\x1b",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What is the name of a centos server dashboard I can use remotely? It's web-gui based.",
      "answer": "cockpit",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What is upserting?",
      "answer": "If something already exists in a queue then update it.<br><br>Otherwise add it.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What model might be a better fit for OrderProcedures than FSM?",
      "answer": "\"Actor Model might fit better than a Finite State Machine.<br><br><br><img src=\"\"state-diagram-circuit.jpg\"\"><img src=\"\"1_NICbPDHtSOBQZAi0DscIyA.png\"\"><br>\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What to do if ssh-add ~/.ssh/key.pem doesn't work?",
      "answer": "\"Start the ssh agent:<br><br>eval \"\"$(ssh-agent -s)\"\"\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What to do if yarn isn't working in crontab but works otherwise?",
      "answer": "Add path variable to the cron<br><br>echo $PATH<br><br>And add result to top of crontab<br><br>PATH=<result><br></result>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What to do if you can't clone a proxy object?",
      "answer": "In the constructor for the object, before you create and attach the proxy, store the original object. ie this.original = original; Use the reference when you need to clone it.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>When deciding whether to use absolute paths, relative paths, or project-relative paths,<br>Or when making other types of decisions on how to pass things around.. ie data types, etc.<br><br>What can we do? There are so many different ways to go about things..",
      "answer": "- Look at other, similar libraries that deal with a similar type of data and see how they do it.<br>&nbsp; &nbsp; i.e. when dealing with files or filepaths, look at other libraries and see what they accept as argument input, what they return, etc<br><br>- think about things in terms of complexity. An unstable ball is easy to manage. An unstable ball on top of another unstable ball is another thing entirely. You can't build vertically until there is enough stability underneath.<br><br>- learn about things horizontally in order to have enough knowledge to create a landscape in your head. Once you have this then you can lay down pros &amp; cons that you read or exprience on top of this landscape in your head. Without something like this, it's hard to lay memories down because you won't know where, and when or how to retrieve them when needed.&nbsp;<br>&nbsp; - Often times I will spend days programming something only to find out it adds too much complexity for it to be worth it. Even though I had that thought from the beginning. But sometimes you also want to learn things enough (by doing/buiding) before you feel comfortable enough horizontally before you can make and stick with your decision. Another example might be whether to use underscores or camelCase, and then you end up mixing the 2.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>When doing <b>ssh user@ip</b> what if I want to set the ssh key in the command?<br><br>What command line -option do I use?",
      "answer": "<code>ssh -i /path/to/your/private/key blue-box-root</code>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>When is it better to use tsv over csv?",
      "answer": "When the data has a lot of commas in it",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>When running `docker compose up` over and over while developing, what is a good habit to get into so you don't have containers all over the place?",
      "answer": "docker compose up --remove-orphans",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Why do threads suck in python?",
      "answer": "They are limited to a single cpu",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Why do you need a linux VM to run docker, podman, etc?",
      "answer": "<div>Because containers rely on <b>Linux kernel features</b> that <b>don\u2019t exist</b> on macOS or Windows.</div>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Why might it be a bad idea to use `ls` inside of scripts, or for anything complex?<br><br>What to use instead?",
      "answer": "Because `ls` will spit out weird special characters, newlines, spaces, etc<br><br>It's better to use globs.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>Why use git add . Instead of git add *",
      "answer": "If I have a gitignore files with<br><br>*.csv<br>*.pyc<br><br>Then git add * doesn't respect the gitignore file because * is expanded by the shell before git runs (according to chatgpt).<br><br>Git add . Tells git to add all files in current directory and its subdirectories.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>\\033[31m<br><br>What is this?",
      "answer": "\\033 is the escape sequence for the escape character <br><br>The following [ tells the terminal that what follows \\033[ are commands to be run, not just stuff to be printed. (Known as the Control Sequence Introducer (CSI))<br><br>The trailing 'm' is specific to the Select Graphic Rendition (SGR), which deals with text formatting: color, weight, etc.<br><br>There are others besides 'm'.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>alternative to cloudfare?",
      "answer": "bunny.net",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>chmod 123 :<br><br>What does 1, 2 and 3 refer to?",
      "answer": "Owner has ability to only execute,<br>Group has ability to only write,<br>Others have ability to execute and write.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>in browser dev tools, how do you set things so that you can edit text directly. For example, just highlighting any text and then typing to change it.",
      "answer": "\"document.designMode = \"\"on\"\"\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>library for modular docking layout manager?",
      "answer": "dockview.dev",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>move tabs in iTerm (move the current tab to the left or right)",
      "answer": "Shift+Cmd+Left/Right",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>ps aux | grep 58172<br><br>Example output:<br><br>root      58172  1.2  0.0      0      0 pts/0    Z   19:08   0:05 [yum]",
      "answer": "Process 58172 is a zombie process.<br><br>Find its parent process and kill it.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>see all chrome tabs from anywhere",
      "answer": "uhk: super + T<br>macbook: fn + option + T<br><br>(similar to super + space for alfred)",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>what are some advantages of podman over docker?",
      "answer": "it runs without root as default.<br><br>Podman doesn't need to run a background process.<br>&nbsp; &nbsp; - docker relies on a background daemon (dockerd)<br><br>- podman runs containers directly as regular linux processes.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[bash]<br><br><div>Alter the following:</div><div>(so that it no longer prints to the terminal that it is being run from)</div><div><br></div><div>fd -d 2 -t f --no-hidden -0 | xargs -0 eza --icons --long --grid --color=always | tee ~/.talon/tmp.log</div>",
      "answer": "<div>fd -d 2 -t f --no-hidden -0 | xargs -0 eza --icons --long --grid --color=always | tee ~/.talon/tmp.log &gt; /dev/null 2&gt;&amp;1<br></div><div><br></div><div><br></div><div>the output from stdout is redirected to /dev/null.</div><div><br></div><div>`/dev/null 2&gt;&amp;1` means that stderr (2) is being redirected to fd 1 (stdout), which has already been redirected to /dev/null, which is the new stdout.</div><br><br><div>This means that stderr is also being redirected to the new stdout, /dev/null.&nbsp;</div><div><br></div>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[bash]<br><br>Find running processes and sort by most memory.",
      "answer": "ps -aux --sort=-%mem",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[bash]<br><br>How do I copy results from terminal commands into the clipboard?",
      "answer": "pbcopy<br><br>ie&nbsp;fd -pg '**/user/luke' | pbcopy",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[bash]<br><br>I'm trying to kill a process but it won't die.<br><br>What to do?",
      "answer": "Check its status:<br><br>ps aux | grep PID<br><br>Then check if it's a zombie process, or in an uninterruptable sleep:<br><br>Z in the STAT column?<br>D = uninterruptable sleep (often stuck in I/O)<br><br><br>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[bash]<br><br>When debugging a shell script in vscode/cursor and watching a variable that should be a 5 for example, but is intead an empty string '', or something like ')' or '()', what can I do?",
      "answer": "\"It could be a non-null separated string.<br><br>Or<br><br>Create a temp_result_file and echo the results to that file.<br><br>ie create a variable: local temp_result_file=\"\"/tmp/calc_result.txt\"\"<br>then: echo \"\"$result\"\" &gt; \"\"$temp_result_file\"\"<br><br>then when debugging you can do the following:<br>debug_result=$(cat /tmp/calc_result.txt 2&gt;/dev/null)<br><br>Now setting a watch on ${debug_result} will hold the actual result in string form.\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[containers]<br><br>Instead of using podman-compose, what should you probably use instead?",
      "answer": "<blockquote><b>Quadlets are systemd unit files</b> (like services)</blockquote>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[database] [mongodb]<br><br>How do you send a PATCH request to delete a mongodb parameter?<br><br>For example, using postman.",
      "answer": "\"<div><div>{</div><div> &nbsp; &nbsp; \"\"$unset\"\": {</div><div> &nbsp; &nbsp; &nbsp; &nbsp; \"\"myparam\"\": true</div><div> &nbsp; &nbsp; }</div><div>}</div></div>\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[git]<br><br>difference between git restore and git reset?",
      "answer": "git restore is newer and safer. It unstages files.<br><br>git reset also untracks files but can reset branches and history.<br>!!Be careful.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[javscript]<br><br>What can you do if you are trying to take care of a case where calls to a function might be very rapid? <br><br>(2 similar functions)<br><br>Examples: someone might be spamming a button,<br>windows resize operations, search inputs, ie a real-time search engine bar<br>",
      "answer": "lodash.debounce() or throttle()",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[jupyter]<br><br>remove a jupyter kernel",
      "answer": "<div>jupyter kernelspec uninstall &lt;kernel_name&gt;</div>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[logging]<br><br>Alternative to fluentd?",
      "answer": "vector",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[macOS] [finder]<br><br>Hide/Show path bar (bar at bottom that shows ancestor folders, ie a &gt; b &gt; c)",
      "answer": "Option-CMD-P",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[macos]<br><br>Finder: <br>Open Documents folder",
      "answer": "Shift-CMD-O",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[macos]<br><br>Finder: <br>Open home folder",
      "answer": "Shift-CMD-H",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[nginx]<br><br>where are the html default files stored?",
      "answer": "/usr/share/nginx/html",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[poetry]<br><br> what are ~= and ^ called? For example, ~=1.2.3",
      "answer": "Dependency version specifiers.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[python package management]<br>[poetry]<br><br>What kind of dependency version specifier is this?&nbsp;<strong><code>~=1.2.3<br></code></strong><br>What does it mean?",
      "answer": "<b>compatible release</b> specifier.<br><br>~=1.2.3 means you can install any version >= 1.2.3 & < 1.3.0<br><br><b>This is similar to caret specifiers used in JavaScript, node, rust. They have small differences but mostly the same.</b>",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[vscode]<br><br>Move between tabs, select tab number ",
      "answer": "\"Ctrl+#\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[vscode]<br><br>Remove all empty lines using Find (not terminal command find)",
      "answer": "1. CMD + Option + F (to enter find mode for the current file)<br>2. CMD + Option + R (to enter regex mode)<br>3. Use regular expression ^$\\n (or&nbsp;^\\s*$\\n in case there are white spaces)<br>4. Replace with nothing (Replace: Enter, Replace All: CMD + Enter)<br><br>Note: you need the \\n at the end of the regular expression, otherwise it's just replacing the empty line with another empty line, which does nothing.",
      "selected": "file1"
    },
    {
      "question": "[tech]<br>[zsh]<br><br>How to change it so it terminal Alt+Left, Alt+Right will move over this-is-a-word and this_is_another_word?<br><br>Normally, it stops at each - and _",
      "answer": "vim ~/.oh-my-zsh/lib/completion.zsh<br><br>change WORDCHARS='' to WORDCHARS='_-'",
      "selected": "file1"
    },
    {
      "question": "[terminal] [bash]<br><br>How would I cd into a directory if it had crazy characters, and it was difficult to bite into with my terminal?<br><br>(Not using fish with tab auto completion, or zsh wildcards *)",
      "answer": "\"1. get the inode number:<br><b>ls -i</b> <br>(which will show the folder and its inode number.)<br><br>2. <b>find . -inum 123456 -exec cd {} \\;</b><br><br><b>If this doesn't work do the following:</b><br><br>cd \"\"$(find . -inum 195365380 -print -quit)\"\"\"",
      "selected": "file1"
    },
    {
      "question": "[terminal] [iTerm]<br><br>How do you change the title of the entire iTerm window, using only the keyboard?",
      "answer": "\"echo -ne \"\"\\033]0;My Full Title\\a\"\"<br><br>Note: the \\a is a bell character, which marks the end\"",
      "selected": "file1"
    },
    {
      "question": "[terminal] [iterm2]<br><br>What to do if when I change the title of my current tab it's changing the title of all tabs in my current iterm window?",
      "answer": "CMD+Shift+i to turn it off",
      "selected": "file1"
    },
    {
      "question": "[terminal]<br><br>How to do a global search in iterm across all open terminals?",
      "answer": "Shift+Cmd F",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>:%s/test1/test2/g<br><br>What does each part of this do in vim?",
      "answer": ": enters command mode<br><br>% targets the entire file<br><br>s/test1/test2 means to substitute test1 with test 2<br><br>/g means to do it globally, rather than just the first occurrence <br>",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>:s/foo/bar/g",
      "answer": "Replace all occurrences of foo with bar, just on the current line.<br><br>(:s is shorthand for :.s)<br><br>In Vim, :.s is shorthand for:<br><br>:1,1s<br><br>Which means:<br>substitute (s) on the current line (.).<br><br>Breaking it down:<br><br>: starts a command<br><br>. refers to the current line<br><br>s is the substitute command<br><br><br>So :.s/foo/bar/g means:<br>\u201cSubstitute all foo with bar on the current line.\u201d",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>Cut two lines above cursor",
      "answer": ":-2, -d",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>Delete all empty lines",
      "answer": ":g/^$/d",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>Delete all lines that match a specific pattern",
      "answer": ":g/PATTERN/d<br>OR :g!/PATTERN/d (to do the opposite)",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>How to delete a range of lines? ie lines 8-20 using marks?",
      "answer": "\"<b>ma</b> start a mark at the starting line and type \"\"ma\"\"<br><br><b>d'a</b> Then move to the final line and type \"\"d'a\"\"\"",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>Move cursor to the left of next occurance of specified character",
      "answer": "`t&lt;char&gt;`",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>Move three spaces past a substring ",
      "answer": "/substr/s+3",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>Next (when searching)",
      "answer": "n",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>Replace all instances of mystring1 with myotherstring",
      "answer": ":%s/mystring1/myotherstring/g<br><br>(: :% - Applied the command to the entire file.)",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>Search forwards twice",
      "answer": "2/&lt;string&gt;",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>Select the word cursor is currently on",
      "answer": "viw",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>What does the s do?<br><br>:.,$s/old/new/g",
      "answer": "It means substitute. <br><br>It's a common misconception that s is a shorthand for the current line. <br><br>It's only interpreted that way if no range is given, as a default.",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>What does this do?<br><br>:10,20s/error/warning/g",
      "answer": "Replaces all occurrences of error with warning from line 10 to line 20",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>Yank from the current line to the end of the file",
      "answer": "<div>\u2022 yG yanks from the current line to the end of the file.<br></div><br><div><br></div>",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>delete all functions of the following format:<br><br>function my_func<br>end<br><br>Use :g/",
      "answer": ":g/^function /,/^end$/d",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>delete char under the cursor",
      "answer": "x<br>dl",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>delete everything from cursor to end of line <br>(Two ways)",
      "answer": "d$<br>D",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>delete word",
      "answer": "dw<br><br>daw",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>go to line number",
      "answer": "&lt;LINE_NUM&gt;gg<br><br>OR<br><br>:LINE_NUM",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>jump to the end of a WORD",
      "answer": "E",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>move a word backwards",
      "answer": "b",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>move backward word-by-word",
      "answer": "b",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>move the content of the current line the cursor is on to line 8.",
      "answer": ":m8",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>move to end of line",
      "answer": "$",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>move to the beginning of the line and switch to insert mode",
      "answer": "capital i",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>move to the first character of line",
      "answer": "0",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>moves to non-blank character at end of line",
      "answer": "g_",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>repeat",
      "answer": ".",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>swap one character for another",
      "answer": "r&lt;char&gt;",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>switch case for a single char",
      "answer": "~",
      "selected": "file1"
    },
    {
      "question": "[vim]<br><br>when in visual mode, how to extend selection to line 20?",
      "answer": "20G",
      "selected": "file1"
    },
    {
      "question": "[vscode]<br><br>how to use the editor for Search instead of the sidebar?",
      "answer": "Use the setting search.mode",
      "selected": "file1"
    },
    {
      "question": "[yarn]<br><br><div><b>How to tell the Yarn (v2/3/4) interpreter that this is the root of a Yarn project?</b><b></b></div><div><b><br></b></div>ie. if it keeps looking up the directory tree for where the project root is.<br>",
      "answer": "Add an empty yarn.lock or .yarnrc.yml file into the project root directory.",
      "selected": "file1"
    },
    {
      "question": "[yarn]<br><br><div>When is it appropriate to use the --loader .pnp.loader.mjs flag manually?</div>",
      "answer": "<div>Only when you run a Node.js script directly <i>outside</i> of Yarn (ie not using `yarn mocha ...`), and you need to manually tell Node to use Yarn\u2019s PnP loader.</div>",
      "selected": "file1"
    },
    {
      "question": "[yarn]<br><br><div>Why is running yarn mocha (without --loader) the correct way in a Yarn PnP environment?</div>",
      "answer": "<div>Because Yarn automatically sets up the PnP environment and loader, allowing Mocha to work correctly without needing an explicit --loader flag.</div>",
      "selected": "file1"
    },
    {
      "question": "[yarn]<br><br>Why might using <br><b>mocha --loader .pnp.loader.mjs</b> <br>directly fail in a yarn PnP project?",
      "answer": "Running Mocha directly does not fully initialize the Yarn PnP environment, even with the loader specified. <br><br>This can lead to subtle module resolution failures, such as packages not being found or incorrectly resolved.<br><br><u>Recommended fix</u>:<br><b>yarn (dlx) mocha --loader .pnp.loader.mjs</b>",
      "selected": "file1"
    },
    {
      "question": "[zsh]<br><br>Say I want to change it so it terminal Alt+Left, Alt+Right will move over this-is-a-word and this_is_another_word?<br><br>what config file do I need to edit?",
      "answer": "~/.oh-my-zsh/lib/completion.zsh",
      "selected": "file1"
    },
    {
      "question": "`git diff`<br><br>Filter for certain types of files?",
      "answer": "<div>--diff-filter=</div><div><br></div><div>Select only files that are Added (<code>A</code>),&nbsp;</div><div>Copied (<code>C</code>),&nbsp;</div><div>Deleted (<code>D</code>),&nbsp;</div><div>Modified (<code>M</code>),&nbsp;</div><div>Renamed (<code>R</code>),&nbsp;</div><div>have their type (i.e. regular file, symlink, submodule, \u2026\u200b) changed (<code>T</code>),&nbsp;</div><div>are Unmerged (<code>U</code>),&nbsp;</div><div>are Unknown (<code>X</code>),&nbsp;</div><div>or have had their pairing Broken (<code>B</code>).&nbsp;</div><div><br></div><div>Any combination of the filter characters (including none) can be used.&nbsp;</div><div><br></div><div>When&nbsp;<code>*</code>&nbsp;(All-or-none) is added to the combination, all paths are selected if there is any file that matches other criteria in the comparison; if there is no file that matches other criteria, nothing is selected.</div><div><div><br></div><div>UPPER-CASE letters can be downcased to exclude. E.g.&nbsp;<code>--diff-filter=ad</code>&nbsp;excludes added and deleted paths.</div></div>",
      "selected": "file1"
    },
    {
      "question": "a little of everything",
      "answer": "un poco de todo",
      "selected": "file1"
    },
    {
      "question": "alguien",
      "answer": "Someone",
      "selected": "file1"
    },
    {
      "question": "alrededor",
      "answer": "Around",
      "selected": "file1"
    },
    {
      "question": "alternative to double quote?",
      "answer": "dub quote",
      "selected": "file1"
    },
    {
      "question": "alternatives to git reset --hard (still using git reset)",
      "answer": "git reset --soft<br>git reset --mixed",
      "selected": "file1"
    },
    {
      "question": "before installing anything in centos8, what should I do?",
      "answer": "sudo dnf update<br>sudo dnf upgrade",
      "selected": "file1"
    },
    {
      "question": "brave: scroll left/right through tabs",
      "answer": "CMD + Shift + [<br>CMD + Shift + ]",
      "selected": "file1"
    },
    {
      "question": "brave: search all tabs",
      "answer": "macbook: SHIFT + CMD + A",
      "selected": "file1"
    },
    {
      "question": "brave: toggle rango",
      "answer": "ctrl + R",
      "selected": "file1"
    },
    {
      "question": "camel case,<br><br>with first word capitalized,<br>with first word lower-cased",
      "answer": "hammer,<br>camel",
      "selected": "file1"
    },
    {
      "question": "change content inside curly braces",
      "answer": "ci}",
      "selected": "file1"
    },
    {
      "question": "ci",
      "answer": "\"change inside,<br>for example ci\"\" will change inside quotes<br>ci} will change inside curly braces\"",
      "selected": "file1"
    },
    {
      "question": "command history",
      "answer": "command history",
      "selected": "file1"
    },
    {
      "question": "command to write something to both the console and to a file",
      "answer": "\"[bash]<br><br>tee<br>ie `echo \"\"Your message here\"\" | tee -a output.txt`<br> <br>\"",
      "selected": "file1"
    },
    {
      "question": "commands to use if you want to easily save and switch to directories",
      "answer": "pushd &amp; popd",
      "selected": "file1"
    },
    {
      "question": "company",
      "answer": "empresa",
      "selected": "file1"
    },
    {
      "question": "context: setting up grafana on a new server. I just got nginx to forward to mysite.com/grafana.&nbsp;<br><br>However, now it's redirecting to mysite.com/login, which is incorrect.",
      "answer": "1. Open the grafana setting file:<br><br>vim /etc/grafana/grafana.ini<br><br>2.<br><pre><br><code><br><br>domain = mysite.com<br>root_url = %(protocol)s://%(domain)s/grafana/<br><br></code><br></pre><br><br>Note: %()s is the placeholder for variable names like %(protocol)s, %(domain)s, etc",
      "selected": "file1"
    },
    {
      "question": "contrase\u00f1a",
      "answer": "Password",
      "selected": "file1"
    },
    {
      "question": "copy",
      "answer": "y (yank)",
      "selected": "file1"
    },
    {
      "question": "cursorless: remove the argument of a function. The argument is at a blue V.",
      "answer": "chuck arg blue vest/verge",
      "selected": "file1"
    },
    {
      "question": "cursorless: select the current line",
      "answer": "take line",
      "selected": "file1"
    },
    {
      "question": "cursorless: slap",
      "answer": "enter",
      "selected": "file1"
    },
    {
      "question": "cut single char before cursor",
      "answer": "X",
      "selected": "file1"
    },
    {
      "question": "cut single char under cursor",
      "answer": "x",
      "selected": "file1"
    },
    {
      "question": "daw vs diw",
      "answer": "delete a word (deletes one of the spaces), vs<br>delete inner word (without spaces around it)",
      "selected": "file1"
    },
    {
      "question": "delete char before cursor",
      "answer": "X<br>dh",
      "selected": "file1"
    },
    {
      "question": "delete current line and line above cursor",
      "answer": "d then up",
      "selected": "file1"
    },
    {
      "question": "delete current line and line below cursor",
      "answer": "d, then down arrow",
      "selected": "file1"
    },
    {
      "question": "delete inside of curly braces",
      "answer": "ci}",
      "selected": "file1"
    },
    {
      "question": "delete line",
      "answer": "dd",
      "selected": "file1"
    },
    {
      "question": "difference btwn throwing exception and raising?",
      "answer": "throwing and catching is for control flow",
      "selected": "file1"
    },
    {
      "question": "docker compose build --no-cache<br><div>VS</div><div>docker compose build</div>",
      "answer": "\"<div><div><div>When you run `docker compose build --no-cache`</div></div><div><br></div><div>You\u2019re telling Docker to:</div><br><div><br></div><br><blockquote>\ud83d\udeab <b>Ignore all previously cached layers</b> and <b>rebuild everything from scratch</b>, even if nothing has changed in your files.</blockquote><br><div></div><br><div><b>\ud83d\udd01 Normally, Docker caching works like this:</b><b></b></div><br><div><br></div><br><div>When building an image from a Dockerfile, Docker caches <b>each layer</b>, for example:</div></div><div><br></div><div><img src=\"\"CleanShot 2025-03-25 at 14.43.37@2x.png\"\"><br></div><div><br></div><div>If the package.json hasn\u2019t changed, Docker <b>reuses</b> the cached npm install step \u2014 making builds much faster.</div><br><div></div><br><div><b>\ud83e\uddfc But when you use --no-cache:</b><b></b></div><br><div><br></div><br><div>Docker <b>ignores all that</b> and re-runs every instruction:</div><br><div> \u2022 Re-downloads base images</div><br><div> \u2022 Re-installs dependencies</div><br><div> \u2022 Re-copies files</div><br><div> \u2022 Re-compiles native modules (like sharp, better-sqlite3, etc.)</div><br><div><br></div><br><div>\u2705 This is very useful when:</div><br><div> \u2022 You\u2019re switching CPU architectures (e.g., ARM \u2192 x86)</div><br><div> \u2022 You suspect something is broken in a cached layer</div><br><div> \u2022 You changed something subtle that Docker didn\u2019t detect</div>\"",
      "selected": "file1"
    },
    {
      "question": "dot-separated words<br><br>ie result &gt; this.is.a.test",
      "answer": "dotted<br><br>ie dotted this is a test<br>&gt; this.is.a.test",
      "selected": "file1"
    },
    {
      "question": "empresa",
      "answer": "company",
      "selected": "file1"
    },
    {
      "question": "enga\u00f1ar",
      "answer": "Fool",
      "selected": "file1"
    },
    {
      "question": "feathers.js:<br><br>Setting ctx.result, how will that affect the remaining hooks?",
      "answer": "It will skip the service call, but the remaining hook functions will still run.",
      "selected": "file1"
    },
    {
      "question": "find process running on port 3030 and kill it using awk",
      "answer": "lsof -i :3030 | awk '{print $2}' | xargs kill -9",
      "selected": "file1"
    },
    {
      "question": "fish:<br><br>difference between <br>1. set -l my_var<br>2. set my_var",
      "answer": "\"<div>`set -l` sets a local variable that gets deleted after used. For example, if you defined a variable like so:<br></div><br>set my_var \"\"\"\"<br>if 0<br>&nbsp; &nbsp; set -l my_var success<br>end<br><br>echo $my_var&nbsp; # will be \"\"\"\"&nbsp;\"",
      "selected": "file1"
    },
    {
      "question": "fish:<br><br>echo fe --no-config-files -D Desktop|Downloads<br><br>Surround Desktop|Downloads with quotes.",
      "answer": "\"1. Bring cursor to end of Downloads<br>2. Ctrl+W twice to backwards delete Downloads, and then Desktop|<br>3. Insert mode then quote \"\"<br>4. Ctrl+Y to paste back in Desktop|Downloads<br>5. Insert second quote \"\"\"",
      "selected": "file1"
    },
    {
      "question": "fold/unfold",
      "answer": "CMD + OPTION + [<br>and<br>CMD + OPTION + ]",
      "selected": "file1"
    },
    {
      "question": "from util import print_filenames<br><br>I have a util/__init__.py file but it's blank.<br><br>If it's blank or doesn't contain a function named print_filenames then what will util be?",
      "answer": "a module",
      "selected": "file1"
    },
    {
      "question": "from util import print_filenames<br><br>I have util/__init__.py:<br><br>If it contains a function named print_filenames then what will util be?",
      "answer": "It will be the function print_filenames<br>",
      "selected": "file1"
    },
    {
      "question": "git add -p",
      "answer": "Same as `git add --patch`<br><br>This allows you to stage parts of a file instead of the whole thing.",
      "selected": "file1"
    },
    {
      "question": "git add -p<br><br>What does -p stand for?",
      "answer": "Patch",
      "selected": "file1"
    },
    {
      "question": "git diff to compare a file between two commits",
      "answer": "git diff HEAD HEAD~1 -- path/to/file",
      "selected": "file1"
    },
    {
      "question": "git: what do I use if I want to move a commit to another branch?",
      "answer": "git cherry-pick",
      "selected": "file1"
    },
    {
      "question": "git: what is the staging area?",
      "answer": "\"Often referred to as the \"\"index\"\" in git.<br><br>It serves as the intermediate between your working directory and the git repo.<br><br>`git add` adds files to the staging area.\"",
      "selected": "file1"
    },
    {
      "question": "go to end of file",
      "answer": "G",
      "selected": "file1"
    },
    {
      "question": "herramienta",
      "answer": "Tool",
      "selected": "file1"
    },
    {
      "question": "how do I delete the branch origin/simple?",
      "answer": "<div>git push origin --delete simple</div>",
      "selected": "file1"
    },
    {
      "question": "how do you use numbers, for example, 1, 2, etc?",
      "answer": "numb one, numb two, ..",
      "selected": "file1"
    },
    {
      "question": "how to do this in yarn?<br><br><div><div><pre><code>npm install --save-dev @babel/core @babel/cli</code></pre></div></div><br>",
      "answer": "<pre><div><div><code>yarn add --dev @babel/core @babel/cli<br></code></div></div></pre><br>",
      "selected": "file1"
    },
    {
      "question": "how to type a?",
      "answer": "say air",
      "selected": "file1"
    },
    {
      "question": "https://youtu.be/fW0tXzDXq_k?si=T2YViftoSzfblNn8",
      "answer": "[sound:1000018253.mp4]",
      "selected": "file1"
    },
    {
      "question": "iTerm Mac: move a word to the left/right",
      "answer": "option + left/rt",
      "selected": "file1"
    },
    {
      "question": "iTerm: delete a word to the left",
      "answer": "option + delete",
      "selected": "file1"
    },
    {
      "question": "iTerm: delete word to the right",
      "answer": "fn + option + delete",
      "selected": "file1"
    },
    {
      "question": "if I can't do camelCase then use _ and __.",
      "answer": "helloWorld becomes hello_world<br>&amp; adReport_helloWorld becomes ad_report__hello_world<br><br>This way I can group things together. For example, if I wanted to do c_tableName_addHashColumn, but unfortunately the table name is using underscores. For example, my_table.csv: then we would need to expant out tableName into table_name. But c_table_name_addHashColumn is ugly.<br><br>So it should be c__table_name__addHashColumn<br>OR c__table_name__add_hash_column.<br><br>Unfortunately this doesn't solve the problem of when to use camelCase and when to use underscores. Typically, my philiosophy is use to camelCase because it feels like it groups things together more intimately. Underscores are for spacing things out. The further words are from each other, the less connection they feel to have.<br><br><br>P.S. I think I can think of dashes - as something sometimes synonymous with slashes /.&nbsp;<br>So slashes and dashes are weird because they are dividing things, but at the same time dashes feel different that underscores They feel like the words are closer than underscores, but maybe I should start thinking of them as something that's similar to slashes, which are useful for filenames, since we know that dashes can be placeholders for slashes without creating problems or having to escape characters.",
      "selected": "file1"
    },
    {
      "question": "if watching ${debug_result} is '26', what will watching debug_result be?",
      "answer": "\"'declare -- debug_result=\"\"26\"\"'\"",
      "selected": "file1"
    },
    {
      "question": "in axios, where does timeout go?",
      "answer": "axios({},{timeout})<div>axios.get(url,{},{timeout})</div>",
      "selected": "file1"
    },
    {
      "question": "in jj, how do you do the equivalent of `git add`",
      "answer": "You don't need to. You don't need to tell jujitsu when you add or remove files.",
      "selected": "file1"
    },
    {
      "question": "in programming what does isomorphic mean?",
      "answer": "It means that the code can be run on both the client and server.<br><br>For example, isomorphic mithril code refers to code that can be rendered server-side, and also run as a SPA on the client-side.",
      "selected": "file1"
    },
    {
      "question": "instead of using my lsd command, what command should you use?",
      "answer": "tree",
      "selected": "file1"
    },
    {
      "question": "instead of yum, use what?",
      "answer": "dnf<br><br>it's the successor to yum in newest centos versions.",
      "selected": "file1"
    },
    {
      "question": "jj equivalent of git commit --amend",
      "answer": "jj squash",
      "selected": "file1"
    },
    {
      "question": "jj: how to stop tracking a path? ie a file or folder?",
      "answer": "Just add it to .gitignore and run `jj file untrack &lt;path&gt;`",
      "selected": "file1"
    },
    {
      "question": "jujitsu: you change your mind and want changes you've made to be in multiple commits",
      "answer": "jj split",
      "selected": "file1"
    },
    {
      "question": "jump 5 lines below",
      "answer": "5j<br>OR<br>:+5",
      "selected": "file1"
    },
    {
      "question": "jump paragraph downward",
      "answer": "}",
      "selected": "file1"
    },
    {
      "question": "jump paragraph upwards",
      "answer": "{",
      "selected": "file1"
    },
    {
      "question": "jump to the end of a word",
      "answer": "e",
      "selected": "file1"
    },
    {
      "question": "jump to the end of the previous WORD",
      "answer": "gE",
      "selected": "file1"
    },
    {
      "question": "left",
      "answer": "h",
      "selected": "file1"
    },
    {
      "question": "let a = 'hello'<br>let b = a<br>delete b<br>console.log(a) // what is the output?",
      "answer": "'hello'",
      "selected": "file1"
    },
    {
      "question": "let a = {<br>  'hello': 'world'<br>}<br><br>let b = a<br><br>delete b.hello<br><br>console.log(a) // what is the output?",
      "answer": "{ } // empty object<br><br>Even though b is a reference to a, and if we delete b, a will be unaffected, we are still able to delete the contents of a by accessing through b.",
      "selected": "file1"
    },
    {
      "question": "list all Zshell widgets (functions that are bound to key sequences.)",
      "answer": "zle -l",
      "selected": "file1"
    },
    {
      "question": "mac: desktop switcher: view all",
      "answer": "pinky + thump up<br>ctrl + mod up<br><br>Down to return",
      "selected": "file1"
    },
    {
      "question": "measure system resources while running a program that can be run in the terminal",
      "answer": "time<br><br>For example: `time sleep 5`",
      "selected": "file1"
    },
    {
      "question": "move a WORD ahead (which includes special characters)",
      "answer": "W",
      "selected": "file1"
    },
    {
      "question": "move a WORD backwards (which includes special characters)",
      "answer": "B",
      "selected": "file1"
    },
    {
      "question": "move a word ahead",
      "answer": "w",
      "selected": "file1"
    },
    {
      "question": "move backward WORD-by-WORD",
      "answer": "B",
      "selected": "file1"
    },
    {
      "question": "move forward WORD-by-WORD",
      "answer": "W",
      "selected": "file1"
    },
    {
      "question": "move forward word-by-word",
      "answer": "w",
      "selected": "file1"
    },
    {
      "question": "move to beginning of file",
      "answer": "gg",
      "selected": "file1"
    },
    {
      "question": "move to next occurence of character, on current line",
      "answer": "f&lt;char&gt;<br><br>ie `f(` movies cursor to next (",
      "selected": "file1"
    },
    {
      "question": "muscles that attach to c1?",
      "answer": "levator scapula<br>obliquus inferior capitis<br>obliquus superior capitis<br>rectus capitis lateralis<br>rectus capitis anterior<br>splenius cervicis",
      "selected": "file1"
    },
    {
      "question": "nginx: how to verify your config file is syntactically correct, will not throw errors?",
      "answer": "nginx -t",
      "selected": "file1"
    },
    {
      "question": "on dorsiflexion how does the tibio-fibular joint move?",
      "answer": "the distal tibiofibular joint glides posteriorly while the proximal tibiofibular joint glides anteriorly.",
      "selected": "file1"
    },
    {
      "question": "paste",
      "answer": "p (put)",
      "selected": "file1"
    },
    {
      "question": "path.join() vs path.resolve()",
      "answer": "path.resolve() returns the absolute path.",
      "selected": "file1"
    },
    {
      "question": "pm2&nbsp;<br>vs<br>yarn pm2",
      "answer": "`pm2` will use the global version. Which won't support&nbsp;--stop-exit-codes.<br><br>`yarn pm2` will use the version I checked out, which is in my project's lib folder.",
      "selected": "file1"
    },
    {
      "question": "poetry:<br><br>Change python version",
      "answer": "poetry env use 3.11.4",
      "selected": "file1"
    },
    {
      "question": "postgres: When inserting bulk data.. what happens if one row has a unique contraint error?",
      "answer": "The entire operation is rolled back and no rows are added into the table.<br><br>This behaviour can be overridded by using `ON CONFLICT`.<br><br>But this is proably not a good thing to do. The purpose behind this behaviour is that you don't want to leave a database in an in-between state. You want the entire operation to finish, or be rolled back.<br><br>This makes debugging much easier.. Imagine if a bunch of rows were conflicting but you didn't get an alert. It's much easier if the entire operation failed and had to be rolled back. Then you can debug, and the database will be back into the state is started in before the operation.<br><br>Remember: databases are heavy and each operation should be carefully considered. That's why it's better to be careful when moving from one state to another.",
      "selected": "file1"
    },
    {
      "question": "preguntarse",
      "answer": "Wonder",
      "selected": "file1"
    },
    {
      "question": "python: what is 16_096?",
      "answer": "It means 16,096. It's just a convention for representing numbers in python.",
      "selected": "file1"
    },
    {
      "question": "redo",
      "answer": "CTRL+r",
      "selected": "file1"
    },
    {
      "question": "remove an env var",
      "answer": "unset",
      "selected": "file1"
    },
    {
      "question": "revert to a commit 5 commits ago (using git log)",
      "answer": "\"<pre><code>git log<br><span style=\"\"color: rgb(153, 153, 153);\"\"># use the arrow keys to scroll up and down in history</span><br><span style=\"\"color: rgb(153, 153, 153);\"\"># once you've found your commit, save the hash</span><br>git revert [saved hash]<br><span style=\"\"color: rgb(153, 153, 153);\"\"># git will create a new commit that undoes that commit</span><br><span style=\"\"color: rgb(153, 153, 153);\"\"># follow prompts to edit the commit message</span><br><span style=\"\"color: rgb(153, 153, 153);\"\"># or just save and commit</span></code></pre>\"",
      "selected": "file1"
    },
    {
      "question": "script to find all cronjobs for all users",
      "answer": "for user in $(cut -f1 -d: /etc/passwd); do crontab -u $user -l; done",
      "selected": "file1"
    },
    {
      "question": "scroll up",
      "answer": "scroll up",
      "selected": "file1"
    },
    {
      "question": "self-similarity vs autocorrelation",
      "answer": "\"[math]<br><br><b>self-similarity</b>&nbsp;is a mathematical property where an object looks the same or very similar to itself as it is scaled up or down.<br><br>If self-similarity is analogous to <i>temperature</i>&nbsp;then&nbsp;<b>autocorrelation</b>&nbsp;is analgous to the <i>thermometer</i>.<br>It's a way of measuring self-similarity.<br><br>",
      "selected": "file1"
    },
    {
      "question": "should I use git checkout?",
      "answer": "if switching branches, use the newer command `git switch`",
      "selected": "file1"
    },
    {
      "question": "show all running apps",
      "answer": "running list",
      "selected": "file1"
    },
    {
      "question": "ssh:<br><br>Scenario... I created a new ssdnodes box called blue-box. I added an entry on my local machine to ~/.ssh/config which routes blue-box to the ip address.<br><br>I created a pirvate and public key. Where do I put the public key?",
      "answer": "Not in /root/.ssh/authorized_keys.<br><br>In /users/luke/.ssh/authorized_keys",
      "selected": "file1"
    },
    {
      "question": "start selection",
      "answer": "v",
      "selected": "file1"
    },
    {
      "question": "temerity",
      "answer": "excessive confidence or boldness; audacity.",
      "selected": "file1"
    },
    {
      "question": "the muscle's length remains constant during the movement because the joint angle or pivot point is changing, allowing for a consistent speed of motion.",
      "answer": "Isokinetic movement",
      "selected": "file1"
    },
    {
      "question": "trance",
      "answer": "a half-conscious state, an absense of response to external stimuli",
      "selected": "file1"
    },
    {
      "question": "uhk, chrome, brave backwards/forwards",
      "answer": "Command + Left<br>Command + Right",
      "selected": "file1"
    },
    {
      "question": "undo",
      "answer": "u",
      "selected": "file1"
    },
    {
      "question": "up",
      "answer": "k",
      "selected": "file1"
    },
    {
      "question": "use arrow keys on uhk",
      "answer": "Mod + pointer, middle, middle, ring<br>Thumb + pointer, mid, mid, ring",
      "selected": "file1"
    },
    {
      "question": "use lsof to get the <b>current working directories</b> of processes by:<br><br>1. name<br>2. pid",
      "answer": "\"<code>lsof -a -d cwd -c commandname<font face=\"\"Arial\"\"><br></font></code><code><font face=\"\"Arial\"\"><br></font>lsof -a -d cwd -p processid</code>&nbsp;<br><br>---<br><br>Commands:<br><br>lsof -a -d cwd -c commandname<br><br>Lists processes whose current working directory (cwd) is shown.<br><br>-c programname: filter by command name.<br><br>-d cwd: restrict to file descriptor of type cwd.<br><br>-a: AND all conditions (i.e., must match -c and -d).<br><br><br>Notes:<br><br>-a is essential here; without it, lsof would return results matching either -d cwd or -p/-c, which isn\u2019t what you want.<br><br>-d cwd zeroes in on the current working directory descriptor.<br><br>This is useful for finding what directory a process is \"\"in\"\".\"",
      "selected": "file1"
    },
    {
      "question": "use terminal in cursor to open all .talon files under the luke folder.",
      "answer": "fd -p -g '**/luke/**/*.talon' | xargs cursor",
      "selected": "file1"
    },
    {
      "question": "using .env files to turn certain features on and off can lead to using a technique called what?",
      "answer": "Feature Toggle",
      "selected": "file1"
    },
    {
      "question": "website for creating graph paper, dotted paper, etc",
      "answer": "\"<a href=\"\"https://gridzzly.com/\"\">https://gridzzly.com/</a>\"",
      "selected": "file1"
    },
    {
      "question": "what does HEAD~ mean?",
      "answer": "It means the parent commit of the HEAD. So the previous commit before the most-recent one.",
      "selected": "file1"
    },
    {
      "question": "what does `exit 0` mean?",
      "answer": "Success. No errors.",
      "selected": "file1"
    },
    {
      "question": "what does the following do?<br><br>| xargs -I {} rm -r stickers/{}",
      "answer": "-I {} tells xargs we want to use {} as a placeholder for the piped input.<br><br>Then we rm -r stickers/{}<br><br>We could use any string as a placeholder.",
      "selected": "file1"
    },
    {
      "question": "what is `git switch`?",
      "answer": "A newer command that allows you to specifically checkout branches.",
      "selected": "file1"
    },
    {
      "question": "what is it called when a person is about to get over a bad habit and then they start to crave it as their last chance?",
      "answer": "Extinction Burst",
      "selected": "file1"
    },
    {
      "question": "what is similar to git branches in jj?",
      "answer": "jj bookmarks",
      "selected": "file1"
    },
    {
      "question": "when running `jj log` how do you see ALL commits if some you want to see are missing?",
      "answer": "jj log -r ::<br>OR&nbsp;<br>jj log -r 'all()'",
      "selected": "file1"
    },
    {
      "question": "words with space at beginning and end<br><br>ie result: ` hello world `",
      "answer": "padded<br><br>ie padded hello world<br>&gt; ` hello world `",
      "selected": "file1"
    },
    {
      "question": "youtube: fast forward 5 seconds",
      "answer": "-&gt;",
      "selected": "file1"
    },
    {
      "question": "youtube: rewind 5 seconds",
      "answer": "&lt;-",
      "selected": "file1"
    }
  ],
  "different_cards": [
    {
      "question": "\"",
      "file1_answer": "\"[baye's theorem]<br><br>Show visual proof of Baye's Theorem.<br><br><br>\t<img src=\"\"CleanShot 2025-05-09 at 14.17.18@2x.png\"\"><br><div id=\"\"io-extra-wrapper\"\">",
      "file2_answer": "\":g/^function /,/^end$/d",
      "selected": "file1"
    },
    {
      "question": "\"<img src=\"\"paste-b6c572fc54c2b473d56d1eacab2316b893dd8aa1.jpg\"\">\"",
      "file1_answer": "<b>left side:</b><br>sacrospinous ligament<br><br><b>right side: (from top to bottom)</b><br>posterior sacroiliac ligament<br>sacrospinous ligament<br>sacrotuberous ligament",
      "file2_answer": "<b>right side: (from top to bottom)</b><br>posterior sacroiliac ligament<br>sacrospinous ligament<br>sacrotuberous ligament",
      "selected": "file1"
    },
    {
      "question": "[tech] [bash]<br><br>The pid is 1169 and I want to now find out where the process is coming from. <br><br>What folder on my machine is it from?",
      "file1_answer": "\"<div style=\"\"background:#f99;\"\"><br><span>pwdx 1169</span><br><br><span><b>pwdx</b> means print working directory of a process.</span><br></div><br><br><div style=\"\"background:#99f;\"\"><br><span>ps -p -f 1169</span><br><pre><br>-p stands for process id<br>-f stands for full format <br></pre><br></div><br>\"",
      "file2_answer": "\"<div style=\"\"background:#f99;\"\"><br><span>pwdx 1169</span><br><br><span><b>pwdx</b> means print working directory of a process.</span><br></div><br><br><div style=\"\"background:#99f;\"\"><br><span>ps -p -f 1169</span><br><q>Please Show Process Fully</q><br><pre><br>-p stands for process id<br>-f stands for full format <br></pre><br></div><br>\"",
      "selected": "file1"
    },
    {
      "question": "[tech]<br><br>What kind of Unaccounted / Accounting Errors might you encounter?",
      "file1_answer": "Configuration Drift<br>Data Packet Loss<br>Misconfiguration<br>Misalignment<br>Resource Not Found<br>State Management Errors<br>Type Errors<br><br>CD MM RST<br><br>CDs Makes the Most Retarded Sense Today",
      "file2_answer": "Configuration Drift<br>Data Packet Loss<br>Misconfiguration<br>Misalignment<br>Resource Not Found<br>State Management Errors<br>Type Errors<br><br><pre><br>CD MM RST<br><br>Configuring Data or Misconfiguring and Misaligning Resources, State Management and Type Errors.<br><br>Imagine: <br><br>M&Ms are used by a fat accountant.<br>He is old and uses CDs and has a Nintendo.<br>You throw a CD at his M&Ms, and it lands into his Nintendo, and he presses reset because he's retarded.<br></pre>",
      "selected": "file1"
    }
  ],
  "unique_file1": [
    {
      "question": "\"<div>[tech]<br>[python]<br></div><div><br></div><div>Compare the two in regards to setting breakpoints:<br></div><div><br></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #569cd6;\"\"><br></span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #569cd6;\"\">class</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #4ec9b0;\"\">TestGlobFindFilesMatchingPattern</span><span style=\"\"color: rgb(255, 255, 255);\"\">:</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #dcdcaa;\"\">&nbsp; &nbsp; @pytest.fixture</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">autouse</span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #569cd6;\"\">True</span><span style=\"\"color: #ffffff;\"\">)</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #569cd6;\"\">&nbsp; &nbsp; def</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #dcdcaa;\"\">setup</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">self</span><span style=\"\"color: #ffffff;\"\">):</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #9cdcfe;\"\">&nbsp; &nbsp; &nbsp; &nbsp; self</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #9cdcfe;\"\">test_dir</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #ffffff;\"\"> getTestDir()</span></span></div><br><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #569cd6;\"\">&nbsp; &nbsp; def</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #dcdcaa;\"\">test_1</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">self</span><span style=\"\"color: #ffffff;\"\">):</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #9cdcfe;\"\">&nbsp; &nbsp; &nbsp; &nbsp; test_dir</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">self</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #9cdcfe;\"\">test_dir</span></span></div><div><span style=\"\"color: #9cdcfe;\"\"><br></span></div><div><span style=\"\"color: #ffffff;\"\"> </span></div><div><span style=\"\"color: #ffffff;\"\"> </span></div><div><span style=\"\"color: #f44747;\"\">----------------</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(34, 34, 34);\"\">VERSUS</span><span style=\"\"color: #f44747;\"\">----------------</span><span style=\"\"color: #d4d4d4;\"\">-</span></div><div><span style=\"\"color: #ffffff;\"\"> </span></div><div><span style=\"\"color: #ffffff;\"\"> </span></div><div><span style=\"\"color: #dcdcaa;\"\"><br></span></div><div><span style=\"\"color: rgb(220, 220, 170); background-color: rgb(34, 34, 34);\"\">@pytest.fixture</span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #569cd6;\"\">def</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #dcdcaa;\"\">env_data</span><span style=\"\"color: #ffffff;\"\">():    </span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #9cdcfe;\"\">&nbsp; &nbsp; test_environment_data</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #ffffff;\"\"> {</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #ce9178;\"\">&nbsp; &nbsp; &nbsp; &nbsp; \"\"test_dir\"\"</span><span style=\"\"color: #ffffff;\"\">: getTestDir()</span></span></div><div><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(34, 34, 34);\"\">&nbsp; &nbsp; }</span></div><br><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #c586c0;\"\">&nbsp; &nbsp; yield</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">test_environment_data</span></span></div><br><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #569cd6;\"\">def</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #dcdcaa;\"\">test_1</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">env_data</span><span style=\"\"color: #ffffff;\"\">):</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #9cdcfe;\"\">&nbsp; &nbsp; test_dir</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">env_data</span><span style=\"\"color: #ffffff;\"\">[</span><span style=\"\"color: #ce9178;\"\">\"\"test_dir\"\"</span><span style=\"\"color: #ffffff;\"\">]</span></span></div>\"",
      "answer": "If I set a breakpoint inside of the setup (setup() vs env_data()) for some reason (at least in vscode) the breakpoint will only be caught in the second example.<br><br>Breakpoints set inside of the tests themselves are ok in both cases.",
      "selected": true
    },
    {
      "question": "\"[tech]<br>[bash]<br><br>When debugging a shell script in vscode/cursor, the watch statement for debug_result is 'declare -- debug_result=\"\"5\"\"'<br><br>What if I want it to simply be '5'?\"",
      "answer": "Watch ${debug_result} instead of debug_result",
      "selected": true
    },
    {
      "question": "\"[tech]<br>[bash]<br><br>Why doesn't this work?<br><br>find . | ./filter_out **/.vscode/** **/.venv/**<br><br>But this does?<br><br>find . | ./filter_out \"\"**/.vscode/**\"\" \"\"**/.venv/**\"\"\"",
      "answer": "\"When using quotes \"\"\"\" the arguments are passed directly into the function.<br><br>When not using quotes it is called \"\"globbing\"\" and the shell attempts to convert the glob in the shell before passing it on to the function.\"",
      "selected": true
    },
    {
      "question": "\"[tech]<br>[python]<br><br><img src=\"\"Screenshot 2023-11-30 at 7.21.49 PM.png\"\"><br><br>Is it good to have an __init__.py file for each utility directory?\"",
      "answer": "\"<img src=\"\"Screenshot 2023-11-30 at 7.21.54 PM.png\"\"><br><br>The value of doing so allows you to import it like so:<br>from util.dirName import subFunction.<br><br>The cost of doing so is when you want to move the files around, you will have to change a lot of things. VSCode will automatically update references to the file path, but if I drag util/myFile.py into util/myDir then I will also have to edit util/myDir/__init__.py. This makes it heavy and difficult to play around with the folder and file structure.<br><br>If we leave everything in util/__init__.py and don't have __init__ files inside each subDir then it will be much more lightweight. And we can still import things like `from util import anything.py`<br><br>This makes a lot more sense\"",
      "selected": true
    },
    {
      "question": "\"[tech]<br>[python]<br><br>Difference between these 2?<br><br>python -u \"\"$(dirname \"\"$0\"\")/filter_for.py\"\" \"\"$@\"\"<br><br>python \"\"$(dirname \"\"$0\"\")/filter_for.py\"\" \"\"$@\"\"\"",
      "answer": "\"<div>python -u: The -u option forces Python to run in unbuffered mode, meaning output is written directly to stdout as soon as it is available, without any delay from buffering.</div>",
      "selected": true
    },
    {
      "question": "\"[tech]<br>[python]<br><br>What do I do if I try to run python tests in vscode and see the following:<br><br><img src=\"\"Screenshot 2023-12-06 at 4.43.53 PM.png\"\">\"",
      "answer": "\"<span style=\"\"color: rgb(12, 13, 14); background-color: rgb(227, 230, 232);\"\">pytest --collect-only<br></span><br>Run this command to see if there are any errors.\"",
      "selected": true
    },
    {
      "question": "\"[tech]<br>[vscode]<br><br><img src=\"\"CleanShot 2025-05-01 at 16.56.44@2x.png\"\"><br><br>The top used to just say \"\"viscera\"\". To get it to show the following what do I do?\"",
      "answer": "In settings, search for window.title.<br><br>Bonus: Then you can set it to something like ${activeEditorShort}${separator}${folderPath}",
      "selected": true
    },
    {
      "question": "\"[tech]<br>[vscode]<br><br>I was having an issue in vscode where my python code was running through the command line but when I ran it directly:<br><br>```<br>/usr/bin/env /Users/luketych/Dev/_P<br>rojects/_ktr/_srt/poetry/ibReader/.venv/bin/python /Users/luketych/.vscode/exte<br>nsions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../d<br>ebugpy/launcher 51366 -- -m poetry run python src_test/__init__.py <br>E+00016.116: Failed to kill Debuggee[PID=8101]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Traceback (most recent call last):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File \"\"/Users/luketych/.vscode/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/launcher/debuggee.py\"\", line 190, in kill<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; os.killpg(process.pid, signal.SIGKILL)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PermissionError: [Errno 1] Operation not permitted<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stack where logged:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File \"\"/Users/luketych/.vscode/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/launcher/debuggee.py\"\", line 192, in kill<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; log.swallow_exception(\"\"Failed to kill {0}\"\", describe())<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File \"\"/Users/luketych/.vscode/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/common/log.py\"\", line 215, in swallow_exception<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _exception(format_string, *args, **kwargs)<br>```<br><br>This is a problem with the debugger. <br><br>1. What did I do to debug this?<br>2. How did I solve it?\"",
      "answer": "1. I copied the code that vscode was running:<br>```<br>cd /Users/luketych/Dev/_Projects/_k<br>tr/_srt/poetry/ibReader ; /usr/bin/env /Users/luketych/Dev/_Projects/_ktr/_srt/<br>poetry/ibReader/.venv/bin/python /Users/luketych/.vscode/extensions/ms-python.p<br>ython-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher 51<br>780 -- -m poetry run -vvv python -m src<br>```<br>, pasted it into the terminal and ran it to see what error I would get.<br><br>2. I updated the vscode python extension. I downgraded it earlier to try to fix another bug.<br><br>Lesson: when changing infrastructure or my tools make sure they run the same before I stop working. <br>@think: Take brief notes on the changes I make and log them into github?",
      "selected": true
    },
    {
      "question": "All words capitalized",
      "answer": "title<br>ie. title this is a test<br>This Is A Test",
      "selected": true
    },
    {
      "question": "Cut the 5th line above the cursor",
      "answer": ":-5d",
      "selected": true
    },
    {
      "question": "How do you access the postgres db?<br><br>For example, in my postgres container.",
      "answer": "<ol><li><pre><div><div><code>su - postgres</code></div></div></pre></li><li><div><code>psql</code></div></li></ol><br><br>Or psql -U postgres<br>",
      "selected": true
    },
    {
      "question": "How to make a script from the command line without entering vim or any other tool?",
      "answer": "\"1. cat &gt; my_file.sh &lt;&lt; EOL<br><br>2. Then I can type my script line-by-line<br><br>3. To finish, type \"\"EOL\"\", and return.\"",
      "selected": true
    },
    {
      "question": "Peroneus longus, brevis actions?",
      "answer": "Eversion, plantar-flexion",
      "selected": true
    },
    {
      "question": "Types of programming errors.<br><br>Think Cells",
      "answer": "\"<img src=\"\"cells-programming-errors-33ce76b0203860e909a13b747880fb781fc7ba61.jpg\"\">\"",
      "selected": true
    },
    {
      "question": "Use lsof to return only the process id's that are using port 1234",
      "answer": "lsof -ti :1234",
      "selected": true
    },
    {
      "question": "What does `cross-env NODE_ENV=custom-env-vars mocha test/ --recursive --exit` do?",
      "answer": "It uses cross-env, which sets the environment variables, which gets them from custom-env-vars.env, and then uses mocha to look inside the test/ folder, using the recursive option to look for test files in the subdirectories of test/. Finally it exits the process once finished.",
      "selected": true
    },
    {
      "question": "What is an Integration Error?",
      "answer": "\"<div><b>Integration Error</b></div>",
      "selected": true
    },
    {
      "question": "When running `npm install &lt;pkg&gt; --global`, how do I know to which directory it is being installed to on my machine?",
      "answer": "npm root -g",
      "selected": true
    },
    {
      "question": "Why might oncreate() not be firing?",
      "answer": "Server Side Rendering",
      "selected": true
    },
    {
      "question": "[[think]] [[reflect]]<br><br>What position is worst for the spine when working?",
      "answer": "Flexed/rounded because when the spine is extended then all vertebrae are locked and stable.<br><br>When rounded they are all unstable and can shift and rotate easily. So if you have bad habits and are twisting or leaning then it will lead to a lot of problems.<br><br>A flexed spine is good and natural for certain lifting, movements. But under a constant long duration of sitting with a flexed position we have to be aware of the strain being put on certain tissues.",
      "selected": true
    },
    {
      "question": "[anatomy]<br><br>Muscles that are all close to the medial foot arch<br><br>Hint: 6 of them ",
      "answer": "Abductor Hallucis<br>Flexor Digitorum Longus<br>Flexor Hallucis Longus<br>Flexor Hallucis Brevis<br>Tibialis Posterior<br>Tibialis Anterior",
      "selected": true
    },
    {
      "question": "[git]<br><br>Scenario:&nbsp;<br><br>I created a repo, which lives inside of viscera/.<br><br>Outside of that folder, I have descriptions/ and other files. I also turned that into a git repo as well.<br><br>I accidentally did `git add .` in the outer repo, and it added everything in viscera/ as well. I haven't made any commits or pushes yet.<br><br>How do I remove viscera/ from the staging area?",
      "answer": "\"<div>[WRONG]</div><div><h3><b>\u274c&nbsp;</b><b style=\"\"font-size: 20px;\"\">git restore --staged viscera</b></h3></div><div><div>fatal: could not resolve HEAD</div></div><div><br></div><div>",
      "selected": true
    },
    {
      "question": "[tech] [macos]<br><br>Finder:<br> How do I select an item in the Favorites sidebar using only the keyboard?",
      "answer": "1) Shift-CMD-G to open a Go To Folder window.<br><br>2) Type the name of the favorite I see in the sidebar and press enter.",
      "selected": true
    },
    {
      "question": "[tech] [macos]<br><br>Finder:<br> previous / next folder",
      "answer": "CMD-[<br>CMD-]",
      "selected": true
    },
    {
      "question": "[tech] [vscode]<br><br>list and select a file",
      "answer": "Ctrl+tab",
      "selected": true
    },
    {
      "question": "[tech]<br><br>Finder: start search",
      "answer": "CMD-F",
      "selected": true
    },
    {
      "question": "[tech]<br><br>Youtube: fast forward 10 seconds",
      "answer": "l (lower-case L)",
      "selected": true
    },
    {
      "question": "[tech]<br><br>brave: <br>Recover previous tab",
      "answer": "Cmd+Shift+T",
      "selected": true
    },
    {
      "question": "[tech]<br>[bash]<br><br>When writing a custom script using eza, fzf, htop why might the formatting be being messed up?<br><br>For example, I was using eza and when I run it in the terminal alone it prints icons and a nice grid layout. When I combined it with other commands in a custom script it was losing all formats.<br><br>Besides the quirks within vscode, what else might be happening?",
      "answer": "&nbsp; &nbsp; Programs like eza, ls, fzf, htop, etc. check if stdout is a real terminal<br>&nbsp; &nbsp; Without a real TTY, they disable formatting, color, layout, etc.",
      "selected": true
    },
    {
      "question": "[tech]<br>[database]<br><br><div><b>In SQLite, what does \u201csnapshot-safe\u201d mean?</b><b></b></div>",
      "answer": "\"<div>It means that <b>readers see a consistent snapshot of the database as it existed at the moment their read began</b>, even if a write occurs during the read.</div>",
      "selected": true
    },
    {
      "question": "[tech]<br>[databases]<br><br>Better to use camelCase or underscore_case for column names in a database?",
      "answer": "\"CREATE TABLE ticklerFile (<br>&nbsp;&nbsp;&nbsp; id SERIAL PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; type TEXT,<br>&nbsp;&nbsp;&nbsp; parentKey TEXT,<br>&nbsp;&nbsp;&nbsp; parentOriginalName TEXT,<br>&nbsp;&nbsp;&nbsp; image_name TEXT,<br>&nbsp;&nbsp;&nbsp; snoozeToDate DATE,<br>&nbsp;&nbsp;&nbsp; snoozeToTime TIME,<br>&nbsp;&nbsp;&nbsp; autoSnoozeDays INTEGER,<br>&nbsp;&nbsp;&nbsp; image_hash TEXT UNIQUE,<br>&nbsp;&nbsp;&nbsp; image_data BYTEA<br>);<br><br>In VSCODE it looks like this:<br><br><img src=\"\"Screenshot 2024-07-18 at 3.31.41\u202fPM.png\"\"><br><br>All of the capital letters are lost.<br><br><br>**** Another example, where when not sure what to do it is best to stick to convention because you don't know how things will be affected downstream.\"",
      "selected": true
    },
    {
      "question": "[tech]<br>[git]<br><br>how do I see the changes between your local branch and the remote branch?",
      "answer": "git diff origin/main",
      "selected": true
    },
    {
      "question": "[tech]<br>[python]<br><br>Differences between pytest and unittest.",
      "answer": "\"Pytest has simpler, more powerful discovery:<br><br>`pytest .` will automatically search all subdirs for \"\"test_*.py\"\" files.<br><br>unittest requires something like `python -m unittest discover -s \"\".\"\" -p \"\"test_*.py\"\"`<br>and it doesn't recurse, and you can only add one directory with the -s command.<br><br>Also, you have to name the test folder something like test_mypackage. If you don't and you are testing multiple packages all with their test folders named \"\"test\"\" then in the TEST panel in vscode is will just show test, test, test, etc.<br>It won't tell you which is which.\"",
      "selected": true
    },
    {
      "question": "[tech]<br>[python]<br><br>When my python project is vscode is failing to link the namespace projects I set up, ie mylogging, utility, what do I need to do besides restarting vscode?",
      "answer": "Select the correct python interpreter. This is likely the cause, and the reason why restarting vscode is becuase vscode will go through this step on setting up.",
      "selected": true
    },
    {
      "question": "[tech]<br>[python]<br><br>Why is it important to put the pydocs below the function declaration rather than above?",
      "answer": "By putting it above, as in javascript, this is fighting against convention, which will cause vscode to not be able to pick up the information. So when I hover over the function name it will fail to show me the parameters, and description.",
      "selected": true
    },
    {
      "question": "[tech]<br>[talon]<br><br>Start vscode, or switch to it if it's already running",
      "answer": "Focus vscode<br>Launch vscode",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode] <br><br>keyboard:<br><br>focus on explorer and highlight current file that's open",
      "answer": "Shift + CMD + E",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode] [devcontainers]<br><br>In a VSCode Dev Container, how can you avoid permission issues with node_modules without needing a chown in postCreateCommand?",
      "answer": "\"Avoid the permission issue by ensuring that the container always uses the correct user (like node) from the start.<br><br>How to fix it properly:<br><br>1. In your Dockerfile, set the final USER to node:<br><br>USER node<br><br>2. In your devcontainer.json, ensure the container runs as the same user:<br><br>\"\"remoteUser\"\": \"\"node\"\"<br><br>3. Also, avoid creating node_modules or running npm install as root during image build.<br><br>---<br><br>By aligning the build-time and runtime user, node_modules is always owned by the correct user (node), so no sudo chown is needed in postCreateCommand.\"",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode] [windsurf]<br><br>How do you increase / decrease the width of the secondary sidebar (right sidebar)?",
      "answer": "\"You don't.<br><br>Workaround: <br><br>1. set keybinding to increase/decrease width of main view.<br>2. Hide/Show secondary sidebar (CMD+Alt+B) and sidebar (CMD+B), and then use keybindings to increase/decrease view width.<br><br> {<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"key\"\": \"\"cmd+alt+j\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"command\"\": \"\"runCommands\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"args\"\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"commands\"\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   \"\"workbench.action.decreaseViewWidth\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]<br>&nbsp;&nbsp;&nbsp;&nbsp; }<br>},<br><br>{<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"key\"\": \"\"cmd+alt+i\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"command\"\": \"\"runCommands\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"args\"\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"commands\"\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"workbench.action.increaseViewWidth\"\"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]<br>&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp; }\"",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>Back n forth between surrounding [ &amp; ], { &amp; }, ( &amp; ), etc",
      "answer": "CMD + Shift + \\",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>Hide/Show Bottom Panel (Problems, Output, Debug Console, Terminal, etc)",
      "answer": "CMD + J",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>How do you see a list of all vscode commands?",
      "answer": "\"Shift + Cmd + P<br><br>then&nbsp;<span style=\"\"color: rgb(240, 246, 252); background-color: rgb(34, 34, 34);\"\">Preferences: Open Default Keyboard Shortcuts (JSON)</span>\"",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>How to add a keyboard shortcut for any command?",
      "answer": "\"Find the command using Shift+CMD+P<br>Select the settings (gear icon),<br>then click on \"\"Keybinding\"\"\"",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>How to run a node script from the terminal and then attach the vscode debugger to it?",
      "answer": "\"1. Run the script in the terminal with the --inspect-brk option,<br><br>ie `yarn workspace @ktr-logging/index run test_logging --inspect-brk`<br><br>This will pause the debugger and wait for it to attach itself.<br><br>2. Then in launch.json file add a configuration like so:<br>&nbsp; &nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"type\"\": \"\"node\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"request\"\": \"\"attach\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"name\"\": \"\"Attach to Node\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"port\"\": 9229<br>&nbsp;&nbsp;&nbsp; }\"",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>Open two files side-by-side.",
      "answer": "Cmd+\\",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>Reopen last closed editor",
      "answer": "Cmd+Shift+T",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>Say I have a .vscode/tasks.json file but no .vscode/launch.json flle.<br><br>How do I run it?",
      "answer": "Shift+CMD+B",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>What option for Alt+B, Alt+F so it stops producing characters like&nbsp;\u222b\u0192?<br><br>1. What is the name of the specific setting?<br>2. What is the namespace for this setting?",
      "answer": "set to True: <br>macOptionIsMeta<br><br>Namespace: <br>terminal.integrated<br><br>full setting key: terminal.integrated.macOptionIsMeta",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>What to do if nodemon keeps saying the port is already in use when I save and it restarts my server?",
      "answer": "CMD-Q to quit VSCode, and then restart.<br><br>Check out my @ktr-srt/packages/api code since I am using some scripts in my package.json file to help with that.<br><br>check out ktr.bio/nodemon",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>What to do if these aren't loading?<br><br>from namespace.configuration import find_config<br>from namespace.dataManager import getInputDataDir<br>from namespace.util import getAbsPath",
      "answer": "Restart VSCode",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>What to do in VSCode if the file explorer keeps scrolling automatically?",
      "answer": "\"Search in settings for&nbsp;<span style=\"\"white-space: pre-wrap;\"\">explorer.autoReveal and set to False.</span>\"",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>alternative to enter",
      "answer": "Ctrl+m",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>close all tabs",
      "answer": "Command + Alt + T",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>collapse all folders",
      "answer": "CMD+0 (to switch to explorer)<br>CMD+left (to collapse all folders)",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>explorer open and close folder",
      "answer": "o",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>jsconfig.json files",
      "answer": "You can only have one that is used per project.<br><br>You can have more than one in a monorepo but I think from the current file VSCode will look up the directory tree and laod the first one it finds. So if I have one in the main monorepo folder, and none in the packages/util folder then it will use that one. But if I also have one inside of packages/util then it will use that one.",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>keyboard focus on explorer (for interacting w/ files and folders)",
      "answer": "Shift + CMD + E",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>launch vs attach?",
      "answer": "Launch is a recipe for starting your app in debug mode before VSCode attaches to it. This is more familiar from the perspective of server and backend development. VSCode launches and sets up the processes for you.<br><br>Attach is a recipe for how to connect VS Code's debugger to an app or process that's already running. This is more familiar from the perspective of frontend development, for example attaching VSCode's debugger to a browser that is already running.",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>swap back n forth between two tabs",
      "answer": "CTRL+tab",
      "selected": true
    },
    {
      "question": "[tech]<br>[vscode]<br><br>swap two lines that are next to each other",
      "answer": "Hold option and press up or down",
      "selected": true
    },
    {
      "question": "[vim]<br><br>What does this do?<br><br>:.,$s/old/new/g",
      "answer": "\"Replaces old with new from the current line until the end of the file.<br><br><br>In Vim, the comma in :.,$s/old/new/g separates the range of lines on which the substitution command should act.<br><br>Here's a breakdown:<br><br>. \u2192 the current line.<br><br>$ \u2192 the last line of the file.<br><br>.,$ \u2192 means \"\"from the current line to the end of the file\"\".<br><br><br>So:<br><br>:.,$s/old/new/g<br><br>says: \"\"Substitute 'old' with 'new' on every line from the current line (.) through the last line ($), globally on each line (g).\"\"<br><br>The comma is the range separator between the starting and ending lines. \"",
      "selected": true
    },
    {
      "question": "move to first non-blank character of line",
      "answer": "^",
      "selected": true
    },
    {
      "question": "poetry: What kind of dependency version specifier is this? ^<strong><code>1.2.3<br></code></strong><br>What does it mean?",
      "answer": "Caret specifier.<br><br>It means it is compatible with version 1.2.3 and any other backward-compatible versions up to, but not including, the next major release.<br><br>It is similar to ~= but a bit more flexible. It allows installing patch and minor releases that are backwar-compatible.<br><br><div><div><div><div><div><div><div><div><div><div><div><div><div><div><strong>Example</strong>: Let's say your project specifies a dependency with <code>^1.2.3</code>. Here's what it implies:</div><ul><li>You're okay with installing version 1.2.3 of the dependency.</li><li>You're also okay with installing any version within the same major release line (1.x.x) as long as it's backward-compatible with 1.2.3.</li><li>You won't automatically get version 2.0.0 or higher because those could potentially introduce breaking changes.</li></ul><div>For example, with <code>^1.2.3</code>, you might get versions like <code>1.2.4</code>, <code>1.3.0</code>, or <code>1.9.9</code>, but you won't get versions like <code>2.0.0</code> or <code>3.0.0</code> automatically. This provides a balance between stability and the availability of bug fixes and new features.</div></div></div></div><div><div><div></div><div></div></div></div><div></div></div><div><div></div></div></div></div></div></div></div></div></div></div></div><div><div><div></div><div><br></div></div></div>",
      "selected": true
    },
    {
      "question": "underscore-separated words",
      "answer": "snake<br><br>ie. snake this is a test<br>&gt; this_is_a_test",
      "selected": true
    }
  ],
  "unique_file2": [
    {
      "question": "\"<div>Compare the two in regards to setting breakpoints:<br></div><div><br></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #569cd6;\"\"><br></span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #569cd6;\"\">class</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #4ec9b0;\"\">TestGlobFindFilesMatchingPattern</span><span style=\"\"color: rgb(255, 255, 255);\"\">:</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #dcdcaa;\"\">&nbsp; &nbsp; @pytest.fixture</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">autouse</span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #569cd6;\"\">True</span><span style=\"\"color: #ffffff;\"\">)</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #569cd6;\"\">&nbsp; &nbsp; def</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #dcdcaa;\"\">setup</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">self</span><span style=\"\"color: #ffffff;\"\">):</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #9cdcfe;\"\">&nbsp; &nbsp; &nbsp; &nbsp; self</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #9cdcfe;\"\">test_dir</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #ffffff;\"\"> getTestDir()</span></span></div><br><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #569cd6;\"\">&nbsp; &nbsp; def</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #dcdcaa;\"\">test_1</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">self</span><span style=\"\"color: #ffffff;\"\">):</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #9cdcfe;\"\">&nbsp; &nbsp; &nbsp; &nbsp; test_dir</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">self</span><span style=\"\"color: #ffffff;\"\">.</span><span style=\"\"color: #9cdcfe;\"\">test_dir</span></span></div><div><span style=\"\"color: #9cdcfe;\"\"><br></span></div><div><span style=\"\"color: #ffffff;\"\"> </span></div><div><span style=\"\"color: #ffffff;\"\"> </span></div><div><span style=\"\"color: #f44747;\"\">----------------</span><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(34, 34, 34);\"\">VERSUS</span><span style=\"\"color: #f44747;\"\">----------------</span><span style=\"\"color: #d4d4d4;\"\">-</span></div><div><span style=\"\"color: #ffffff;\"\"> </span></div><div><span style=\"\"color: #ffffff;\"\"> </span></div><div><span style=\"\"color: #dcdcaa;\"\"><br></span></div><div><span style=\"\"color: rgb(220, 220, 170); background-color: rgb(34, 34, 34);\"\">@pytest.fixture</span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #569cd6;\"\">def</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #dcdcaa;\"\">env_data</span><span style=\"\"color: #ffffff;\"\">():    </span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #9cdcfe;\"\">&nbsp; &nbsp; test_environment_data</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #ffffff;\"\"> {</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #ce9178;\"\">&nbsp; &nbsp; &nbsp; &nbsp; \"\"test_dir\"\"</span><span style=\"\"color: #ffffff;\"\">: getTestDir()</span></span></div><div><span style=\"\"color: rgb(255, 255, 255); background-color: rgb(34, 34, 34);\"\">&nbsp; &nbsp; }</span></div><br><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #c586c0;\"\">&nbsp; &nbsp; yield</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">test_environment_data</span></span></div><br><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #569cd6;\"\">def</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #dcdcaa;\"\">test_1</span><span style=\"\"color: #ffffff;\"\">(</span><span style=\"\"color: #9cdcfe;\"\">env_data</span><span style=\"\"color: #ffffff;\"\">):</span></span></div><div><span style=\"\"background-color: rgb(34, 34, 34);\"\"><span style=\"\"color: #ffffff;\"\"></span><span style=\"\"color: #9cdcfe;\"\">&nbsp; &nbsp; test_dir</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #d4d4d4;\"\">=</span><span style=\"\"color: #ffffff;\"\"> </span><span style=\"\"color: #9cdcfe;\"\">env_data</span><span style=\"\"color: #ffffff;\"\">[</span><span style=\"\"color: #ce9178;\"\">\"\"test_dir\"\"</span><span style=\"\"color: #ffffff;\"\">]</span></span></div>\"",
      "answer": "If I set a breakpoint inside of the setup (setup() vs env_data()) for some reason (at least in vscode) the breakpoint will only be caught in the second example.<br><br>Breakpoints set inside of the tests themselves are ok in both cases.",
      "selected": true
    },
    {
      "question": "\"<img src=\"\"Screenshot 2023-11-30 at 7.21.49 PM.png\"\"><br><br>Is it good to have an __init__.py file for each utility directory?\"",
      "answer": "\"<img src=\"\"Screenshot 2023-11-30 at 7.21.54 PM.png\"\"><br><br>The value of doing so allows you to import it like so:<br>from util.dirName import subFunction.<br><br>The cost of doing so is when you want to move the files around, you will have to change a lot of things. VSCode will automatically update references to the file path, but if I drag util/myFile.py into util/myDir then I will also have to edit util/myDir/__init__.py. This makes it heavy and difficult to play around with the folder and file structure.<br><br>If we leave everything in util/__init__.py and don't have __init__ files inside each subDir then it will be much more lightweight. And we can still import things like `from util import anything.py`<br><br>This makes a lot more sense\"",
      "selected": true
    },
    {
      "question": "\"Difference between these 2?<br><br>python -u \"\"$(dirname \"\"$0\"\")/filter_for.py\"\" \"\"$@\"\"<br><br>python \"\"$(dirname \"\"$0\"\")/filter_for.py\"\" \"\"$@\"\"\"",
      "answer": "\"<div>python -u: The -u option forces Python to run in unbuffered mode, meaning output is written directly to stdout as soon as it is available, without any delay from buffering.</div>",
      "selected": true
    },
    {
      "question": "\"What do I do if I try to run python tests in vscode and see the following:<br><br><img src=\"\"Screenshot 2023-12-06 at 4.43.53 PM.png\"\">\"",
      "answer": "\"<span style=\"\"color: rgb(12, 13, 14); background-color: rgb(227, 230, 232);\"\">pytest --collect-only<br></span><br>Run this command to see if there are any errors.\"",
      "selected": true
    },
    {
      "question": "\"When debugging a shell script in vscode/cursor, the watch statement for debug_result is 'declare -- debug_result=\"\"5\"\"'<br><br>What if I want it to simply be '5'?\"",
      "answer": "Watch ${debug_result} instead of debug_result",
      "selected": true
    },
    {
      "question": "\"Why doesn't this work?<br><br>find . | ./filter_out **/.vscode/** **/.venv/**<br><br>But this does?<br><br>find . | ./filter_out \"\"**/.vscode/**\"\" \"\"**/.venv/**\"\"\"",
      "answer": "\"When using quotes \"\"\"\" the arguments are passed directly into the function.<br><br>When not using quotes it is called \"\"globbing\"\" and the shell attempts to convert the glob in the shell before passing it on to the function.\"",
      "selected": true
    },
    {
      "question": "\"[tech]<br><br>I was having an issue in vscode where my python code was running through the command line but when I ran it directly:<br><br>```<br>/usr/bin/env /Users/luketych/Dev/_P<br>rojects/_ktr/_srt/poetry/ibReader/.venv/bin/python /Users/luketych/.vscode/exte<br>nsions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../d<br>ebugpy/launcher 51366 -- -m poetry run python src_test/__init__.py <br>E+00016.116: Failed to kill Debuggee[PID=8101]<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Traceback (most recent call last):<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File \"\"/Users/luketych/.vscode/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/launcher/debuggee.py\"\", line 190, in kill<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; os.killpg(process.pid, signal.SIGKILL)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PermissionError: [Errno 1] Operation not permitted<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Stack where logged:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File \"\"/Users/luketych/.vscode/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/launcher/debuggee.py\"\", line 192, in kill<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; log.swallow_exception(\"\"Failed to kill {0}\"\", describe())<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; File \"\"/Users/luketych/.vscode/extensions/ms-python.python-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher/../../debugpy/common/log.py\"\", line 215, in swallow_exception<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _exception(format_string, *args, **kwargs)<br>```<br><br>This is a problem with the debugger. <br><br>1. What did I do to debug this?<br>2. How did I solve it?\"",
      "answer": "1. I copied the code that vscode was running:<br>```<br>cd /Users/luketych/Dev/_Projects/_k<br>tr/_srt/poetry/ibReader ; /usr/bin/env /Users/luketych/Dev/_Projects/_ktr/_srt/<br>poetry/ibReader/.venv/bin/python /Users/luketych/.vscode/extensions/ms-python.p<br>ython-2023.6.0/pythonFiles/lib/python/debugpy/adapter/../../debugpy/launcher 51<br>780 -- -m poetry run -vvv python -m src<br>```<br>, pasted it into the terminal and ran it to see what error I would get.<br><br>2. I updated the vscode python extension. I downgraded it earlier to try to fix another bug.<br><br>Lesson: when changing infrastructure or my tools make sure they run the same before I stop working. <br>@think: Take brief notes on the changes I make and log them into github?",
      "selected": true
    },
    {
      "question": "\"[vscode]<br><br><img src=\"\"CleanShot 2025-05-01 at 16.56.44@2x.png\"\"><br><br>The top used to just say \"\"viscera\"\". To get it to show the following what do I do?\"",
      "answer": "In settings, search for window.title.<br><br>Bonus: Then you can set it to something like ${activeEditorShort}${separator}${folderPath}",
      "selected": true
    },
    {
      "question": "Better to use camelCase or underscore_case for column names in a database?",
      "answer": "\"CREATE TABLE ticklerFile (<br>&nbsp;&nbsp;&nbsp; id SERIAL PRIMARY KEY,<br>&nbsp;&nbsp;&nbsp; type TEXT,<br>&nbsp;&nbsp;&nbsp; parentKey TEXT,<br>&nbsp;&nbsp;&nbsp; parentOriginalName TEXT,<br>&nbsp;&nbsp;&nbsp; image_name TEXT,<br>&nbsp;&nbsp;&nbsp; snoozeToDate DATE,<br>&nbsp;&nbsp;&nbsp; snoozeToTime TIME,<br>&nbsp;&nbsp;&nbsp; autoSnoozeDays INTEGER,<br>&nbsp;&nbsp;&nbsp; image_hash TEXT UNIQUE,<br>&nbsp;&nbsp;&nbsp; image_data BYTEA<br>);<br><br>In VSCODE it looks like this:<br><br><img src=\"\"Screenshot 2024-07-18 at 3.31.41\u202fPM.png\"\"><br><br>All of the capital letters are lost.<br><br><br>**** Another example, where when not sure what to do it is best to stick to convention because you don't know how things will be affected downstream.\"",
      "selected": true
    },
    {
      "question": "Differences between pytest and unittest.",
      "answer": "\"Pytest has simpler, more powerful discovery:<br><br>`pytest .` will automatically search all subdirs for \"\"test_*.py\"\" files.<br><br>unittest requires something like `python -m unittest discover -s \"\".\"\" -p \"\"test_*.py\"\"`<br>and it doesn't recurse, and you can only add one directory with the -s command.<br><br>Also, you have to name the test folder something like test_mypackage. If you don't and you are testing multiple packages all with their test folders named \"\"test\"\" then in the TEST panel in vscode is will just show test, test, test, etc.<br>It won't tell you which is which.\"",
      "selected": true
    },
    {
      "question": "How do you see a list of all vscode commands?",
      "answer": "\"Shift + Cmd + P<br><br>then&nbsp;<span style=\"\"color: rgb(240, 246, 252); background-color: rgb(34, 34, 34);\"\">Preferences: Open Default Keyboard Shortcuts (JSON)</span>\"",
      "selected": true
    },
    {
      "question": "How to run a node script from the terminal and then attach the vscode debugger to it?",
      "answer": "\"1. Run the script in the terminal with the --inspect-brk option,<br><br>ie `yarn workspace @ktr-logging/index run test_logging --inspect-brk`<br><br>This will pause the debugger and wait for it to attach itself.<br><br>2. Then in launch.json file add a configuration like so:<br>&nbsp; &nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"type\"\": \"\"node\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"request\"\": \"\"attach\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"name\"\": \"\"Attach to Node\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"port\"\": 9229<br>&nbsp;&nbsp;&nbsp; }\"",
      "selected": true
    },
    {
      "question": "Start vscode, or switch to it if it's already running",
      "answer": "Focus vscode<br>Launch vscode",
      "selected": true
    },
    {
      "question": "VSCode launch vs attach?",
      "answer": "Launch is a recipe for starting your app in debug mode before VSCode attaches to it. This is more familiar from the perspective of server and backend development. VSCode launches and sets up the processes for you.<br><br>Attach is a recipe for how to connect VS Code's debugger to an app or process that's already running. This is more familiar from the perspective of frontend development, for example attaching VSCode's debugger to a browser that is already running.",
      "selected": true
    },
    {
      "question": "VsCode: collapse all folders",
      "answer": "CMD+0 (to switch to explorer)<br>CMD+left (to collapse all folders)",
      "selected": true
    },
    {
      "question": "Vscode: alternative to enter",
      "answer": "Ctrl+m",
      "selected": true
    },
    {
      "question": "Vscode: explorer open and close folder",
      "answer": "o",
      "selected": true
    },
    {
      "question": "Vscode: keyboard focus on explorer (for interacting w/ files and folders)",
      "answer": "Shift + CMD + E",
      "selected": true
    },
    {
      "question": "What to do if nodemon keeps saying the port is already in use when I save and it restarts my server?",
      "answer": "CMD-Q to quit VSCode, and then restart.<br><br>Check out my @ktr-srt/packages/api code since I am using some scripts in my package.json file to help with that.<br><br>check out ktr.bio/nodemon",
      "selected": true
    },
    {
      "question": "What to do if these aren't loading?<br><br>from namespace.configuration import find_config<br>from namespace.dataManager import getInputDataDir<br>from namespace.util import getAbsPath",
      "answer": "Restart VSCode",
      "selected": true
    },
    {
      "question": "When my python project is vscode is failing to link the namespace projects I set up, ie mylogging, utility, what do I need to do besides restarting vscode?",
      "answer": "Select the correct python interpreter. This is likely the cause, and the reason why restarting vscode is becuase vscode will go through this step on setting up.",
      "selected": true
    },
    {
      "question": "When writing a custom script using eza, fzf, htop why might the formatting be being messed up?<br><br>For example, I was using eza and when I run it in the terminal alone it prints icons and a nice grid layout. When I combined it with other commands in a custom script it was losing all formats.<br><br>Besides the quirks within vscode, what else might be happening?",
      "answer": "&nbsp; &nbsp; Programs like eza, ls, fzf, htop, etc. check if stdout is a real terminal<br>&nbsp; &nbsp; Without a real TTY, they disable formatting, color, layout, etc.",
      "selected": true
    },
    {
      "question": "Why is it important to put the pydocs below the function declaration rather than above?",
      "answer": "By putting it above, as in javascript, this is fighting against convention, which will cause vscode to not be able to pick up the information. So when I hover over the function name it will fail to show me the parameters, and description.",
      "selected": true
    },
    {
      "question": "[Vscode]<br><br>swap two lines that are next to each other",
      "answer": "Hold option and press up or down",
      "selected": true
    },
    {
      "question": "[physio]<br><br>Peroneus longus, brevis actions?",
      "answer": "Eversion, plantar-flexion",
      "selected": true
    },
    {
      "question": "[physio]<br>[[think]] [[reflect]]<br><br>What position is worst for the spine when working?",
      "answer": "Flexed/rounded because when the spine is extended then all vertebrae are locked and stable.<br><br>When rounded they are all unstable and can shift and rotate easily. So if you have bad habits and are twisting or leaning then it will lead to a lot of problems.<br><br>A flexed spine is good and natural for certain lifting, movements. But under a constant long duration of sitting with a flexed position we have to be aware of the strain being put on certain tissues.",
      "selected": true
    },
    {
      "question": "[talon]<br><br>All words capitalized",
      "answer": "title<br>ie. title this is a test<br>This Is A Test",
      "selected": true
    },
    {
      "question": "[talon]<br><br>underscore-separated words",
      "answer": "snake<br><br>ie. snake this is a test<br>&gt; this_is_a_test",
      "selected": true
    },
    {
      "question": "[tech] [macos]<br><br>Finder:<br><br> previous / next folder",
      "answer": "CMD-[<br>CMD-]",
      "selected": true
    },
    {
      "question": "[tech] [vim]<br><br>Cut the 5th line above the cursor",
      "answer": ":-5d",
      "selected": true
    },
    {
      "question": "[tech] [vscode]<br><br>Open two files side-by-side.",
      "answer": "Cmd+\\",
      "selected": true
    },
    {
      "question": "[tech]<br> [macos]<br><br>Finder:<br> How do I select an item in the Favorites sidebar using only the keyboard?",
      "answer": "1) Shift-CMD-G to open a Go To Folder window.<br><br>2) Type the name of the favorite I see in the sidebar and press enter.",
      "selected": true
    },
    {
      "question": "[tech]<br> [vscode]<br><br>list and select a file",
      "answer": "Ctrl+tab",
      "selected": true
    },
    {
      "question": "[tech]<br><br>Alternative to postman?",
      "answer": "HTTPie",
      "selected": true
    },
    {
      "question": "[tech]<br><br>Finder: <br><br>start search",
      "answer": "CMD-F",
      "selected": true
    },
    {
      "question": "[tech]<br><br>How do you access the postgres db?<br><br>For example, in my postgres container.",
      "answer": "1.<br>su - postgres<br>psql<br><br>2.<br>psql -U postgres<br>",
      "selected": true
    },
    {
      "question": "[tech]<br><br>Types of programming errors.<br><br>Think Cells",
      "answer": "\"<img src=\"\"cells-programming-errors-33ce76b0203860e909a13b747880fb781fc7ba61.jpg\"\">\"",
      "selected": true
    },
    {
      "question": "[tech]<br><br>Use lsof to return only the process id's that are using port 1234",
      "answer": "lsof -ti :1234",
      "selected": true
    },
    {
      "question": "[tech]<br><br>What can you do if you are running tests and they keep getting hung, or not exiting?",
      "answer": "- pass an exit flag. Ie mocha --exit<br>This tells mocha to force exit once all tests have finished running.<br><br>- perform a more thorough cleanup, shutdown after all tests are finished. There might be processes still running, async tasks, or db connections still open.",
      "selected": true
    },
    {
      "question": "[tech]<br><br>What does `cross-env NODE_ENV=custom-env-vars mocha test/ --recursive --exit` do?",
      "answer": "It uses cross-env, which sets the environment variables, which gets them from custom-env-vars.env, and then uses mocha to look inside the test/ folder, using the recursive option to look for test files in the subdirectories of test/. Finally it exits the process once finished.",
      "selected": true
    },
    {
      "question": "[tech]<br><br>What is an Integration Error?",
      "answer": "<div><b>Integration Error</b></div><br><div><br></div><br><div>An <b>integration error</b> occurs when two or more systems, services, or components <b>fail to interact correctly</b> due to mismatches in data, protocols, or expectations. These errors typically arise when different modules, APIs, or external dependencies are integrated into a larger system.</div>",
      "selected": true
    },
    {
      "question": "[tech]<br><br>What kind of dependency version specifier is this? ^<strong><code>1.2.3<br></code></strong><br>What does it mean?",
      "answer": "Caret specifier.<br><br>It means it is compatible with version 1.2.3 and any other backward-compatible versions up to, but not including, the next major release.<br><br>It is similar to ~= but a bit more flexible. It allows installing patch and minor releases that are backwar-compatible.<br><br><div><div><div><div><div><div><div><div><div><div><div><div><div><div><strong>Example</strong>: Let's say your project specifies a dependency with <code>^1.2.3</code>. Here's what it implies:</div><ul><li>You're okay with installing version 1.2.3 of the dependency.</li><li>You're also okay with installing any version within the same major release line (1.x.x) as long as it's backward-compatible with 1.2.3.</li><li>You won't automatically get version 2.0.0 or higher because those could potentially introduce breaking changes.</li></ul><div>For example, with <code>^1.2.3</code>, you might get versions like <code>1.2.4</code>, <code>1.3.0</code>, or <code>1.9.9</code>, but you won't get versions like <code>2.0.0</code> or <code>3.0.0</code> automatically. This provides a balance between stability and the availability of bug fixes and new features.</div></div></div></div><div><div><div></div><div></div></div></div><div></div></div><div><div></div></div></div></div></div></div></div></div></div></div></div><div><div><div></div><div><br></div></div></div>",
      "selected": true
    },
    {
      "question": "[tech]<br><br>When running `npm install &lt;pkg&gt; --global`, how do I know to which directory it is being installed to on my machine?",
      "answer": "npm root -g",
      "selected": true
    },
    {
      "question": "[tech]<br><br>brave: <br><br>Recover previous tab",
      "answer": "Cmd+Shift+T",
      "selected": true
    },
    {
      "question": "[tech]<br><br>su postgres <br>Vs<br>su - postgres",
      "answer": "<b>su postgres</b><br> Keeps the current directory and most environment variables (like PATH, HOME) from the original user. It does not simulate a login, so it may not load the 'postgres' user's shell configuration files, like ~/.bash_profile.<br><br><b>su - postgres</b><br>Simulates a login shell, changing to the 'postgres' user's home directory (usually /var/lib/postgres) and setting environment variables based on the 'postgres' user's configuration, ensuring the correct setup for PostgreSQL tasks.",
      "selected": true
    },
    {
      "question": "[tech]<br>[bash]<br><br>How to make a script from the command line without entering vim or any other tool?",
      "answer": "\"1. cat &gt; my_file.sh &lt;&lt; EOL<br><br>2. Then I can type my script line-by-line<br><br>3. To finish, type \"\"EOL\"\", and return.\"",
      "selected": true
    },
    {
      "question": "[tech]<br>[frontend]<br><br>Why might oncreate() not be firing?",
      "answer": "Server Side Rendering",
      "selected": true
    },
    {
      "question": "[tech]<br>[git]<br><br>Scenario:&nbsp;<br><br>I created a repo, which lives inside of viscera/.<br><br>Outside of that folder, I have descriptions/ and other files. I also turned that into a git repo as well.<br><br>I accidentally did `git add .` in the outer repo, and it added everything in viscera/ as well. I haven't made any commits or pushes yet.<br><br>How do I remove viscera/ from the staging area?",
      "answer": "\"<div>[WRONG]</div><div><h3><b>\u274c&nbsp;</b><b style=\"\"font-size: 20px;\"\">git restore --staged viscera</b></h3></div><div><div>fatal: could not resolve HEAD</div></div><div><br></div><div><br><div><div>\ud83e\uddef <b>Why This Happens</b><b></b></div><br><div>git restore --staged relies on HEAD (the latest commit) to know what to restore to.</div><br><div>If there are <b>no commits yet</b>, Git has no reference point \u2014 so the command fails.</div></div></div><div><br></div><div>[CORRECT]</div><div><div><h3><b>\u2705&nbsp;</b><b style=\"\"font-size: 20px;\"\">git reset viscera</b></h3></div><br><div><ul><li><br><div>Unstages viscera</div><br></li><li><br><div>\u2705 <b>Does NOT delete files from working directory.</b><b></b></div><br></li><li><br><div>\u2705 <b>If viscera was already committed then git will still track it.</b><b></b></div><br></li><li><br><div>No change to git commit history.</div></li></ul></div></div><div><br></div><div>[CORRECT]</div><div><div><h3><b>\u2705&nbsp;</b><b style=\"\"font-size: 20px;\"\">git rm --cached -r viscera</b></h3></div><div><ul><li><br><div>\u2705 <b>Keeps all files on disk. Does NOT delete files fom working directory.</b><b></b></div><br></li><li><br><div>\u2705 Git marks it for <b>deletion from the repo on the next commit.</b><b></b></div><br></li><li><br><div>\ud83d\udca1 Use when you want to:</div><br><div><ul><li><br><div>Stop tracking a folder</div><br></li><li><br><div>Add it to .gitignore afterward</div></li></ul></div></li></ul></div></div><div><b><br></b></div><div><h3><b>\u274c&nbsp;</b><b style=\"\"font-size: 20px;\"\">git rm -r viscera</b><b style=\"\"font-size: 20px;\"\">&nbsp;(\u26a0\ufe0f Dangerous)</b></h3></div><div><br><div><ul><li><br><div><div><ul><li><br><div><b>Deletes the viscera folder from disk</b><b></b></div><br></li><li><br><div>Removes it from Git <i>and</i> your filesystem</div><br></li><li><br><div>Only use if you want to permanently delete it</div></li></ul></div></div></li></ul></div></div><div><br></div>\"",
      "selected": true
    },
    {
      "question": "[tech]<br>[git]<br><br>how do I see the changes between your local branch and the remote branch?<br><br>Hint: use git diff",
      "answer": "git diff origin/main",
      "selected": true
    },
    {
      "question": "[tech]<br>[terminal]<br><br>Are modifier keys (shift, Ctrl, Alt, etc) reliable in the terminal?",
      "answer": "No.<br><br>Especially when combined with other keys.<br><br><br>Modifier keys like Ctrl, Shift, and Alt modify other key inputs but terminals handle them inconsistently. <br><br>Ctrl is usually recognized, Shift often changes letter case, and Alt can send ambiguous escape sequences. <br><br>Terminals use varying, non-standard escape codes to report modifiers, often failing to detect multiple modifiers simultaneously. <br><br>This inconsistency causes bugs and limits shortcut support, especially in remote shells or multiplexers. <br><br>Newer terminals improve support, but handling modifiers remains a common challenge in terminal UI development.<br>",
      "selected": true
    },
    {
      "question": "[tech]<br>[terminal]<br><br>Can terminals detect key chords (multiple keys simultaneously)?",
      "answer": "Not reliably.",
      "selected": true
    },
    {
      "question": "[tech]<br>[terminal]<br><br>What 2 limitations (in regards to terminal input) makes it very complicated for building advanced TUIs?",
      "answer": "Can't detect keyup/keydown events.<br>Can't detect multiple simultaneous keys.",
      "selected": true
    },
    {
      "question": "[tech]<br>[terminal]<br><br>What input events are terminals typically unable to detect?",
      "answer": "Terminals usually cannot detect key-up and key-down events, only key presses.",
      "selected": true
    },
    {
      "question": "[tech]<br>[terminal]<br><br>Why do terminals often confuse TAB with Ctrl+I?",
      "answer": "Many terminals send the same ASCII code (0x09) for both, making them indistinguishable.",
      "selected": true
    },
    {
      "question": "[tech]<br>[vim]<br><br>What does this do?<br><br>:.,$s/old/new/g",
      "answer": "\"Replaces old with new from the current line until the end of the file.<br><br><br>In Vim, the comma in :.,$s/old/new/g separates the range of lines on which the substitution command should act.<br><br>Here's a breakdown:<br><br>. \u2192 the current line.<br><br>$ \u2192 the last line of the file.<br><br>.,$ \u2192 means \"\"from the current line to the end of the file\"\".<br><br><br>So:<br><br>:.,$s/old/new/g<br><br>says: \"\"Substitute 'old' with 'new' on every line from the current line (.) through the last line ($), globally on each line (g).\"\"<br><br>The comma is the range separator between the starting and ending lines. \"",
      "selected": true
    },
    {
      "question": "[vim]<br><br>move to first non-blank character of line",
      "answer": "^",
      "selected": true
    },
    {
      "question": "[vscode] [devcontainers]<br><br>In a VSCode Dev Container, how can you avoid permission issues with node_modules without needing a chown in postCreateCommand?",
      "answer": "\"Avoid the permission issue by ensuring that the container always uses the correct user (like node) from the start.<br><br>How to fix it properly:<br><br>1. In your Dockerfile, set the final USER to node:<br><br>USER node<br><br>2. In your devcontainer.json, ensure the container runs as the same user:<br><br>\"\"remoteUser\"\": \"\"node\"\"<br><br>3. Also, avoid creating node_modules or running npm install as root during image build.<br><br>---<br><br>By aligning the build-time and runtime user, node_modules is always owned by the correct user (node), so no sudo chown is needed in postCreateCommand.\"",
      "selected": true
    },
    {
      "question": "[vscode] [windsurf]<br><br>How do you increase / decrease the width of the secondary sidebar (right sidebar)?",
      "answer": "\"You don't.<br><br>Workaround: <br><br>1. set keybinding to increase/decrease width of main view.<br>2. Hide/Show secondary sidebar (CMD+Alt+B) and sidebar (CMD+B), and then use keybindings to increase/decrease view width.<br><br> {<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"key\"\": \"\"cmd+alt+j\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"command\"\": \"\"runCommands\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"args\"\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"commands\"\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   \"\"workbench.action.decreaseViewWidth\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]<br>&nbsp;&nbsp;&nbsp;&nbsp; }<br>},<br><br>{<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"key\"\": \"\"cmd+alt+i\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"command\"\": \"\"runCommands\"\",<br>&nbsp;&nbsp;&nbsp;&nbsp; \"\"args\"\": {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"commands\"\": [<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"\"workbench.action.increaseViewWidth\"\"<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ]<br>&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp; }\"",
      "selected": true
    },
    {
      "question": "[vscode] keyboard<br><br>focus on explorer and highlight current file that's open",
      "answer": "Shift + CMD + E",
      "selected": true
    },
    {
      "question": "[vscode]<br><br>Back n forth between surrounding [ &amp; ], { &amp; }, ( &amp; ), etc",
      "answer": "CMD + Shift + \\",
      "selected": true
    },
    {
      "question": "[vscode]<br><br>Hide/Show Bottom Panel (Problems, Output, Debug Console, Terminal, etc)",
      "answer": "CMD + J",
      "selected": true
    },
    {
      "question": "[vscode]<br><br>How to add a keyboard shortcut for any command?",
      "answer": "\"Find the command using Shift+CMD+P<br>Select the settings (gear icon),<br>then click on \"\"Keybinding\"\"\"",
      "selected": true
    },
    {
      "question": "[vscode]<br><br>Reopen last closed editor",
      "answer": "Cmd+Shift+T",
      "selected": true
    },
    {
      "question": "[vscode]<br><br>Say I have a .vscode/tasks.json file but no .vscode/launch.json flle.<br><br>How do I run it?",
      "answer": "Shift+CMD+B",
      "selected": true
    },
    {
      "question": "[vscode]<br><br>What option for Alt+B, Alt+F so it stops producing characters like&nbsp;\u222b\u0192?<br><br>1. What is the name of the specific setting?<br>2. What is the namespace for this setting?",
      "answer": "set to True: <br>macOptionIsMeta<br><br>Namespace: <br>terminal.integrated<br><br>full setting key: terminal.integrated.macOptionIsMeta",
      "selected": true
    },
    {
      "question": "[vscode]<br><br>What to do in VSCode if the file explorer keeps scrolling automatically?",
      "answer": "\"Search in settings for&nbsp;<span style=\"\"white-space: pre-wrap;\"\">explorer.autoReveal and set to False.</span>\"",
      "selected": true
    },
    {
      "question": "jsconfig.json files",
      "answer": "You can only have one that is used per project.<br><br>You can have more than one in a monorepo but I think from the current file VSCode will look up the directory tree and laod the first one it finds. So if I have one in the main monorepo folder, and none in the packages/util folder then it will use that one. But if I also have one inside of packages/util then it will use that one.",
      "selected": true
    },
    {
      "question": "vscode: close all tabs",
      "answer": "Command + Alt + T",
      "selected": true
    },
    {
      "question": "vscode: swap back n forth between two tabs",
      "answer": "CTRL+tab",
      "selected": true
    }
  ],
  "stats": {
    "file1_total": 2164,
    "file2_total": 2172,
    "identical": 1669,
    "different": 4,
    "only_file1": 64,
    "only_file2": 69
  },
  "file1_name": "macOS Export",
  "file2_name": "Android Export",
  "file1_path": "/Users/luketych/Dev/_productivity/anki-diff_between_backups/src/uploads/anki-export-macos.txt",
  "file2_path": "/Users/luketych/Dev/_productivity/anki-diff_between_backups/src/uploads/anki-export-android.txt"
}